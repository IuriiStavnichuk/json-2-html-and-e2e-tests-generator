<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="ru" lang="ru">
<head><meta content="text/html; charset=utf-8" http-equiv="Content-Type" /><title>
  AngularJS. Руководство разработчика &gt;&gt; Переводы полностью переехали на сайт angular.ru Любые правки осуществляются там. Translate into Russian. Translation result &mdash;
 Translated by humans</title><link rel="SHORTCUT ICON" href="http://translatedby.com/appmedia/images/favicon.ico" /><link href="http://translatedby.com/appmedia/css/all.r1362919340.css" rel="stylesheet" type="text/css" media="all" /><link rel="next" href="?page=8" id="NextLink" /><link rel="prev" href="?page=6" id="PrevLink" /><meta name="description" content="Welcome to the angular Developer Guide. If you are here to learn the details of how to use angular to develop web apps, you&#39;ve come to the right place.

If you are completely or relatively unfamiliar with angular, you may want to check out one or both of the following documents before returning here to the Developer Guide:

Перевод переехал на сайт angular.ru. Дальнейшая доработка осуществляется там" /><script type="text/javascript">
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-34411261-1']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
    </script></head><body class=""><div id="overallcontainer"><div id="li-counter"><!--LiveInternet counter--><script type="text/javascript"><!--
document.write("<img src='http://counter.yadro.ru/hit?r"+
escape(document.referrer)+((typeof(screen)=="undefined")?"":
";s"+screen.width+"*"+screen.height+"*"+(screen.colorDepth?
screen.colorDepth:screen.pixelDepth))+";u"+escape(document.URL)+
";"+Math.random()+
"' width=1 height=1 alt=''>")//--></script><!--/LiveInternet--></div><div id="header" class="clearfix"><ul id="metalinks"><li><a rel="nofollow" href="/accounts/login_openid/?next=/you/angularjs-developer-guide/into-ru/">Log in with OpenID</a></li><li><a rel="nofollow" href="/accounts/login_auth/?next=/you/angularjs-developer-guide/into-ru/">Log in with password</a></li><li><a href="/accounts/register/?next=/you/angularjs-developer-guide/into-ru/">Sign up</a></li></ul><ul id="languages" class="clearfix"><li>

            English

    </li><li><a href="/i18n/setlang/?language=ru">Русский</a></li><li><a href="/i18n/setlang/?language=uk">Українська</a></li><li><a href="/i18n/setlang/?language=be">Беларуская</a></li><li><a href="/i18n/setlang/?language=lt">Lietuvių</a></li><li><a href="/i18n/setlang/?language=zh-cn">中文</a></li></ul><!-- { % endcache % } --><div id="upper-menus"><div id="logobar"><div class="b-"><div class="rt-"><div class="rb-"><h2><a href="/"><img align="bottom" class="logo no-print inline" src="http://translatedby.com/appmedia/images/logo.gif" alt="translatedby.com" width="112" height="17" /><img class="logo print-only inline" src="http://translatedby.com/appmedia/images/logo-print.gif" alt="translatedby.com" width="112" height="17" /></a></h2><h3>you!</h3></div></div></div></div><ul id="mainmenu"><li><a href="/you/into-en/inprocess/">In progress</a></li>
    <li><a href="/you/into-en/draft/">Almost finished</a></li>
    <li><a href="/you/into-en/published/">Finished</a></li>

    <li style="margin-right: 0"><form action=" /search/" id="cse-search-box"><div><input type="hidden" name="cx" value="006082210759370867236:l4iowugudym" /><input type="hidden" name="cof" value="FORID:9" /><input type="hidden" name="ie" value="UTF-8" /><input type="text" name="q" class="query" size="31" /><input type="submit" name="sa" value="Search" /></div></form><!--script type="text/javascript" src="http://www.google.com/coop/cse/brand?form=cse-search-box&lang=ru"></script--></li></ul></div></div><div id="mainbody" class="clearfix"><div class="content"><table cellspacing="0" class="w100"><tr><td width="60%"><h1>AngularJS. Руководство разработчика &gt;&gt; Переводы полностью переехали на сайт angular.ru Любые правки осуществляются там</h1><div class="translation-meta"><address><a href="/you/authors/1197/">Google</a>, &ldquo;<a href="/you/angularjs-developer-guide/original/">AngularJS. Developer Guide</a>&rdquo;,
              public
              translation <strong>into Russian</strong> from English
              <span class="dynalink" toggletarget="#about-translation" >More about this translation</span>.
            </address><div id="about-translation" style="display:none"><a href="/you/angularjs-developer-guide/original/">Original</a>.

             <small>Submitted by <a href="/tamtakoe/">tamtakoe</a> 14.04.2013.</small><br /><small>

            Tags:
              <a href="/you/tags/%27developer%20guide%27/">&#39;developer guide&#39;</a>,
              <a href="/you/tags/angular/">angular</a>,
              <a href="/you/tags/angularjs/">angularjs</a>.


          <br/>
          Submitted for translation by <a href="/tamtakoe/">tamtakoe</a> 14.04.2013.

          </small><blockquote>

                    Welcome to the angular Developer Guide. If you are here to learn the details of how to use angular to develop web apps, you&#39;ve come to the right place.

If you are completely or relatively unfamiliar with angular, you may want to check out one or both of the following documents before returning here to the Developer Guide:

Перевод переехал на сайт angular.ru. Дальнейшая доработка осуществляется там

            </blockquote></div></div><p><small><span class="noprint"><a href="/you/angularjs-developer-guide/original/?show-translation-form=1">Translate into another language</a>.</span></small></p></td><td width="20%" class=""></td><td width="20%" class="participants-column" rowspan="2"></td></tr><!--tr><td colspan="2"></td></tr--></table><ul class="tabs no-print clearfix"><li><a href="/you/angularjs-developer-guide/into-ru/stats/ ">
      Statistics
    </a></li><li><a href="/you/angularjs-developer-guide/into-ru/participants/ ">
      Participants
    </a></li><li><a href="/you/angularjs-developer-guide/into-ru/trans/ ">
      Translate&nbsp;into Russian
    </a></li><li><b><span class="cn tl"></span><span class="cn tr"></span>
      Translation result
    </b></li><li><strong>



    32% translated in draft.









      </strong></li></ul><div class="clearfix"><div class="content-column"><div class="pad-"><div class="published-content"><a class="p-l-" name="part3767197" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767197"><span class="p-s-"></span></a><div class="fragment"><p>&gt;&gt;&gt; Содержание</p></div><a class="p-l-" name="part3767198" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767198"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3767199" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767199"><span class="p-s-"></span></a><div class="fragment"><p>Инициализация</p></div><a class="p-l-" name="part3767200" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767200"><span class="p-s-"></span></a><div class="fragment"><p>HTML Компилятор</p></div><a class="p-l-" name="part3767201" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767201"><span class="p-s-"></span></a><div class="fragment"><p>Основные понятия</p></div><a class="p-l-" name="part3767202" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767202"><span class="p-s-"></span></a><div class="fragment"><p>Директивы</p></div><a class="p-l-" name="part3767203" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767203"><span class="p-s-"></span></a><div class="fragment"><p>Выражения</p></div><a class="p-l-" name="part3767204" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767204"><span class="p-s-"></span></a><div class="fragment"><p>Формы</p></div><a class="p-l-" name="part3767205" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767205"><span class="p-s-"></span></a><div class="fragment"><p> i18n и l10n</p></div><a class="p-l-" name="part3767206" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767206"><span class="p-s-"></span></a><div class="fragment"><p>Совместимость с Internet Explorer</p></div><a class="p-l-" name="part3767207" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767207"><span class="p-s-"></span></a><div class="fragment"><p>Введение</p></div><a class="p-l-" name="part3767208" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767208"><span class="p-s-"></span></a><div class="fragment"><p>Модули</p></div><a class="p-l-" name="part3767209" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767209"><span class="p-s-"></span></a><div class="fragment"><p>Области видимости</p></div><a class="p-l-" name="part3767210" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767210"><span class="p-s-"></span></a><div class="fragment"><p>Типы</p></div><a class="p-l-" name="part3767211" href="/you/angularjs-developer-guide/into-ru/trans/?page=1#part3767211"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение зависимости</p></div><a class="p-l-" name="part3767212" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767212"><span class="p-s-"></span></a><div class="fragment"><p>О MVC в Angular</p></div><a class="p-l-" name="part3767213" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767213"><span class="p-s-"></span></a><div class="fragment"><p>Компонент Model</p></div><a class="p-l-" name="part3767214" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767214"><span class="p-s-"></span></a><div class="fragment"><p>Компонент Controller</p></div><a class="p-l-" name="part3767215" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767215"><span class="p-s-"></span></a><div class="fragment"><p>Компонент View</p></div><a class="p-l-" name="part3767216" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767216"><span class="p-s-"></span></a><div class="fragment"><p>Комплексное (E2E) тестирование</p></div><a class="p-l-" name="part3767217" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767217"><span class="p-s-"></span></a><div class="fragment"><p>Шаблоны в Angular</p></div><a class="p-l-" name="part3767218" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767218"><span class="p-s-"></span></a><div class="fragment"><p>Работа с CSS в Angular</p></div><a class="p-l-" name="part3767219" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767219"><span class="p-s-"></span></a><div class="fragment"><p>Привязка данных в Angular</p></div><a class="p-l-" name="part3767220" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767220"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры в Angular</p></div><a class="p-l-" name="part3767221" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767221"><span class="p-s-"></span></a><div class="fragment"><p>Создание фильтров</p></div><a class="p-l-" name="part3767222" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767222"><span class="p-s-"></span></a><div class="fragment"><p>Использование фильтров</p></div><a class="p-l-" name="part3767223" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767223"><span class="p-s-"></span></a><div class="fragment"><p>Сервисы в Angular </p></div><a class="p-l-" name="part3767224" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767224"><span class="p-s-"></span></a><div class="fragment"><p>Использование $location</p></div><a class="p-l-" name="part3767225" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767225"><span class="p-s-"></span></a><div class="fragment"><p>Создание сервисов</p></div><a class="p-l-" name="part3767226" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767226"><span class="p-s-"></span></a><div class="fragment"><p>Инъекция сервисов в контроллеры</p></div><a class="p-l-" name="part3767227" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767227"><span class="p-s-"></span></a><div class="fragment"><p>Управление зависимостями сервисов</p></div><a class="p-l-" name="part3767228" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767228"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование сервисов</p></div><a class="p-l-" name="part3767229" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767229"><span class="p-s-"></span></a><div class="fragment"><p>Понимание сервисов в Angular </p></div><a class="p-l-" name="part3767230" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767230"><span class="p-s-"></span></a><div class="fragment"><p>Юнит-тестирование</p></div><a class="p-l-" name="part3767231" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767231"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767232" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767232"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767233" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767233"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767234" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767234"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767235" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767235"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767236" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767236"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767237" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767237"><span class="p-s-"></span></a><div class="fragment"><p>-</p></div><a class="p-l-" name="part3767238" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767238"><span class="p-s-"></span></a><div class="fragment"><p>&gt;&gt;&gt;</p></div><a class="p-l-" name="part3767239" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767239"><span class="p-s-"></span></a><div class="fragment"><p>ОБЗОР</p></div><a class="p-l-" name="part3767240" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767240"><span class="p-s-"></span></a><div class="fragment"><p>Что такое Angular?</p></div><a class="p-l-" name="part3767241" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767241"><span class="p-s-"></span></a><div class="fragment"><p>AngularJS — структурированный фреймворк для динамических web-приложений. Позволяет использовать HTML в качестве языка шаблонов, а так же расширять HTML-синтаксис, чтобы код вашего приложения выглядел кратко и лаконично. Используя входящие в набор связывание данных (data binding) и внедрение зависимости (dependency injection), вы так же уменьшаете количество своего кода. И все это написано на JavaScript и работает с любой серверной технологией.</p></div><a class="p-l-" name="part3767242" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767242"><span class="p-s-"></span></a><div class="fragment"><p>Angular это то, чем был бы HTML, будь он предназначен для приложений. HTML замечательный декларативный язык для статических документов. Он не содержит многого для создания приложений, и, как результат, построение в нем web-приложений сводится к тому чтобы обмануть браузер, заставив его делать то, что я хочу.</p></div><a class="p-l-" name="part3767243" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767243"><span class="p-s-"></span></a><div class="fragment"><p>Несоответствия между динамическими приложениями и статическими документами часто решаются следующими способами:</p></div><a class="p-l-" name="part3767244" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767244"><span class="p-s-"></span></a><div class="fragment"><p>библиотеки — наборы функций, которые часто используются при создании веб-приложений.  Вы расширяете свой код и вызываете функции из библиотеки, когда считаете это необходимым. Например, jQuery;</p></div><a class="p-l-" name="part3767245" href="/you/angularjs-developer-guide/into-ru/trans/?page=2#part3767245"><span class="p-s-"></span></a><div class="fragment"><p>фреймворки — определенные реализации веб-приложений, где ваш код детализирует логику. Фреймворк берет на себя управление и вызывает ваш код в тех случаях, когда ему необходимо сделать что-то специфичное для приложения. Например, knockout, sproutcore и т. д.</p></div><a class="p-l-" name="part3767246" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767246"><span class="p-s-"></span></a><div class="fragment"><p>Angular предлагает другой подход. Он пытается свести к минимуму несоответствие между документоориентированным HTML и потребностями приложения путем создания новых HTML-конструкций. Angular обучает браузер новому синтаксису с помощью конструкций, называемых директивами. Можно привести следующие примеры: </p></div><a class="p-l-" name="part3767247" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767247"><span class="p-s-"></span></a><div class="fragment"><p>Связывание данных {{}}</p></div><a class="p-l-" name="part3767248" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767248"><span class="p-s-"></span></a><div class="fragment"><p>Управление структурой DOM для повторяющихся/скрываемых фрагментов DOM.</p></div><a class="p-l-" name="part3767249" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767249"><span class="p-s-"></span></a><div class="fragment"><p>Работа с формами (в т. ч. валидация).</p></div><a class="p-l-" name="part3767250" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767250"><span class="p-s-"></span></a><div class="fragment"><p>Назначение логики DOM-элементам</p></div><a class="p-l-" name="part3767251" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767251"><span class="p-s-"></span></a><div class="fragment"><p>Группировка HTML-кода в повторно используемых компонентах.</p></div><a class="p-l-" name="part3767252" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767252"><span class="p-s-"></span></a><div class="fragment"><p>Комплексные (End-to-end ) решения</p></div><a class="p-l-" name="part3767253" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767253"><span class="p-s-"></span></a><div class="fragment"><p>Angular позиционируется как законченное решение в разработке веб-приложений. Это означает, что он не отдельная часть общей головоломки построения веб-приложения, а является целым комплексом. Это дает право Angular&#39;у указывать на то, как должны строиться CRUD-приложения. Но, в то же время, можно быть уверенным, что его мнение по этому поводу — лишь отправная точка, которую вы можете легко изменить. Из коробки Angular предлагает следующее:</p></div><a class="p-l-" name="part3767254" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767254"><span class="p-s-"></span></a><div class="fragment"><p>Все, что нужно при построении CRUD-приложения — это связывание данных, основные директивы шаблонов, валидация форм, маршрутизация, внешнее связывание, повторно применяемые компоненты, внедрение зависимостей.</p></div><a class="p-l-" name="part3767255" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767255"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование: модульные тесты, end-to-end тесты, имитаторы, средства тестирования.</p></div><a class="p-l-" name="part3767256" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767256"><span class="p-s-"></span></a><div class="fragment"><p>Базовое приложение со структурой директорий и скриптом тестирования в качестве отправной точки.</p></div><a class="p-l-" name="part3767257" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767257"><span class="p-s-"></span></a><div class="fragment"><p>Область применения Angular</p></div><a class="p-l-" name="part3767258" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767258"><span class="p-s-"></span></a><div class="fragment"><p>Angular упрощает разработку приложений предоставляя разработчику более высокий уровень абстракции. Как за любую абстракцию, за это приходится платить гибкостью. Другими словами, Angular подойдет не для каждого приложения. Angular создавался для CRUD приложений. К счастью, CRUD приложения составляют как минимум 90% всех веб приложений. Но важно понимать, когда Angular будет хорошим выбором, а когда - не очень.</p></div><a class="p-l-" name="part3767259" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767259"><span class="p-s-"></span></a><div class="fragment"><p>Игры и редакторы интерфейса - это яркие примеры очень интенсивных и сложных манипуляций с DOM. Эти виды приложений отличаются от CRUD приложений, и, как результат, не подходят для Angular. В этом случае что-то более близкое к железу, как, например, jQuery, может быть гораздо лучшим вариантом.</p></div><a class="p-l-" name="part3767260" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767260"><span class="p-s-"></span></a><div class="fragment"><p>Вводный пример Angular</p></div><a class="p-l-" name="part3767261" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767261"><span class="p-s-"></span></a><div class="fragment"><p>Ниже представлено типичное CRUD приложение с формой. Значения из формы проходят проверку и используются для формирования результата, который приводится к определенной локали. Вот базовые концепции, с которыми может столкнуться разработчик приложения:</p></div><a class="p-l-" name="part3767262" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767262"><span class="p-s-"></span></a><div class="fragment"><p>привязка модели данных к UI.</p></div><a class="p-l-" name="part3767263" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767263"><span class="p-s-"></span></a><div class="fragment"><p>запись, чтение и проверка пользовательского ввода.</p></div><a class="p-l-" name="part3767264" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767264"><span class="p-s-"></span></a><div class="fragment"><p>расчет новых значений на основе модели.</p></div><a class="p-l-" name="part3767265" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767265"><span class="p-s-"></span></a><div class="fragment"><p>форматирование и локализация вывода</p></div><a class="p-l-" name="part3767266" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767266"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767267" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767267"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767268" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767268"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767269" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767269"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767270" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767270"><span class="p-s-"></span></a><div class="fragment"><p>Комплексный (E2E) тест</p></div><a class="p-l-" name="part3767271" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767271"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767272" href="/you/angularjs-developer-guide/into-ru/trans/?page=3#part3767272"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767273" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767273"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767274" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767274"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767275" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767275"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767276" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767276"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767277" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767277"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767278" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767278"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;InvoiceCntl&quot;&gt;</p></div><a class="p-l-" name="part3767279" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767279"><span class="p-s-"></span></a><div class="fragment"><p>&lt;b&gt;Счет-фактура:&lt;/b&gt;</p></div><a class="p-l-" name="part3767280" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767280"><span class="p-s-"></span></a><div class="fragment"><p>&lt;br&gt;</p></div><a class="p-l-" name="part3767281" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767281"><span class="p-s-"></span></a><div class="fragment"><p>&lt;br&gt;</p></div><a class="p-l-" name="part3767282" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767282"><span class="p-s-"></span></a><div class="fragment"><p>&lt;table&gt;</p></div><a class="p-l-" name="part3767283" href="/you/angularjs-developer-guide/into-ru/trans/?page=4#part3767283"><span class="p-s-"></span></a><div class="fragment"><p>&lt;tr&gt;&lt;td&gt;Количество&lt;/td&gt;&lt;td&gt;Цена&lt;/td&gt;&lt;/tr&gt;</p></div><a class="p-l-" name="part3767284" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767284"><span class="p-s-"></span></a><div class="fragment"><p>&lt;tr&gt;</p></div><a class="p-l-" name="part3767285" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767285"><span class="p-s-"></span></a><div class="fragment"><p>&lt;td&gt;&lt;input type=&quot;integer&quot; min=&quot;0&quot; ng-model=&quot;qty&quot; required &gt;&lt;/td&gt;</p></div><a class="p-l-" name="part3767286" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767286"><span class="p-s-"></span></a><div class="fragment"><p>&lt;td&gt;&lt;input type=&quot;number&quot; ng-model=&quot;cost&quot; required &gt;&lt;/td&gt;</p></div><a class="p-l-" name="part3767287" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767287"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/tr&gt;</p></div><a class="p-l-" name="part3767288" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767288"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/table&gt;</p></div><a class="p-l-" name="part3767289" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767289"><span class="p-s-"></span></a><div class="fragment"><p>&lt;hr&gt;</p></div><a class="p-l-" name="part3767290" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767290"><span class="p-s-"></span></a><div class="fragment"><p>&lt;b&gt;Итого:&lt;/b&gt; {{qty * cost | currency}}</p></div><a class="p-l-" name="part3767291" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767291"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767292" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767292"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767293" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767293"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767294" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767294"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767295" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767295"><span class="p-s-"></span></a><div class="fragment"><p>Счет-фактура:</p></div><a class="p-l-" name="part3767296" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767296"><span class="p-s-"></span></a><div class="fragment"><p>Стоимость Количество</p></div><a class="p-l-" name="part3767297" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767297"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767298" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767298"><span class="p-s-"></span></a><div class="fragment"><p>Итого: $19.95</p></div><a class="p-l-" name="part3767299" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767299"><span class="p-s-"></span></a><div class="fragment"><p>Сначала попробуйте живой просмотр, а затем давайте разберем пример и опишем, что происходит.</p></div><a class="p-l-" name="part3767300" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767300"><span class="p-s-"></span></a><div class="fragment"><p>В теге &lt;html&gt;, мы указываем, что это Angular.js приложение с ng-app директивой. Ng-app будет вызывать Angular.js к автоматическому инициализированию вашего приложения.</p></div><a class="p-l-" name="part3767301" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767301"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767302" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767302"><span class="p-s-"></span></a><div class="fragment"><p>Мы загружаем Angular.js используя тэг &lt;script&gt;:</p></div><a class="p-l-" name="part3767303" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767303"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/?.?.?/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767304" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767304"><span class="p-s-"></span></a><div class="fragment"><p>Посредством атрибута ng-model в тегах &lt;input&gt; Angular.js автоматически устанавливает двухстороннее связывание данных, и мы также демонстрируем некоторые простые проверки входных данных: </p></div><a class="p-l-" name="part3767305" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767305"><span class="p-s-"></span></a><div class="fragment"><p>Количество: &lt;input type=&quot;integer&quot; min=&quot;0&quot; ng-model=&quot;qty&quot; required &gt;</p></div><a class="p-l-" name="part3767306" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767306"><span class="p-s-"></span></a><div class="fragment"><p>Стоимость: &lt;input type=&quot;number&quot; ng-model=&quot;cost&quot; required &gt;</p></div><a class="p-l-" name="part3767307" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767307"><span class="p-s-"></span></a><div class="fragment"><p>Эти виджеты выглядят вполне нормально, но учтите следующие моменты:</p></div><a class="p-l-" name="part3767308" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767308"><span class="p-s-"></span></a><div class="fragment"><p>Когда страница будет загружена, Angular.js автоматически привяжет имена из вводимых виджетов (qty и cost) к переменным с одноименными названиями. Думайте об этих переменных как о «модели» из шаблона проектирования Модель-Вид-Контроллер (MVC).</p></div><a class="p-l-" name="part3767309" href="/you/angularjs-developer-guide/into-ru/trans/?page=5#part3767309"><span class="p-s-"></span></a><div class="fragment"><p>Обратите внимание, что HTML виджет ввода имеет особые полномочия. Ввод считается недействительным и подсвечивается красным, когда вы вводите неверные данные или оставляете поля ввода пустыми. Это новое поведение виджета делает его проще для осуществления проверки обычных полей в CRUD-приложениях.</p></div><a class="p-l-" name="part3767310" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767310"><span class="p-s-"></span></a><div class="fragment"><p>И, наконец, магические {{ двойные фигурные скобки }}:</p></div><a class="p-l-" name="part3767311" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767311"><span class="p-s-"></span></a><div class="fragment"><p>Итого: {{qty * cost | currency}}</p></div><a class="p-l-" name="part3767312" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767312"><span class="p-s-"></span></a><div class="fragment"><p>Конструкцией {{_выражение_}} в Angular обозначается связывание данных (data-binding). Само выражение может представлять собой сочетание собственно выражения и фильтра: {{выражение | фильтр}}. Angular содержит фильтры для форматирования отображаемых данных.</p></div><a class="p-l-" name="part3767313" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767313"><span class="p-s-"></span></a><div class="fragment"><p>В приведенном выше примере, выражение в двойных фигурных скобках указывает Angular&#39;у «связать данные, которые мы получили из полей ввода, перемножить их друг на друга, и вывести полученное число в денежном формате»</p></div><a class="p-l-" name="part3767314" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767314"><span class="p-s-"></span></a><div class="fragment"><p>Обратите внимание, что мы достигли такого поведения, ни вызывая методы Angular, ни путем внедрения специализированного поведения фреймворка. Мы добились такого поведения, потому что браузер вел себя в соответствие с тем, что необходимо для динамического веб-приложения, а не с тем, что нужно для статических документов. Angular снизил сложность до того уровня, когда вызов библиотеки или фреймфорка не требуются.</p></div><a class="p-l-" name="part3767315" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767315"><span class="p-s-"></span></a><div class="fragment"><p>Дзен Angular</p></div><a class="p-l-" name="part3767316" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767316"><span class="p-s-"></span></a><div class="fragment"><p>Angular создан с уверенностью в том что, декларативный код лучше императивного когда требуется создать UI и связать компоненты между собой, с другой стороны императивный код прекрасно подходит для выражения бизнес логики.</p></div><a class="p-l-" name="part3767317" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767317"><span class="p-s-"></span></a><div class="fragment"><p>Это хорошая идея разделить манипуляции с DOM и логику приложения. Это разделение позволяет упростить тестирование кода.</p></div><a class="p-l-" name="part3767318" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767318"><span class="p-s-"></span></a><div class="fragment"><p>Очень, очень хорошо относится к тестированию с такой же важностью как и к написанию приложения. Сложность тестирования  во многом зависит от того как структурирован код. </p></div><a class="p-l-" name="part3767319" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767319"><span class="p-s-"></span></a><div class="fragment"><p>Прекрасной идеей является разделение клиентской части приложения от серверной. Это позволяет вести разработку параллельно и повторно использовать обе части.</p></div><a class="p-l-" name="part3767320" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767320"><span class="p-s-"></span></a><div class="fragment"><p>В действительности очень полезно если Фреймворк направляет разработчиков сквозь весь процесс построения приложения: начиная с дизайна UI, через написание бизнес-логики, к тестированию.</p></div><a class="p-l-" name="part3767321" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767321"><span class="p-s-"></span></a><div class="fragment"><p>Всегда хорошо делать рутинные задачи тривиальными и сложные возможными.</p></div><a class="p-l-" name="part3767322" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767322"><span class="p-s-"></span></a><div class="fragment"><p>Angular освобождает вас от следующих рутинных операций:</p></div><a class="p-l-" name="part3767323" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767323"><span class="p-s-"></span></a><div class="fragment"><p>Регистрация функций обратного вызова: Регистрация функций обратного вызова захламляет ваш код, не давая увидеть лес за деревьями. Удаление шаблонного кода, такого как функции обратного вызова это хорошо. Это значительно уменьшает количество кода, которое надо написать, но и позволяет увидеть то что делает приложение.</p></div><a class="p-l-" name="part3767324" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767324"><span class="p-s-"></span></a><div class="fragment"><p>Программное манипулирование DOM:  Манипулирование HTML DOM - краеугольный камень AJAX приложений, но оно очень утомительно и ненадежно. Декларативно описывая как должен меняться UI в зависимости от изменения состояния приложения, вы освобождаетесь от низкоуровневых манипуляций с DOM. Большинству приложений, написанных с помощью Angular, никогда не придется программно манипулировать DOM, хотя вы это можете это делать если захотите.</p></div><a class="p-l-" name="part3767325" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767325"><span class="p-s-"></span></a><div class="fragment"><p>Маршалинг данных из/в UI: Большинство операций в AJAX приложениях составляют CRUD - операции. Поток данных от сервера к внутреннему  объекту, а затем к HTML форме, позволяющий пользователям изменять форму, валидирующий форму и показывающий ошибки валидации, и, затем, возвращающийся во внутреннюю модель и затем на сервер, создает много шаблонного кода.  Angular  избавляется от большей части такого кода, оставляя код, описывающий общий поток данных в приложении, а не детали реализации. </p></div><a class="p-l-" name="part3767326" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767326"><span class="p-s-"></span></a><div class="fragment"><p>Написание тонны кода только для того что бы что-то работало: Обычно вам необходимо написать много дополнительного кода для того что бы получить простое &quot;Hello World&quot; AJAX приложение. С помощью Angular  вы можете быстро создать ваше приложение используя сервисы, которые автоматически встраиваются в ваше приложение в DI стиле библиотеки Guice. Это позволяет быстро приступить к разработке вашего приложения. В качестве бонуса вы получите полный контроль над инициализацией в автоматизированных тестах.</p></div><a class="p-l-" name="part3767327" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767327"><span class="p-s-"></span></a><div class="fragment"><p>Смотреть презентацию об Angular</p></div><a class="p-l-" name="part3767328" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767328"><span class="p-s-"></span></a><div class="fragment"><p>Презентация Angular за май 2012</p></div><a class="p-l-" name="part3767329" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767329"><span class="p-s-"></span></a><div class="fragment"><p>Быстрый старт</p></div><a class="p-l-" name="part3767330" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767330"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3767331" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767331"><span class="p-s-"></span></a><div class="fragment"><p>На этой странице проиллюстрирован процесс инициализации Angular и показано, как провести инициализацию вручную, если возникнет такая необходимость.</p></div><a class="p-l-" name="part3767332" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767332"><span class="p-s-"></span></a><div class="fragment"><p>Тег &lt;script&gt; в Angular</p></div><a class="p-l-" name="part3767333" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767333"><span class="p-s-"></span></a><div class="fragment"><p>Этот пример иллюстрирует рекомендованный способ интеграции Angular, используя, то что мы называем, автоматической инициализацией. </p></div><a class="p-l-" name="part3767334" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767334"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767335" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767335"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot; ng-app&gt;</p></div><a class="p-l-" name="part3767336" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767336"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767337" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767337"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3767338" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767338"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;angular.js&quot;&gt;</p></div><a class="p-l-" name="part3767339" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767339"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767340" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767340"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767341" href="/you/angularjs-developer-guide/into-ru/trans/?page=6#part3767341"><span class="p-s-"></span></a><div class="fragment"><p>Размещайте тэг &lt;script&gt; в конце страницы. Располагая его подобным образом вы уменьшаете время загрузки вашего приложения, потому что загрузка HTML не будет заблокирована загрузкой  angular.js. Последнюю версию можно найти на http://code.angularjs.org. Пожалуйста, не используйте эту ссылку в вашем боевом коде, т.к. это создаст брешь в безопасности сайта. Для экспериментов использование этой ссылки вполне подходит.</p></div><a class="p-l-" name="part3767342" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767342"><span class="p-s-"></span></a><div class="fragment"><p>Файл angular-[version].js содержит удобный для восприятия код и подходит для разработки и отладки. </p></div><a class="p-l-" name="part3767343" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767343"><span class="p-s-"></span></a><div class="fragment"><p>А файл  angular-[version].min.js содержит минифицированный и обсуфицированный код, и подходит для применения в продакшене.</p></div><a class="p-l-" name="part3767344" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767344"><span class="p-s-"></span></a><div class="fragment"><p>Разместите ng-app в корне вашего приложения, обычно это тэг &lt;html&gt;, если вы хотите чтобы angular автоматически загрузил ваше приложение.</p></div><a class="p-l-" name="part3767345" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767345"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767346" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767346"><span class="p-s-"></span></a><div class="fragment"><p>Если нужна поддержка IE7, то необходимо добавить id=&quot;ng-app&quot;</p></div><a class="p-l-" name="part3767347" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767347"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app id=&quot;ng-app&quot;&gt;</p></div><a class="p-l-" name="part3767348" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767348"><span class="p-s-"></span></a><div class="fragment"><p>Если вы хотите использовать старый синтаксис директив ng: вам необходимо включить xml-пространство имен что бы IE не выдал ошибку. (Эта возможность включена по историческим причинам, но мы не рекомендуем её использовать.)</p></div><a class="p-l-" name="part3767349" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767349"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot;&gt;</p></div><a class="p-l-" name="part3767350" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767350"><span class="p-s-"></span></a><div class="fragment"><p>Автоматическая инициализация</p></div><a class="p-l-" name="part3767351" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767351"><span class="p-s-"></span></a><div class="fragment"><p>Angular автоматически инициализируется во время события DOMContentLoaded, в это время Angular ищет ng-app директиву, обозначающую корень вашего приложения. Если она найдена то Angular выполнит следующие действия: </p></div><a class="p-l-" name="part3767352" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767352"><span class="p-s-"></span></a><div class="fragment"><p>загрузит модуль связанный с директивой.</p></div><a class="p-l-" name="part3767353" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767353"><span class="p-s-"></span></a><div class="fragment"><p>создаст injector для приложения</p></div><a class="p-l-" name="part3767354" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767354"><span class="p-s-"></span></a><div class="fragment"><p>скомпилирует DOM-дерево, корнем которого будет являться элемент, содержащий директиву ng-app. Это позволяет задействовать только часть DOM для приложения Angular.</p></div><a class="p-l-" name="part3767355" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767355"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767356" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767356"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;optionalModuleName&quot;&gt;</p></div><a class="p-l-" name="part3767357" href="/you/angularjs-developer-guide/into-ru/trans/?page=7#part3767357"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767358" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767358"><span class="p-s-"></span></a><div class="fragment"><p>Я могу сложить: {{ 1+2 }}.</p></div><a class="p-l-" name="part3767359" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767359"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;angular.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767360" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767360"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767361" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767361"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767362" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767362"><span class="p-s-"></span></a><div class="fragment"><p>Ручная инициализация</p></div><a class="p-l-" name="part3767363" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767363"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы лучше контролировать процесс инициализации, можно использовать загрузку вручную. Например, когда необходимо включить загрузчик скриптов или выполнить какие-то действия перед компиляцией страницы Angular&#39;ом.</p></div><a class="p-l-" name="part3767364" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767364"><span class="p-s-"></span></a><div class="fragment"><p>Ниже пример инициализации Angular вручную. Пример эквивалентен использованию ng-app директивы.</p></div><a class="p-l-" name="part3767365" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767365"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767366" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767366"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot;&gt;</p></div><a class="p-l-" name="part3767367" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767367"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767368" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767368"><span class="p-s-"></span></a><div class="fragment"><p>Привет {{&#39;World&#39;}}!</p></div><a class="p-l-" name="part3767369" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767369"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/angular.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767370" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767370"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script&gt;</p></div><a class="p-l-" name="part3767371" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767371"><span class="p-s-"></span></a><div class="fragment"><p>angular.element(document).ready(function() {</p></div><a class="p-l-" name="part3767372" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767372"><span class="p-s-"></span></a><div class="fragment"><p>angular.bootstrap(document);</p></div><a class="p-l-" name="part3767373" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767373"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767374" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767374"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/script&gt;</p></div><a class="p-l-" name="part3767375" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767375"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767376" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767376"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767377" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767377"><span class="p-s-"></span></a><div class="fragment"><p>Вот последовательность действий, которой вы должны следовать:</p></div><a class="p-l-" name="part3767378" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767378"><span class="p-s-"></span></a><div class="fragment"><p>После загрузки страницы и всех скриптов, найдите корень HTML шаблона, который, как правило, совпадает с корнем документа.</p></div><a class="p-l-" name="part3767379" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767379"><span class="p-s-"></span></a><div class="fragment"><p>Вызовите api/angular.bootstrap для того что бы скомпилировать шаблон в исполняемое двунаправленное приложение.</p></div><a class="p-l-" name="part3767380" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767380"><span class="p-s-"></span></a><div class="fragment"><p>HTML компилятор</p></div><a class="p-l-" name="part3767381" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767381"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3767382" href="/you/angularjs-developer-guide/into-ru/trans/?page=8#part3767382"><span class="p-s-"></span></a><div class="fragment"><p>HTML компилятор, встроенный в Angular, дает возможность разработчику обучить браузер новому HTML синтаксису. Компилятор позволяет вам добавить функциональность любому HTML элементу, атрибуту или даже создать новые HTML элементы или  атрибуты с произвольными функциональными возможностями. В angular подобные расширения функциональности называются директивами.</p></div><a class="p-l-" name="part3767383" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767383"><span class="p-s-"></span></a><div class="fragment"><p>В HTML существует множество конструкций для форматирования статичных документов в декларативном стиле. Например, если что-либо должно быть отцентрировано, не нужно подробно объяснять браузеру как поделить ширину окна пополам, чтобы найти центр, затем совместить найденную точку с центром блока текста и, наконец, вывести текст. Вместо этого к нужному элементу добавляется атрибут align=&quot;center&quot;. В этом и есть мощь декларативного языка.</p></div><a class="p-l-" name="part3767384" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767384"><span class="p-s-"></span></a><div class="fragment"><p>Но декларативный подход ограничен, так как не позволяет «обучить» браузер новому синтаксису. Например, не существует простого способа разместить текст со смещением в одну треть ширины, а не по середине. В данном случае не помешала бы возможность введения в HTML новых синтаксических конструкций.</p></div><a class="p-l-" name="part3767385" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767385"><span class="p-s-"></span></a><div class="fragment"><p>Angular уже содержит некоторые директивы для решения распространённых задач, которые могут пригодиться в построении любого приложения. Мы также ожидаем, что вы будете создавать новые, специфические для вашего приложения, директивы. Эти директивы послужат своеобразным предметно-ориентированным языком (DSL) для построения вашего приложения.</p></div><a class="p-l-" name="part3767386" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767386"><span class="p-s-"></span></a><div class="fragment"><p>Вся магия происходит прямо в браузере, от вас не требуется изменять логику на сервере или производить дополнительную предкомпиляцию.</p></div><a class="p-l-" name="part3767387" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767387"><span class="p-s-"></span></a><div class="fragment"><p>Компилятор</p></div><a class="p-l-" name="part3767388" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767388"><span class="p-s-"></span></a><div class="fragment"><p>Компилятор — это angular-сервис, который сканирует DOM в поисках специальных атрибутов. Процесс компиляции делится на две фазы:</p></div><a class="p-l-" name="part3767389" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767389"><span class="p-s-"></span></a><div class="fragment"><p>Компиляция: просмотр DOM и подготовка всех директив. Результатом этой фазы является функция линковки.</p></div><a class="p-l-" name="part3767390" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767390"><span class="p-s-"></span></a><div class="fragment"><p>Линковка: слияние директив и их областей видимости для получения динамического вида. Любые изменения модели в области видимости моментально отображаются в представлении, а любые взаимодействия пользователя с представлением обновляют модель. Таким образом, модель, хранящаяся в области видимости, становится единственным «актуальным источником» в приложении.</p></div><a class="p-l-" name="part3767391" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767391"><span class="p-s-"></span></a><div class="fragment"><p>Некоторые директивы, такие как ng-repeat, создают новые DOM-элементы для каждого элемента в коллекции, к которой они применены. Наличие двух фаз — компиляции и линковки — повышает эффективность, так как сам шаблон необходимо скомпилировать лишь один раз, а затем слинковать для каждой новой копии.</p></div><a class="p-l-" name="part3767392" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767392"><span class="p-s-"></span></a><div class="fragment"><p>Директива</p></div><a class="p-l-" name="part3767393" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767393"><span class="p-s-"></span></a><div class="fragment"><p>Директива — это действия, которые нужно произвести если в процессе разбора/компиляции документа встретился определённый HTML-код. Директивы могут быть размещены в названиях элементов, атрибутах, именах классов и даже в комментариях. Ниже приведены примеры вызова ng-bind, имеющие одинаковый эффект:</p></div><a class="p-l-" name="part3767394" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767394"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-bind=&quot;exp&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3767395" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767395"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span class=&quot;ng-bind: exp;&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3767396" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767396"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ng-bind&gt;&lt;/ng-bind&gt;</p></div><a class="p-l-" name="part3767397" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767397"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!-- Директива: ng-bind exp --&gt;</p></div><a class="p-l-" name="part3767398" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767398"><span class="p-s-"></span></a><div class="fragment"><p>Директива — это обычная функция, которая вызывается, когда компилятор встречает соответствующую конструкцию в DOM. Обратитесь к API директив за дополнительной информацией о том, как писать директивы.</p></div><a class="p-l-" name="part3767399" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767399"><span class="p-s-"></span></a><div class="fragment"><p>Пример директивы, которая делает элемент перетаскиваемым. Обратите внимание на атрибут draggable у &lt;span&gt;</p></div><a class="p-l-" name="part3767400" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767400"><span class="p-s-"></span></a><div class="fragment"><p>Источник</p></div><a class="p-l-" name="part3767401" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767401"><span class="p-s-"></span></a><div class="fragment"><p>Редактирование</p></div><a class="p-l-" name="part3767402" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767402"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767403" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767403"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767404" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767404"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767405" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767405"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;drag&quot;&gt;</p></div><a class="p-l-" name="part3767406" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767406"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767407" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767407"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767408" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767408"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767409" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767409"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767410" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767410"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767411" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767411"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span draggable&gt;Потяни меня&lt;/span&gt;</p></div><a class="p-l-" name="part3767412" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767412"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767413" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767413"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767414" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767414"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767415" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767415"><span class="p-s-"></span></a><div class="fragment"><p>Потяни меня</p></div><a class="p-l-" name="part3767416" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767416"><span class="p-s-"></span></a><div class="fragment"><p>Наличие атрибута draggable у любого элемента наделяет его новым поведением. Красота этого подхода состоит в том, что мы научили браузер новому трюку. Расширили «словарный запас» браузера, сделав это понятным способом для каждого, кто знаком с HTML.</p></div><a class="p-l-" name="part3767417" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767417"><span class="p-s-"></span></a><div class="fragment"><p>Понимание представления (View)</p></div><a class="p-l-" name="part3767418" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767418"><span class="p-s-"></span></a><div class="fragment"><p>Существует множество JavaScript-шаблонизаторов. Большинство из них получает на вход статичную строку-шаблон и совмещают её с данными, получая новую строку. Эта строка затем вставляется в нужный элемент с помощью innerHTML.</p></div><a class="p-l-" name="part3767419" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767419"><span class="p-s-"></span></a><div class="fragment"><p>Это означает, что любое изменение данных требует повторного вычисления шаблона и его вставки с помощью innerHTML в DOM. Недостатками данного подхода являются: проблемы при вводе данных пользователем из-за постоянной перезаписи вводимых данных, сложность поддержания данных в актуальном состоянии, сложность процесса обновления DOM, малая выразительность.</p></div><a class="p-l-" name="part3767420" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767420"><span class="p-s-"></span></a><div class="fragment"><p>Angular использует другой подход. Компилятор Angular использует DOM с директивами, а не просто строковые шаблоны. Результатом является связующая функция, которая будучи скомбинированной с областью видимости модели дает результат для динамического представления. Связывание представления и области видимости модели происходит абсолютно прозрачно. Никаких действий для обновления представления от разработчика не требуется. И, поскольку не используется никаких манипуляций с innerHTML, нет причин для возникновения проблем с вводом данных пользователем. Кроме того, директивы Angular могут содержать не только привязку текста, но и конструкции, определяющие поведение.</p></div><a class="p-l-" name="part3767421" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767421"><span class="p-s-"></span></a><div class="fragment"><p>Angular.js позволяет получить стабильный DOM. Это означает, что DOM элемент, привязанный к определённой части модели не меняется на протяжении всего срока привязки.  Это означает, что код может заполучить элементы и регистрировать обработчики событий, и знать, что ссылки не будут уничтожены процессом слияния данных шаблона.</p></div><a class="p-l-" name="part3767422" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767422"><span class="p-s-"></span></a><div class="fragment"><p>ОСНОВНЫЕ ПОНЯТИЯ</p></div><a class="p-l-" name="part3767423" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767423"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3767424" href="/you/angularjs-developer-guide/into-ru/trans/?page=9#part3767424"><span class="p-s-"></span></a><div class="fragment"><p>Этот документ дает представление об основных компонентах Angular и о том, как они работают вместе. Вот они:</p></div><a class="p-l-" name="part3767425" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767425"><span class="p-s-"></span></a><div class="fragment"><p>Быстрый старт — программа Hello world</p></div><a class="p-l-" name="part3767426" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767426"><span class="p-s-"></span></a><div class="fragment"><p>Среда исполнения — обзор среды исполнения Angular</p></div><a class="p-l-" name="part3767427" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767427"><span class="p-s-"></span></a><div class="fragment"><p>Область видимости — связующее звено между представлением и контроллером</p></div><a class="p-l-" name="part3767428" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767428"><span class="p-s-"></span></a><div class="fragment"><p>Контроллер — поведение программы</p></div><a class="p-l-" name="part3767429" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767429"><span class="p-s-"></span></a><div class="fragment"><p>Модель — данные программы</p></div><a class="p-l-" name="part3767430" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767430"><span class="p-s-"></span></a><div class="fragment"><p>Представление — то что видят пользователи</p></div><a class="p-l-" name="part3767431" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767431"><span class="p-s-"></span></a><div class="fragment"><p>Директивы — расширение синтаксиса HTML </p></div><a class="p-l-" name="part3767432" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767432"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры — форматируют данные в соответствии с локализацией</p></div><a class="p-l-" name="part3767433" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767433"><span class="p-s-"></span></a><div class="fragment"><p>Инжектор — собирает ваше приложение</p></div><a class="p-l-" name="part3767434" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767434"><span class="p-s-"></span></a><div class="fragment"><p>Модуль — настраивает инжектор </p></div><a class="p-l-" name="part3767435" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767435"><span class="p-s-"></span></a><div class="fragment"><p>$ — пространство имен Angular</p></div><a class="p-l-" name="part3767436" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767436"><span class="p-s-"></span></a><div class="fragment"><p>Быстрый старт</p></div><a class="p-l-" name="part3767437" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767437"><span class="p-s-"></span></a><div class="fragment"><p>Пример, который мы разберем для начала, и который соответствует диаграмме ниже.</p></div><a class="p-l-" name="part3767438" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767438"><span class="p-s-"></span></a><div class="fragment"><p>1. Браузер загружает HTML-документ и строит DOM.</p></div><a class="p-l-" name="part3767439" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767439"><span class="p-s-"></span></a><div class="fragment"><p>2. Браузер загружает angular.js скрипт</p></div><a class="p-l-" name="part3767440" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767440"><span class="p-s-"></span></a><div class="fragment"><p>3. Angular ожидает события DOMContentLoaded</p></div><a class="p-l-" name="part3767441" href="/you/angularjs-developer-guide/into-ru/trans/?page=10#part3767441"><span class="p-s-"></span></a><div class="fragment"><p>4. Angular ищет ng-app директиву, которая определяет область действия фреймворка</p></div><a class="p-l-" name="part3767442" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767442"><span class="p-s-"></span></a><div class="fragment"><p>5. Модуль, указанный в директиве ng-app (если таковой имеется), используется для конфигурации $injector&#39;а</p></div><a class="p-l-" name="part3767443" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767443"><span class="p-s-"></span></a><div class="fragment"><p>6. $injector используется для создания $compile-сервиса и $rootScope</p></div><a class="p-l-" name="part3767444" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767444"><span class="p-s-"></span></a><div class="fragment"><p>7. $compile-сервис используется для компиляции DOM и связки его с $rootScope</p></div><a class="p-l-" name="part3767445" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767445"><span class="p-s-"></span></a><div class="fragment"><p>8. Директива ng-init присваивает значение World свойству name в области видимости (scope)</p></div><a class="p-l-" name="part3767446" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767446"><span class="p-s-"></span></a><div class="fragment"><p>9. {{name}} преобразует выражение в Hello World!</p></div><a class="p-l-" name="part3767447" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767447"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767448" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767448"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767449" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767449"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767450" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767450"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767451" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767451"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767452" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767452"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767453" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767453"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767454" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767454"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767455" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767455"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767456" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767456"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p ng-init=&quot; name=&#39;World&#39; &quot;&gt;Hello {{name}}!&lt;/p</p></div><a class="p-l-" name="part3767457" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767457"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767458" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767458"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767459" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767459"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767460" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767460"><span class="p-s-"></span></a><div class="fragment"><p>Hello World!</p></div><a class="p-l-" name="part3767461" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767461"><span class="p-s-"></span></a><div class="fragment"><p>Среда исполнения</p></div><a class="p-l-" name="part3767462" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767462"><span class="p-s-"></span></a><div class="fragment"><p>Диаграмма и пример ниже описывают взаимодействие Angular с циклом обработки событий браузера</p></div><a class="p-l-" name="part3767463" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767463"><span class="p-s-"></span></a><div class="fragment"><p>Цикл обработки событий браузера ожидает событие. Под событием в данном случае подразумеваются события связанные с взаимодействием с пользователем, таймером или сетью (например, ответ сервера)</p></div><a class="p-l-" name="part3767464" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767464"><span class="p-s-"></span></a><div class="fragment"><p>Колбэк получает управление, и выполняется в JavaScript контексте. Данная функция может изменять DOM структуру документа.</p></div><a class="p-l-" name="part3767465" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767465"><span class="p-s-"></span></a><div class="fragment"><p>По завершении выполнения функции обратного вызова браузер покидает контекст скрипта и перерисовывает область вывода в соответствии с изменениями DOM.</p></div><a class="p-l-" name="part3767466" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767466"><span class="p-s-"></span></a><div class="fragment"><p>Angular изменяет обычный поток выполнения JavaScript, организуя собственный цикл обработки событий. Это разделяет контекст JavaScript на классический и контекст исполнения Angular. При этом только операции, выполненные в контексте исполнения Angular получат выгоду от связывания данных обеспечиваемых Angular, обработки исключений, отслеживания свойств и прочих операций. Вы также можете использовать вызов $apply() для выхода в контекст исполнения Angular из обычного JavaScript. Но имейте в виду, что в большинстве мест (в контроллерах, сервисах) $apply() уже был вызван директивой, обрабатывающей то или иное событие. Явный вызов $apply() необходим только для реализации своих собственных обработчиков событий или когда вы работаете со механизмом колбэков в сторонних библиотеках. </p></div><a class="p-l-" name="part3767467" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767467"><span class="p-s-"></span></a><div class="fragment"><p>Вход в контекст исполнения Angular выполняется вызовом scope.$apply(stimulusFn), где stimulusFn это функция, содержащая код, который необходимо выполнить в контексте Angular.</p></div><a class="p-l-" name="part3767468" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767468"><span class="p-s-"></span></a><div class="fragment"><p>Angular выполняет stimulusFn(), которая обычно модифицирует состояние приложения.</p></div><a class="p-l-" name="part3767469" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767469"><span class="p-s-"></span></a><div class="fragment"><p>Angular входит в цикл выполнения $digest. Этот цикл состоит из двух меньших циклов, один из которых обрабатывает очередь $evalAsync а второй — список $watch. Цикл $digest выполняется до тех пор пока модель не синхронизируется. Это означает, что $evalAsync опустошится, а список $watch не зафиксирует каких-либо изменений.</p></div><a class="p-l-" name="part3767470" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767470"><span class="p-s-"></span></a><div class="fragment"><p>Очередь $evalAsync используется для планирования выполнения кода, который должен быть выполнен за пределами текущего кадра стека, но до перерисовки браузером области вывода. Обычно это делается с помощью вызова setTimeout(0), но данный подход довольно медленный и может вызвать мерцание при перерисовке браузером области вывода после каждого события.</p></div><a class="p-l-" name="part3767471" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767471"><span class="p-s-"></span></a><div class="fragment"><p>Список $watch фактически является списком выражений, которые могли быть изменены с предыдущей итерации цикла. Если изменение обнаружено, то функция $watch вызывается и, как правило, обновляет соответствующие элементы DOM новым значением.  </p></div><a class="p-l-" name="part3767472" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767472"><span class="p-s-"></span></a><div class="fragment"><p>Когда цикл $digest завершается, поток выполнения покидает Angular и контекст JavaScript. Это также влечет за собой перерисовку области вывода для отражения всех произошедших изменений в DOM.</p></div><a class="p-l-" name="part3767473" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767473"><span class="p-s-"></span></a><div class="fragment"><p>Ниже приведено объяснение, как в примере Hello world достигается эффект связывания данных когда пользователь вводит текст в поле ввода. </p></div><a class="p-l-" name="part3767474" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767474"><span class="p-s-"></span></a><div class="fragment"><p>Во время фазы компиляции:</p></div><a class="p-l-" name="part3767475" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767475"><span class="p-s-"></span></a><div class="fragment"><p>директива ng-model совместно с директивой input устанавливает обработчик сообщений keydown в элементе управления &lt;input&gt;.</p></div><a class="p-l-" name="part3767476" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767476"><span class="p-s-"></span></a><div class="fragment"><p>вставка {{name}} устанавливает функцию $watch для уведомления изменения имени.</p></div><a class="p-l-" name="part3767477" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767477"><span class="p-s-"></span></a><div class="fragment"><p>Во время фазы выполнения:</p></div><a class="p-l-" name="part3767478" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767478"><span class="p-s-"></span></a><div class="fragment"><p>Нажатие клавиши «X» вызывает событие браузера keydown в элементе управления input.</p></div><a class="p-l-" name="part3767479" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767479"><span class="p-s-"></span></a><div class="fragment"><p>Директива input перехватывает изменение значения элемента input и вызывает функцию $apply(&quot;name = &#39;X&#39;;&quot;) для обновления модели приложения внутри контекста выполнения Angular.</p></div><a class="p-l-" name="part3767480" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767480"><span class="p-s-"></span></a><div class="fragment"><p>Angular применяет выражение name=&#39;X&#39; к модели.</p></div><a class="p-l-" name="part3767481" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767481"><span class="p-s-"></span></a><div class="fragment"><p>Запускается цикл обработки $digest</p></div><a class="p-l-" name="part3767482" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767482"><span class="p-s-"></span></a><div class="fragment"><p>Список $watch обнаруживает изменение свойства name и уведомляет вставку {{name}}, которая в свою очередь обновляет DOM.</p></div><a class="p-l-" name="part3767483" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767483"><span class="p-s-"></span></a><div class="fragment"><p>Angular выходит из своего контекста выполнения, что в свою очередь завершает обработку события keydown вместе с завершением выполнения контекста JavaScript.</p></div><a class="p-l-" name="part3767484" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767484"><span class="p-s-"></span></a><div class="fragment"><p>Браузер перерисовывает область вывода для обновления текста.</p></div><a class="p-l-" name="part3767485" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767485"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767486" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767486"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767487" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767487"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767488" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767488"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767489" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767489"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767490" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767490"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767491" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767491"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767492" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767492"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767493" href="/you/angularjs-developer-guide/into-ru/trans/?page=11#part3767493"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767494" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767494"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;name&quot;&gt;</p></div><a class="p-l-" name="part3767495" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767495"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;Hello {{name}}!&lt;/p&gt;</p></div><a class="p-l-" name="part3767496" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767496"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767497" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767497"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767498" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767498"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767499" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767499"><span class="p-s-"></span></a><div class="fragment"><p>Hello !</p></div><a class="p-l-" name="part3767500" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767500"><span class="p-s-"></span></a><div class="fragment"><p>Область видимости</p></div><a class="p-l-" name="part3767501" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767501"><span class="p-s-"></span></a><div class="fragment"><p>Область видимости отвечает за отслеживание изменений в определенной части модели и обеспечивает контекст исполнения для выражений. Области видимости вкладываются друг в друга, создавая иерархическую структуру, тесно связанную с структурой DOM. (Смотри документацию по отдельным директивам для выяснения, какие директивы приводят к созданию новых областей видимости.)</p></div><a class="p-l-" name="part3767502" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767502"><span class="p-s-"></span></a><div class="fragment"><p>Следующий пример показывает, как значения выражения {{name}} вычисляются по разному в зависимости от контекста в котором они вычисляются.  За примером следует диаграмма изображающая границы областей видимости.</p></div><a class="p-l-" name="part3767503" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767503"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767504" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767504"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767505" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767505"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767506" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767506"><span class="p-s-"></span></a><div class="fragment"><p>style.css</p></div><a class="p-l-" name="part3767507" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767507"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767508" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767508"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767509" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767509"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767510" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767510"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767511" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767511"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767512" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767512"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767513" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767513"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767514" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767514"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767515" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767515"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;GreetCtrl&quot;&gt;</p></div><a class="p-l-" name="part3767516" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767516"><span class="p-s-"></span></a><div class="fragment"><p>Hello {{name}}!</p></div><a class="p-l-" name="part3767517" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767517"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767518" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767518"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;ListCtrl&quot;&gt;</p></div><a class="p-l-" name="part3767519" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767519"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ol&gt;</p></div><a class="p-l-" name="part3767520" href="/you/angularjs-developer-guide/into-ru/trans/?page=12#part3767520"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;name in names&quot;&gt;{{name}}&lt;/li&gt;</p></div><a class="p-l-" name="part3767521" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767521"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ol&gt;</p></div><a class="p-l-" name="part3767522" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767522"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767523" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767523"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767524" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767524"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767525" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767525"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767526" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767526"><span class="p-s-"></span></a><div class="fragment"><p>Hello World!</p></div><a class="p-l-" name="part3767527" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767527"><span class="p-s-"></span></a><div class="fragment"><p>Igor</p></div><a class="p-l-" name="part3767528" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767528"><span class="p-s-"></span></a><div class="fragment"><p>Misko</p></div><a class="p-l-" name="part3767529" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767529"><span class="p-s-"></span></a><div class="fragment"><p>Vojta</p></div><a class="p-l-" name="part3767530" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767530"><span class="p-s-"></span></a><div class="fragment"><p>Контроллер</p></div><a class="p-l-" name="part3767531" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767531"><span class="p-s-"></span></a><div class="fragment"><p>Контроллер это код, находящийся позади представления. Его работа — создавать модель и транслировать ее в представление вместе с колбэками. Представление — это проекция области видимости на шаблон (HTML-шаблон). Область видимости — это своего рода клей, обеспечивающий синхронизацию данных модели с представлением и перенаправляющий события в контроллер.</p></div><a class="p-l-" name="part3767532" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767532"><span class="p-s-"></span></a><div class="fragment"><p>Разделение контроллера и представления крайне важно, поскольку:</p></div><a class="p-l-" name="part3767533" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767533"><span class="p-s-"></span></a><div class="fragment"><p>Контроллер написан на JavaScript. JavaScript — императивный язык. Императивность отлично подходит для описания поведения приложения. Контроллер не должен содержать никакой информации об правилах отображения данных (ссылок на DOM, или HTML-фрагментов) </p></div><a class="p-l-" name="part3767534" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767534"><span class="p-s-"></span></a><div class="fragment"><p>Шаблон представления написан на HTML. HTML — декларативный язык. Декларативность отлично подходит для описания пользовательского интерфейса. Представление не должно содержать никаких элементов, описывающих поведение.</p></div><a class="p-l-" name="part3767535" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767535"><span class="p-s-"></span></a><div class="fragment"><p>Поскольку контроллер не заботится об отображении, то может существовать множество представлений, связанных с одним контроллером. Это важный факт для бесшовного изменения способа отображения, поддержки различных устройство-зависимых представлений (мобильный или десктоп), а также обеспечения тестируемости.</p></div><a class="p-l-" name="part3767536" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767536"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767537" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767537"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767538" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767538"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767539" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767539"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767540" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767540"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767541" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767541"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767542" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767542"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767543" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767543"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767544" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767544"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767545" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767545"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767546" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767546"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767547" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767547"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;MyCtrl&quot;&gt;</p></div><a class="p-l-" name="part3767548" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767548"><span class="p-s-"></span></a><div class="fragment"><p>Hello {{name}}!</p></div><a class="p-l-" name="part3767549" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767549"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;action()&quot;&gt;</p></div><a class="p-l-" name="part3767550" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767550"><span class="p-s-"></span></a><div class="fragment"><p>OK</p></div><a class="p-l-" name="part3767551" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767551"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/button&gt;</p></div><a class="p-l-" name="part3767552" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767552"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767553" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767553"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767554" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767554"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767555" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767555"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767556" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767556"><span class="p-s-"></span></a><div class="fragment"><p>Hello World! OK</p></div><a class="p-l-" name="part3767557" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767557"><span class="p-s-"></span></a><div class="fragment"><p>Модель</p></div><a class="p-l-" name="part3767558" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767558"><span class="p-s-"></span></a><div class="fragment"><p>Модель, это данные которые объединяются с шаблоном для генерации представления. Для поддержки интерпретации модели в представление, модель должна быть доступна через ссылки на ее данные в области видимости. В отличии от других фреймворков, Angular не устанавливает никаких ограничений или требований к модели. Нет классов, которые должны наследовать определенные методы для доступа или изменения модели. Модель может как примитивным объектом хранящим пары ключ-значение так и полноценным объектом. В общем, модель это просто обычный JavaScript объект.</p></div><a class="p-l-" name="part3767559" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767559"><span class="p-s-"></span></a><div class="fragment"><p>Представление</p></div><a class="p-l-" name="part3767560" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767560"><span class="p-s-"></span></a><div class="fragment"><p>Представление это то, что видят пользователи. Представление начинает свою жизнь как шаблон, который затем объединяется с данными модели, и в завершении отображается в DOM дереве браузера. Angular имеет абсолютно другой подход к интерпретации представлений, нежели большинство других систем шаблонизации.</p></div><a class="p-l-" name="part3767561" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767561"><span class="p-s-"></span></a><div class="fragment"><p>Другие — большинство систем шаблонизации берут свое начало как специальные HTML строки со специальным языком разметки. Зачастую, разметка шаблона нарушает HTML синтаксис, что означает, что шаблон не может редактироваться в обычном HTML редакторе.  Строка шаблона парсится шаблонизатором и объединяется с данными. Результат объединения это HTML-строка. Эта стока записывается в модель браузера, с использованием вызова innerHTML, которая вынуждает браузер повторно отобразить HTML в области вывода. Когда модель изменяется, весь этот процесс должен повториться. Детализация шаблона определяет и детализацию изменений в DOM. Ключевая особенность тут в том, что система шаблонизации работает со строками.</p></div><a class="p-l-" name="part3767562" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767562"><span class="p-s-"></span></a><div class="fragment"><p>Angular — Angular полностью другой, поскольку его система работы с шаблонами работает с DOM объектами, а не со строками. Шаблон по прежнему написан в виде HTML-стоки но это чистый HTML (а не HTML, разбавленный элементами шаблона). Браузер парсит этот HTML в DOM и этот DOM становится входными данными для шаблонизатора, известного как компилятор. Компилятор ищет директивы, которые в свою очередь определяют отслеживаемые элементы в модели. Результатом является постоянно обновляемое представление, которое не нуждается в повторной генерации на основе измененных данных. Ваша модель становится единственным достоверным источником для вашего представления.</p></div><a class="p-l-" name="part3767563" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767563"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767564" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767564"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767565" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767565"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767566" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767566"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767567" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767567"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767568" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767568"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767569" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767569"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767570" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767570"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767571" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767571"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767572" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767572"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-init=&quot;list = [&#39;Chrome&#39;, &#39;Safari&#39;, &#39;Firefox&#39;, &#39;IE&#39;] &quot;&gt;</p></div><a class="p-l-" name="part3767573" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767573"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;list&quot; ng-list&gt; &lt;br&gt;</p></div><a class="p-l-" name="part3767574" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767574"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;list&quot; ng-list&gt; &lt;br&gt;</p></div><a class="p-l-" name="part3767575" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767575"><span class="p-s-"></span></a><div class="fragment"><p>&lt;pre&gt;list={{list}}&lt;/pre&gt; &lt;br&gt;</p></div><a class="p-l-" name="part3767576" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767576"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ol&gt;</p></div><a class="p-l-" name="part3767577" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767577"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;item in list&quot;&gt;</p></div><a class="p-l-" name="part3767578" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767578"><span class="p-s-"></span></a><div class="fragment"><p>{{item}}</p></div><a class="p-l-" name="part3767579" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767579"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3767580" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767580"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ol&gt;</p></div><a class="p-l-" name="part3767581" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767581"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767582" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767582"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767583" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767583"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767584" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767584"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767585" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767585"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767586" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767586"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767587" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767587"><span class="p-s-"></span></a><div class="fragment"><p>list=[&quot;Chrome&quot;,&quot;Safari&quot;,&quot;Firefox&quot;,&quot;IE&quot;]</p></div><a class="p-l-" name="part3767588" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767588"><span class="p-s-"></span></a><div class="fragment"><p>Chrome</p></div><a class="p-l-" name="part3767589" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767589"><span class="p-s-"></span></a><div class="fragment"><p>Safari</p></div><a class="p-l-" name="part3767590" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767590"><span class="p-s-"></span></a><div class="fragment"><p>Firefox</p></div><a class="p-l-" name="part3767591" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767591"><span class="p-s-"></span></a><div class="fragment"><p>IE</p></div><a class="p-l-" name="part3767592" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767592"><span class="p-s-"></span></a><div class="fragment"><p>Директивы</p></div><a class="p-l-" name="part3767593" href="/you/angularjs-developer-guide/into-ru/trans/?page=13#part3767593"><span class="p-s-"></span></a><div class="fragment"><p>Директивы — это изменение поведения или преобразование DOM модели, связанное с пользовательским атрибутом, именем элемента, или css классом. Директивы позволяют расширять HTML синтаксис, в декларативной форме. Ниже приведен пример связывания данных для директивы contenteditable.</p></div><a class="p-l-" name="part3767594" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767594"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767595" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767595"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767596" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767596"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767597" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767597"><span class="p-s-"></span></a><div class="fragment"><p>style.css</p></div><a class="p-l-" name="part3767598" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767598"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767599" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767599"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767600" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767600"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;directive&quot;&gt;</p></div><a class="p-l-" name="part3767601" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767601"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767602" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767602"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767603" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767603"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767604" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767604"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767605" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767605"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767606" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767606"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div contentEditable=&quot;true&quot; ng-model=&quot;content&quot;&gt;Edit Me&lt;/div&gt;</p></div><a class="p-l-" name="part3767607" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767607"><span class="p-s-"></span></a><div class="fragment"><p>&lt;pre&gt;model = {{content}}&lt;/pre&gt;</p></div><a class="p-l-" name="part3767608" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767608"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767609" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767609"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767610" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767610"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767611" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767611"><span class="p-s-"></span></a><div class="fragment"><p>Отредактируй меня</p></div><a class="p-l-" name="part3767612" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767612"><span class="p-s-"></span></a><div class="fragment"><p>model = Отредактируй меня</p></div><a class="p-l-" name="part3767613" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767613"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры</p></div><a class="p-l-" name="part3767614" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767614"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры осуществляют преобразование данных. Обычно они используются в связке с текущей локалью пользователя, чтобы форматировать данные в специфичный для данной локализации формат. Фильтры близки по духу к конвейерам в UNIX и используют тот же синтаксис | (вертикальная черта)</p></div><a class="p-l-" name="part3767615" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767615"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767616" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767616"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767617" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767617"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767618" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767618"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767619" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767619"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767620" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767620"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767621" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767621"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767622" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767622"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767623" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767623"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767624" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767624"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-init=&quot;list = [&#39;Chrome&#39;, &#39;Safari&#39;, &#39;Firefox&#39;, &#39;IE&#39;] &quot;&gt;</p></div><a class="p-l-" name="part3767625" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767625"><span class="p-s-"></span></a><div class="fragment"><p>Форматирование чисел: {{ 1234567890 | number }} &lt;br&gt;</p></div><a class="p-l-" name="part3767626" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767626"><span class="p-s-"></span></a><div class="fragment"><p>Фильтрация массива &lt;input ng-model=&quot;predicate&quot;&gt;</p></div><a class="p-l-" name="part3767627" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767627"><span class="p-s-"></span></a><div class="fragment"><p>{{ list | filter:predicate | json }}</p></div><a class="p-l-" name="part3767628" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767628"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767629" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767629"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767630" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767630"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767631" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767631"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767632" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767632"><span class="p-s-"></span></a><div class="fragment"><p>Форматирование чисел: 1,234,567,890</p></div><a class="p-l-" name="part3767633" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767633"><span class="p-s-"></span></a><div class="fragment"><p>Фильтрация массива [ &quot;Chrome&quot;, &quot;Safari&quot;, &quot;Firefox&quot;, &quot;IE&quot; ]</p></div><a class="p-l-" name="part3767634" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767634"><span class="p-s-"></span></a><div class="fragment"><p>Модули и Инжектор</p></div><a class="p-l-" name="part3767635" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767635"><span class="p-s-"></span></a><div class="fragment"><p>Инжектор — это надстройщик всех сервисов. Для каждого Angular-приложения существует один и только один инжектор. Инжектор позволяет находить экземпляры объектов по их именам. Инжектор поддерживает внутри себя кэш объектов, таким образом несколько вызовов поиска какого-либо объекта вернут один и тот же экземпляр. Если инжектор ничего не находит, он просит фабрику создать новый экземпляр.</p></div><a class="p-l-" name="part3767636" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767636"><span class="p-s-"></span></a><div class="fragment"><p>Модуль — способ конфигурации экземпляра фабрикой (известной как провайдер) по просьбе инжектора.</p></div><a class="p-l-" name="part3767637" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767637"><span class="p-s-"></span></a><div class="fragment"><p>// Создание модуля</p></div><a class="p-l-" name="part3767638" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767638"><span class="p-s-"></span></a><div class="fragment"><p>var myModule = angular.module(&#39;myModule&#39;, [])</p></div><a class="p-l-" name="part3767639" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767639"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767640" href="/you/angularjs-developer-guide/into-ru/trans/?page=14#part3767640"><span class="p-s-"></span></a><div class="fragment"><p>// Конфигурация инжектора</p></div><a class="p-l-" name="part3767641" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767641"><span class="p-s-"></span></a><div class="fragment"><p>myModule.factory(&#39;serviceA&#39;, function() {</p></div><a class="p-l-" name="part3767642" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767642"><span class="p-s-"></span></a><div class="fragment"><p>return {</p></div><a class="p-l-" name="part3767643" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767643"><span class="p-s-"></span></a><div class="fragment"><p>// поместите сюда код для создания объекта</p></div><a class="p-l-" name="part3767644" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767644"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3767645" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767645"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767646" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767646"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767647" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767647"><span class="p-s-"></span></a><div class="fragment"><p>// создание инжектора и конфигурация его из модуля &#39;myModule&#39;</p></div><a class="p-l-" name="part3767648" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767648"><span class="p-s-"></span></a><div class="fragment"><p>var $injector = angular.injector([&#39;myModule&#39;]);</p></div><a class="p-l-" name="part3767649" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767649"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767650" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767650"><span class="p-s-"></span></a><div class="fragment"><p>// получение объекта из инжектора по имени</p></div><a class="p-l-" name="part3767651" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767651"><span class="p-s-"></span></a><div class="fragment"><p>var serviceA = $injector.get(&#39;serviceA&#39;);</p></div><a class="p-l-" name="part3767652" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767652"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767653" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767653"><span class="p-s-"></span></a><div class="fragment"><p>// всегда истинно из-за внутреннего кэша экземпляров</p></div><a class="p-l-" name="part3767654" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767654"><span class="p-s-"></span></a><div class="fragment"><p>$injector.get(&#39;serviceA&#39;) === $injector.get(&#39;serviceA&#39;);</p></div><a class="p-l-" name="part3767655" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767655"><span class="p-s-"></span></a><div class="fragment"><p>Но самая классная фишка инжектора состоит в том, что он может использоваться для вызова методов и инстанциирования типов. Это как раз та магия, что позволяет методам и типам запрашивать свои зависимости извне, а не искать их самим.</p></div><a class="p-l-" name="part3767656" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767656"><span class="p-s-"></span></a><div class="fragment"><p>// Вы пишете функции типа этой.</p></div><a class="p-l-" name="part3767657" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767657"><span class="p-s-"></span></a><div class="fragment"><p>function doSomething(serviceA, serviceB) {</p></div><a class="p-l-" name="part3767658" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767658"><span class="p-s-"></span></a><div class="fragment"><p>// тут какие-то действия.</p></div><a class="p-l-" name="part3767659" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767659"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3767660" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767660"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767661" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767661"><span class="p-s-"></span></a><div class="fragment"><p>// Angular предоставляет инжектор для вашего приложения</p></div><a class="p-l-" name="part3767662" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767662"><span class="p-s-"></span></a><div class="fragment"><p>var $injector = ...;</p></div><a class="p-l-" name="part3767663" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767663"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767664" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767664"><span class="p-s-"></span></a><div class="fragment"><p>///////////////////////////////////////////////</p></div><a class="p-l-" name="part3767665" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767665"><span class="p-s-"></span></a><div class="fragment"><p>// вот так разруливал зависимости между компонентами в коде ваш дедушка.</p></div><a class="p-l-" name="part3767666" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767666"><span class="p-s-"></span></a><div class="fragment"><p>var serviceA = $injector.get(&#39;serviceA&#39;);</p></div><a class="p-l-" name="part3767667" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767667"><span class="p-s-"></span></a><div class="fragment"><p>var serviceB = $injector.get(&#39;serviceB&#39;);</p></div><a class="p-l-" name="part3767668" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767668"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767669" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767669"><span class="p-s-"></span></a><div class="fragment"><p>// теперь можно вызывать функцию</p></div><a class="p-l-" name="part3767670" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767670"><span class="p-s-"></span></a><div class="fragment"><p>doSomething(serviceA, serviceB);</p></div><a class="p-l-" name="part3767671" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767671"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767672" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767672"><span class="p-s-"></span></a><div class="fragment"><p>///////////////////////////////////////////////</p></div><a class="p-l-" name="part3767673" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767673"><span class="p-s-"></span></a><div class="fragment"><p>// а вот действительно классный способ управления зависимостями.</p></div><a class="p-l-" name="part3767674" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767674"><span class="p-s-"></span></a><div class="fragment"><p>// $injector сам передаст необходимые аргументы функции</p></div><a class="p-l-" name="part3767675" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767675"><span class="p-s-"></span></a><div class="fragment"><p>$injector.invoke(doSomething); // Вот так фреймворк вызывает ваши функции</p></div><a class="p-l-" name="part3767676" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767676"><span class="p-s-"></span></a><div class="fragment"><p>Заметьте, всё что вам нужно написать — это функция и список её зависимостей в аргументах. Когда angular вызывает функцию, он автоматически подставит все параметры.</p></div><a class="p-l-" name="part3767677" href="/you/angularjs-developer-guide/into-ru/trans/?page=15#part3767677"><span class="p-s-"></span></a><div class="fragment"><p>Посмотрите ниже на ClockCtrl и обратите внимание на то как перечислены зависимости в аргументах. Когда ng-controller инстанциирует контроллер, он автоматически предоставит необходимые зависимости. Нет нужды создавать эти компоненты самому, искать уже созданные экземпляры или даже вытаскивать их из инжектора вручную.</p></div><a class="p-l-" name="part3767678" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767678"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767679" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767679"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767680" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767680"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767681" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767681"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767682" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767682"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767683" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767683"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;timeExampleModule&quot;&gt;</p></div><a class="p-l-" name="part3767684" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767684"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767685" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767685"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767686" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767686"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767687" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767687"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767688" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767688"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767689" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767689"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;ClockCtrl&quot;&gt;</p></div><a class="p-l-" name="part3767690" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767690"><span class="p-s-"></span></a><div class="fragment"><p>Текущее время: {{ time.now }}</p></div><a class="p-l-" name="part3767691" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767691"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767692" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767692"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767693" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767693"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767694" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767694"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767695" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767695"><span class="p-s-"></span></a><div class="fragment"><p>Текущее время: Sun Apr 14 2013 17:50:50 GMT+0300 (Московское время (зима))</p></div><a class="p-l-" name="part3767696" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767696"><span class="p-s-"></span></a><div class="fragment"><p>Пространство имен Angular</p></div><a class="p-l-" name="part3767697" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767697"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы предотвратить случайные коллизии имён, Angular добавляет к именам, которые потенциально могут вызвать конфликт, префикс $. Пожалуйста, не используйте префикс $ в своём коде, так как это может конфликтовать с кодом фреймворка.</p></div><a class="p-l-" name="part3767698" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767698"><span class="p-s-"></span></a><div class="fragment"><p>ДИРЕКТИВЫ</p></div><a class="p-l-" name="part3767699" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767699"><span class="p-s-"></span></a><div class="fragment"><p>С помощью директив можно добавить в HTML новую функциональность. В процессе компиляции DOM Angular ищет директивы в HTML и выполняют их. Это позволяет директивам регистрировать поведение или изменения в DOM</p></div><a class="p-l-" name="part3767700" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767700"><span class="p-s-"></span></a><div class="fragment"><p>Angular поставляется со встроенным набором директив, полезных для создания веб-приложений, но может быть расширен так, чтобы превратить HTML в декларативный предметно-ориентированный язык (DSL).</p></div><a class="p-l-" name="part3767701" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767701"><span class="p-s-"></span></a><div class="fragment"><p>Вызов директив из HTML</p></div><a class="p-l-" name="part3767702" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767702"><span class="p-s-"></span></a><div class="fragment"><p>Имена директив описываются в кэмл-стиле, например: ngBind. Имя этой директивы может быть преобразовано кэмл-стиля в снейк-стиль с помощью специальных символов :, - или _. Также директива может начинаться с префикса х-, или data-, чтобы быть совместимой с HTML-валидатором. Примеры возможных имен директив: ng:bind, ng-bind, ng_bind, x-ng-bind and data-ng-bind.</p></div><a class="p-l-" name="part3767703" href="/you/angularjs-developer-guide/into-ru/trans/?page=16#part3767703"><span class="p-s-"></span></a><div class="fragment"><p>Директивы могут быть помещены в имена элементов, атрибутов, имена классов, а также в комментарии. Ниже примеры эквивалентных вызовов директивы MyDir. (Тем не менее, большинство директив ограничены только атрибутами.)</p></div><a class="p-l-" name="part3767704" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767704"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span my-dir=&quot;exp&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3767705" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767705"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span class=&quot;my-dir: exp;&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3767706" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767706"><span class="p-s-"></span></a><div class="fragment"><p>&lt;my-dir&gt;&lt;/my-dir&gt;</p></div><a class="p-l-" name="part3767707" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767707"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!-- directive: my-dir exp --&gt;</p></div><a class="p-l-" name="part3767708" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767708"><span class="p-s-"></span></a><div class="fragment"><p>Директивы могут быть вызваны различными способами, но в конечном счете это будет эквивалентно тому, что показано в следующем примере.</p></div><a class="p-l-" name="part3767709" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767709"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767710" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767710"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767711" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767711"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767712" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767712"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767713" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767713"><span class="p-s-"></span></a><div class="fragment"><p>End to end тест</p></div><a class="p-l-" name="part3767714" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767714"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767715" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767715"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3767716" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767716"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767717" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767717"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767718" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767718"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767719" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767719"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767720" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767720"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767721" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767721"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Ctrl1&quot;&gt;</p></div><a class="p-l-" name="part3767722" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767722"><span class="p-s-"></span></a><div class="fragment"><p>Hello &lt;input ng-model=&#39;name&#39;&gt; &lt;hr/&gt;</p></div><a class="p-l-" name="part3767723" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767723"><span class="p-s-"></span></a><div class="fragment"><p>&amp;lt;span ng:bind=&quot;name&quot;&amp;gt; &lt;span ng:bind=&quot;name&quot;&gt;&lt;/span&gt; &lt;br/&gt;</p></div><a class="p-l-" name="part3767724" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767724"><span class="p-s-"></span></a><div class="fragment"><p>&amp;lt;span ng_bind=&quot;name&quot;&amp;gt; &lt;span ng_bind=&quot;name&quot;&gt;&lt;/span&gt; &lt;br/&gt;</p></div><a class="p-l-" name="part3767725" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767725"><span class="p-s-"></span></a><div class="fragment"><p>&amp;lt;span ng-bind=&quot;name&quot;&amp;gt; &lt;span ng-bind=&quot;name&quot;&gt;&lt;/span&gt; &lt;br/&gt;</p></div><a class="p-l-" name="part3767726" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767726"><span class="p-s-"></span></a><div class="fragment"><p>&amp;lt;span data-ng-bind=&quot;name&quot;&amp;gt; &lt;span data-ng-bind=&quot;name&quot;&gt;&lt;/span&gt; &lt;br/&gt;</p></div><a class="p-l-" name="part3767727" href="/you/angularjs-developer-guide/into-ru/trans/?page=17#part3767727"><span class="p-s-"></span></a><div class="fragment"><p>&amp;lt;span x-ng-bind=&quot;name&quot;&amp;gt; &lt;span x-ng-bind=&quot;name&quot;&gt;&lt;/span&gt; &lt;br/&gt;</p></div><a class="p-l-" name="part3767728" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767728"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767729" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767729"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767730" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767730"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767731" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767731"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3767732" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767732"><span class="p-s-"></span></a><div class="fragment"><p>Hello</p></div><a class="p-l-" name="part3767733" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767733"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng:bind=&quot;name&quot;&gt; angular</p></div><a class="p-l-" name="part3767734" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767734"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng_bind=&quot;name&quot;&gt; angular</p></div><a class="p-l-" name="part3767735" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767735"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-bind=&quot;name&quot;&gt; angular</p></div><a class="p-l-" name="part3767736" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767736"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span data-ng-bind=&quot;name&quot;&gt; angular</p></div><a class="p-l-" name="part3767737" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767737"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span x-ng-bind=&quot;name&quot;&gt; angular</p></div><a class="p-l-" name="part3767738" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767738"><span class="p-s-"></span></a><div class="fragment"><p>Обработка строк</p></div><a class="p-l-" name="part3767739" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767739"><span class="p-s-"></span></a><div class="fragment"><p>Во время компиляции компилятор сканирует текст и атрибуты используя сервис $interpolate для того чтобы узнать, содержат ли они встроенные выражения. Эти выражения регистрируются как наблюдаемые и будет обновляться во время цикла обновления $digest. Пример обработки строк:</p></div><a class="p-l-" name="part3767740" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767740"><span class="p-s-"></span></a><div class="fragment"><p>&lt;a href=&quot;img/{{username}}.jpg&quot;&gt;Hello {{username}}!&lt;/a&gt;</p></div><a class="p-l-" name="part3767741" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767741"><span class="p-s-"></span></a><div class="fragment"><p>Компиляция и сканирование директив</p></div><a class="p-l-" name="part3767742" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767742"><span class="p-s-"></span></a><div class="fragment"><p>Компиляция HTML разделяется на три фазы:</p></div><a class="p-l-" name="part3767743" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767743"><span class="p-s-"></span></a><div class="fragment"><p>Сначала HTML преобразуется в DOM-структуру, с помощью стандартного API браузера. Важно понимать это, потому что шаблоны должны представлять интерпретируемый HTML, в отличие от шаблонов большинства шаблонизаторов, работающих со строками, а не DOM-элементами.</p></div><a class="p-l-" name="part3767744" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767744"><span class="p-s-"></span></a><div class="fragment"><p>Компиляция DOM производится вызовом метода $compile(). Метод обходит DOM и ищет директивы. Если директива найдена, она будет добавлена в список директив, связанных с данным элементом DOM. После того как все директивы для данного элемента DOM были выявлены они сортируются по приоритету и запускаются функции их компиляции compile() . Функция компиляции директивы может изменить структуру DOM и отвечает за передачу функции link() дальнейших указаний. Метод $compile() возвращает комбинированную связующую функцию, которая представляет собой коллекцию всех связующих функций, возвращенных каждой функцией компиляции каждой директивы.</p></div><a class="p-l-" name="part3767745" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767745"><span class="p-s-"></span></a><div class="fragment"><p>Привязка шаблона к области видимости (scope) осуществляется с помощью вызова связывающей функции, возвращенной из предыдущего шага. Это в свою очередь вызовет связывающие функции отдельных директив, разрешит им установить наблюдателей на элементы и начать наблюдение за областью. В результате образуется динамическая связь между областями и DOM. Изменение в области видимости отражается в DOM.</p></div><a class="p-l-" name="part3767746" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767746"><span class="p-s-"></span></a><div class="fragment"><p>var $compile = ...; // внедрение в свой код</p></div><a class="p-l-" name="part3767747" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767747"><span class="p-s-"></span></a><div class="fragment"><p>var scope = ...;</p></div><a class="p-l-" name="part3767748" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767748"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767749" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767749"><span class="p-s-"></span></a><div class="fragment"><p>var html = &#39;&lt;div ng-bind=&quot;exp&quot;&gt;&lt;/div&gt;&#39;;</p></div><a class="p-l-" name="part3767750" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767750"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767751" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767751"><span class="p-s-"></span></a><div class="fragment"><p>// Шаг 1: преобразование HTML в DOM-элемент</p></div><a class="p-l-" name="part3767752" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767752"><span class="p-s-"></span></a><div class="fragment"><p>var template = angular.element(html);</p></div><a class="p-l-" name="part3767753" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767753"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767754" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767754"><span class="p-s-"></span></a><div class="fragment"><p>// Шаг 2: компиляция шаблона</p></div><a class="p-l-" name="part3767755" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767755"><span class="p-s-"></span></a><div class="fragment"><p>var linkFn = $compile(template);</p></div><a class="p-l-" name="part3767756" href="/you/angularjs-developer-guide/into-ru/trans/?page=18#part3767756"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767757" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767757"><span class="p-s-"></span></a><div class="fragment"><p>// Шаг 3: связывание скомпилированного шаблона с областью.</p></div><a class="p-l-" name="part3767758" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767758"><span class="p-s-"></span></a><div class="fragment"><p>linkFn(scope);</p></div><a class="p-l-" name="part3767759" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767759"><span class="p-s-"></span></a><div class="fragment"><p>Причины разделения стадии компиляции и связывания</p></div><a class="p-l-" name="part3767760" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767760"><span class="p-s-"></span></a><div class="fragment"><p>Дочитав до данного раздела вы можете удивиться, зачем процесс разделен  на стадию компиляции и стадию связывания.Для понимания этого давайте посмотрим на реальный пример с репиттором (repeator).</p></div><a class="p-l-" name="part3767761" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767761"><span class="p-s-"></span></a><div class="fragment"><p>Hello {{user}}, you have these actions:</p></div><a class="p-l-" name="part3767762" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767762"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ul&gt;</p></div><a class="p-l-" name="part3767763" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767763"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;action in user.actions&quot;&gt;</p></div><a class="p-l-" name="part3767764" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767764"><span class="p-s-"></span></a><div class="fragment"><p>{{action.description}}</p></div><a class="p-l-" name="part3767765" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767765"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3767766" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767766"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ul&gt;</p></div><a class="p-l-" name="part3767767" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767767"><span class="p-s-"></span></a><div class="fragment"><p>Короткий ответ - функции компиляции и связывания разделены потому что в любой момент изменение модели приводит к изменению в DOM структуре, в данном случае - репиттере. </p></div><a class="p-l-" name="part3767768" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767768"><span class="p-s-"></span></a><div class="fragment"><p>Когда предыдущий пример компилируется, компилятор обходит каждую вершину DOM в поиске директив. Элемент {{User}} - пример директивы интерполяции, а ngRepeat - пример другой директивы. Но при обработке ngRepeat возникает дилемма. Она должна как можно быстрее создавать новые элементы списка &lt;li&gt; для каждого элемента action в user.actions. Это означает, что она должна сохранять &quot;чистую&quot; копию элемента &lt;li&gt; для целей дальнейшего клонирования, и как только вставляется новый элемент action, эта шаблонная копия должна быть склонирована и вставлена в список &lt;ul&gt;. Но клонирования элемента &lt;li&gt; не достаточно. Также необходима его компиляция для того, чтобы такие директивы как {{action.descriptions}} были вычислены в правильной области видимости (scope). Простейшим методом в данном случае была бы простая вставка копии элемента &lt;li&gt; и последующей его компиляции. Но компиляция каждого клонированного элемента была бы слишком медленной, поскольку компиляция требует, чтобы мы обошли все DOM-дерево в поиске директив, и выполнения их.  Если мы поместили бы компиляцию внутрь репиттера, который должен возвратить 100 элементов, то это бы быстро привело к проблемам с производительностью.</p></div><a class="p-l-" name="part3767769" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767769"><span class="p-s-"></span></a><div class="fragment"><p>Решение проблемы — разделить процесс компиляции на две фазы — непосредственно саму компиляцию, при которой все директивы определяются и сортируются по приоритетам, и фазу связывания, при которая связывает экземпляр конкретной области видимости и конкретный экземпляр элемента &lt;li&gt;.  </p></div><a class="p-l-" name="part3767770" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767770"><span class="p-s-"></span></a><div class="fragment"><p>ngRepeat предотвращает компиляцию по иерархии элемента &lt;li&gt;. Вместо этого директива ngRepeat компилирует &lt;li&gt; отдельно. В результатом компиляции элемента &lt;li&gt; является связывающая функция, которая содержит все указания, содержащиеся в элементе &lt;li&gt;, и готовая к прикреплению к конкретному клону элемента &lt;li&gt;. Во время выполнения ngRepeat следит за выражением и за тем как элементы добавляются в массив клонов элемента &lt;li&gt;, создает новые возможности для клонированных элементов &lt;li&gt; и вызывает связующую функцию для клонированного &lt;li&gt;.</p></div><a class="p-l-" name="part3767771" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767771"><span class="p-s-"></span></a><div class="fragment"><p>Резюме:</p></div><a class="p-l-" name="part3767772" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767772"><span class="p-s-"></span></a><div class="fragment"><p>функция компиляции — функция компиляции встречается в директивах относительно редко, так как большинство директив работают с конкретным экземпляром элемента DOM, а не с преобразованием шаблона DOM-элемента. Любые операции, которые могут быть распределены между экземплярами директив должны быть перенесены в функцию компиляции для повышения производительности.</p></div><a class="p-l-" name="part3767773" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767773"><span class="p-s-"></span></a><div class="fragment"><p>связующая функция — директивы редко обходятся без связующей функции. Связующая функция позволяет директиве регистрировать для конкретных экземляров клонированных DOM-элементов, а также копировать содержимое в DOM из области видимости.</p></div><a class="p-l-" name="part3767774" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767774"><span class="p-s-"></span></a><div class="fragment"><p>Запись директив (упрощенно)</p></div><a class="p-l-" name="part3767775" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767775"><span class="p-s-"></span></a><div class="fragment"><p>В этом примере описывается директива, выводящая текущее время.</p></div><a class="p-l-" name="part3767776" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767776"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767777" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767777"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767778" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767778"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767779" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767779"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767780" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767780"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767781" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767781"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;time&quot;&gt;</p></div><a class="p-l-" name="part3767782" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767782"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767783" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767783"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767784" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767784"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767785" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767785"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767786" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767786"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767787" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767787"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Ctrl2&quot;&gt;</p></div><a class="p-l-" name="part3767788" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767788"><span class="p-s-"></span></a><div class="fragment"><p>Date format: &lt;input ng-model=&quot;format&quot;&gt; &lt;hr/&gt;</p></div><a class="p-l-" name="part3767789" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767789"><span class="p-s-"></span></a><div class="fragment"><p>Current time is: &lt;span my-current-time=&quot;format&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3767790" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767790"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767791" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767791"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767792" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767792"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767793" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767793"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3767794" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767794"><span class="p-s-"></span></a><div class="fragment"><p>Date format:</p></div><a class="p-l-" name="part3767795" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767795"><span class="p-s-"></span></a><div class="fragment"><p>Current time is: 4/14/13 5:52:21 PM</p></div><a class="p-l-" name="part3767796" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767796"><span class="p-s-"></span></a><div class="fragment"><p>Запись директив (расширенная версия)</p></div><a class="p-l-" name="part3767797" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767797"><span class="p-s-"></span></a><div class="fragment"><p>Существуют различные способы объявления директивы. Различие заключается в значении возвращаемом фабричной функцией. Можно либо возвращают Объект Определения Директивы (см. ниже), который определяет свойства директивы, или только функцию postLink такого объекта (все другие свойства будут иметь значения по умолчанию).</p></div><a class="p-l-" name="part3767798" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767798"><span class="p-s-"></span></a><div class="fragment"><p>Ниже пример директивы, объявленной с помощью Объекта Определения Директивы:</p></div><a class="p-l-" name="part3767799" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767799"><span class="p-s-"></span></a><div class="fragment"><p>var myModule = angular.module(...);</p></div><a class="p-l-" name="part3767800" href="/you/angularjs-developer-guide/into-ru/trans/?page=19#part3767800"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767801" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767801"><span class="p-s-"></span></a><div class="fragment"><p>myModule.directive(&#39;directiveName&#39;, function factory(injectables) {</p></div><a class="p-l-" name="part3767802" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767802"><span class="p-s-"></span></a><div class="fragment"><p>var directiveDefinitionObject = {</p></div><a class="p-l-" name="part3767803" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767803"><span class="p-s-"></span></a><div class="fragment"><p>priority: 0,</p></div><a class="p-l-" name="part3767804" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767804"><span class="p-s-"></span></a><div class="fragment"><p>template: &#39;&lt;div&gt;&lt;/div&gt;&#39;,</p></div><a class="p-l-" name="part3767805" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767805"><span class="p-s-"></span></a><div class="fragment"><p>templateUrl: &#39;directive.html&#39;,</p></div><a class="p-l-" name="part3767806" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767806"><span class="p-s-"></span></a><div class="fragment"><p>replace: false,</p></div><a class="p-l-" name="part3767807" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767807"><span class="p-s-"></span></a><div class="fragment"><p>transclude: false,</p></div><a class="p-l-" name="part3767808" href="/you/angularjs-developer-guide/into-ru/trans/?page=20#part3767808"><span class="p-s-"></span></a><div class="fragment"><p>restrict: &#39;A&#39;,</p></div><a class="p-l-" name="part3767809" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767809"><span class="p-s-"></span></a><div class="fragment"><p> scope: false,</p></div><a class="p-l-" name="part3767810" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767810"><span class="p-s-"></span></a><div class="fragment"><p> compile: function compile(tElement, tAttrs, transclude) {</p></div><a class="p-l-" name="part3767811" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767811"><span class="p-s-"></span></a><div class="fragment"><p> return {</p></div><a class="p-l-" name="part3767812" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767812"><span class="p-s-"></span></a><div class="fragment"><p> pre: function preLink(scope, iElement, iAttrs, controller) { ... },</p></div><a class="p-l-" name="part3767813" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767813"><span class="p-s-"></span></a><div class="fragment"><p> post: function postLink(scope, iElement, iAttrs, controller) { ... }</p></div><a class="p-l-" name="part3767814" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767814"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3767815" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767815"><span class="p-s-"></span></a><div class="fragment"><p>},</p></div><a class="p-l-" name="part3767816" href="/you/angularjs-developer-guide/into-ru/trans/?page=21#part3767816"><span class="p-s-"></span></a><div class="fragment"><p> link: function postLink(scope, iElement, iAttrs) { ... }</p></div><a class="p-l-" name="part3767817" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767817"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3767818" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767818"><span class="p-s-"></span></a><div class="fragment"><p> return directiveDefinitionObject;</p></div><a class="p-l-" name="part3767819" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767819"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767820" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767820"><span class="p-s-"></span></a><div class="fragment"><p>В большинстве случаев столь тонкий контроль, как показано выше, не нужен и все это можно упростить. Все еще можно вернуть Объект Определения Директивы, но только установка «compile» выполняет свойства Объекта, и положиться на значения по умолчанию для остальных свойств.</p></div><a class="p-l-" name="part3767821" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767821"><span class="p-s-"></span></a><div class="fragment"><p>Поэтому приведенное выше может быть упрощено:</p></div><a class="p-l-" name="part3767822" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767822"><span class="p-s-"></span></a><div class="fragment"><p>var myModule = angular.module(...);</p></div><a class="p-l-" name="part3767823" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767823"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767824" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767824"><span class="p-s-"></span></a><div class="fragment"><p>myModule.directive(&#39;directiveName&#39;, function factory(injectables) {</p></div><a class="p-l-" name="part3767825" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767825"><span class="p-s-"></span></a><div class="fragment"><p>var directiveDefinitionObject = {</p></div><a class="p-l-" name="part3767826" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767826"><span class="p-s-"></span></a><div class="fragment"><p>compile: function compile(tElement, tAttrs) {</p></div><a class="p-l-" name="part3767827" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767827"><span class="p-s-"></span></a><div class="fragment"><p>return function postLink(scope, iElement, iAttrs) { ... }</p></div><a class="p-l-" name="part3767828" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767828"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3767829" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767829"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3767830" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767830"><span class="p-s-"></span></a><div class="fragment"><p>return directiveDefinitionObject;</p></div><a class="p-l-" name="part3767831" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767831"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767832" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767832"><span class="p-s-"></span></a><div class="fragment"><p>Наконец, большинство директив затрагивают себя только с создания экземпляров, а не с шаблонов преобразований, позволяя дальнейшее упрощение.</p></div><a class="p-l-" name="part3767833" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767833"><span class="p-s-"></span></a><div class="fragment"><p>Здесь мы только определим функцию postLink:</p></div><a class="p-l-" name="part3767834" href="/you/angularjs-developer-guide/into-ru/trans/?page=22#part3767834"><span class="p-s-"></span></a><div class="fragment"><p>var myModule = angular.module(...);</p></div><a class="p-l-" name="part3767835" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767835"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767836" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767836"><span class="p-s-"></span></a><div class="fragment"><p>myModule.directive(&#39;directiveName&#39;, function factory(injectables) {</p></div><a class="p-l-" name="part3767837" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767837"><span class="p-s-"></span></a><div class="fragment"><p>myModule.directive(&#39;directiveName&#39;, function factory(injectables) {</p></div><a class="p-l-" name="part3767838" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767838"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767839" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767839"><span class="p-s-"></span></a><div class="fragment"><p>Фабричный метод</p></div><a class="p-l-" name="part3767840" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767840"><span class="p-s-"></span></a><div class="fragment"><p>Фабричный метод отвечает за создание директивы. Он вызывается только один раз, когда компилятор впервые находит директиву. В нем можно выполнить инициализацию. Этот метод вызывается с помощью $injector.invoke который делает его инъекционным с соблюдением всех правил инъекционной аннотации.</p></div><a class="p-l-" name="part3767841" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767841"><span class="p-s-"></span></a><div class="fragment"><p>Директива Определения Объекта</p></div><a class="p-l-" name="part3767842" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767842"><span class="p-s-"></span></a><div class="fragment"><p>В объекте определения директивы содержатся инструкции для компилятора. Атрибуты:</p></div><a class="p-l-" name="part3767843" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767843"><span class="p-s-"></span></a><div class="fragment"><p>name — имя текущей области. Опционально и по умолчанию имя при регистрации.</p></div><a class="p-l-" name="part3767844" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767844"><span class="p-s-"></span></a><div class="fragment"><p>priority — когда есть несколько директив, определенных на одном DOM-элементе, иногда бывает необходимо указать порядок, в котором директивы применяются. Приоритет используется для сортировки директив перед вызовом их функций компиляции. Высший приоритет отдается первой. Порядок директив с одинаковым приоритетом в рамках одной задачи неопределен.</p></div><a class="p-l-" name="part3767845" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767845"><span class="p-s-"></span></a><div class="fragment"><p>terminal — если установлен в true, то приоритетным будет последний набор директив, которые будут выполняться (любые указания для текущего приоритета будут по-прежнему выполняться в порядке приоритета, если он определен).</p></div><a class="p-l-" name="part3767846" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767846"><span class="p-s-"></span></a><div class="fragment"><p>scope— если установлено:</p></div><a class="p-l-" name="part3767847" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767847"><span class="p-s-"></span></a><div class="fragment"><p>true — то новая область будет создана для этой директивы. Если несколько директив на тех же элементах запрашивают новую область, только одна область будет создана. Новое область не распространяется на корневой шаблон, так как корневой шаблон, всегда получает новую область.</p></div><a class="p-l-" name="part3767848" href="/you/angularjs-developer-guide/into-ru/trans/?page=23#part3767848"><span class="p-s-"></span></a><div class="fragment"><p>{} (хэш-объект) — будет создана новая «изолированная» область. «Изолированная» область отличается от обычной тем, что она не прототипически унаследована от родительской области. Это полезно при создании повторно используемых компонентов, которые не должны случайно прочитать или изменить данные в родительской области.</p></div><a class="p-l-" name="part3767849" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767849"><span class="p-s-"></span></a><div class="fragment"><p>«Изолированная» область принимает хэш-объект который устанавливает свойства локальной области, полученные из родительской области. Эти локальные свойства полезны для сглаживания значений для шаблонов. Локальные установки являются хэшем свойств локальной области своего источника:</p></div><a class="p-l-" name="part3767850" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767850"><span class="p-s-"></span></a><div class="fragment"><p>@ или @attr — связывает свойства локальной области со значением атрибута в DOM. Результат всегда является строкой с DOM-атрибутами являющимися так же строками. Если имя атрибута не указано, то оно предполагается таким же как локальное имя. Если учитывается &lt;widget my-attr=&quot;hello {{name}}&quot;&gt; и виджет определения области: {LocalName: &#39;@myAttr&#39;}, то виджет области со свойством LocalName будет отражать интерполированное значение hello, {{Имя}}. При изменении имени атрибута свойство LocalName будет в виджете области. Имя читается из родительской области (не из области компонента).</p></div><a class="p-l-" name="part3767851" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767851"><span class="p-s-"></span></a><div class="fragment"><p>= или =attr — создает двунаправленную связь между свойством локальной области и свойством родительской области, имя которого определено с помощью атрибута attr. Если имя attr  не указано, то имя атрибута считается таким же, как локальное имя. Если учитывается &lt;widget my-attr=&quot;parentModel&quot;&gt; и виджет определения области: {LocalModel: &#39;= myAttr&#39;}, то виджет области со свойством LocalModel будет отражать значение parentModel из родительской области. Любые изменения в parentModel будут отражены в LocalModel и любые изменения в LocalModel будут отражать в parentModel.</p></div><a class="p-l-" name="part3767852" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767852"><span class="p-s-"></span></a><div class="fragment"><p>&amp; или &amp;attr — обеспечивает способ выполнения выражение в контексте родительской области. Если имя attr не указано, то имя атрибута считается таким же, как локальное имя. Если учитывается &lt;widget my-attr=&quot;count = Count + value&quot;&gt; и виджет определения области: {localFn: &#39;&amp; myAttr&#39;}, то изолирование свойства localFn будет указывать на обертку функции для Count = Count + value expression. Часто это желательно, чтобы передать данные из изолированной области через выражение и в родительскую область, что можно сделать через карту имен локальной переменной и значения в выражение wrapper fn. Например, если выражение увеличивается(amount), то можно указать значение amount путем вызова localFn как localFn ({amount: 22}).</p></div><a class="p-l-" name="part3767853" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767853"><span class="p-s-"></span></a><div class="fragment"><p>controller — функция-конструктор контроллера. Экземпляр контроллера создается перед стадией компоновки, и становится доступен другим директивам, если они запросят его по имени (см. запрос атрибута). Это позволяет директивам общаться друг с другом и дополнять поведение друг друга. Контроллер внедряется со следующими локалями:</p></div><a class="p-l-" name="part3767854" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767854"><span class="p-s-"></span></a><div class="fragment"><p>$scope — текущая область, связанная с элементом</p></div><a class="p-l-" name="part3767855" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767855"><span class="p-s-"></span></a><div class="fragment"><p>$element — текущий элемент</p></div><a class="p-l-" name="part3767856" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767856"><span class="p-s-"></span></a><div class="fragment"><p>$attrs — текущие атрибуты объекта в элементе</p></div><a class="p-l-" name="part3767857" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767857"><span class="p-s-"></span></a><div class="fragment"><p>$transclude — связующая функция включения предварительно связанная с правильным включение области: function(cloneLinkingFn).</p></div><a class="p-l-" name="part3767858" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767858"><span class="p-s-"></span></a><div class="fragment"><p>require —  запрос другого контроллера передается в текущую директиву связующей функции. Принимает имя директивы контроллера для передачи. Если такой контроллер не может быть найден, произойдет ошибка. Имя может иметь префикс:</p></div><a class="p-l-" name="part3767859" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767859"><span class="p-s-"></span></a><div class="fragment"><p>? — не вызовет ошибку. Это делается при запросе дополнительных зависимостей.</p></div><a class="p-l-" name="part3767860" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767860"><span class="p-s-"></span></a><div class="fragment"><p>^ — поиск контроллера так же в родительских элементах</p></div><a class="p-l-" name="part3767861" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767861"><span class="p-s-"></span></a><div class="fragment"><p>restrict — cтрока вида EACM (Element, Attribute, Class, Comment), задающая стиль определения директивы. Если опущена, директивы допускается только в атрибутах.</p></div><a class="p-l-" name="part3767862" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767862"><span class="p-s-"></span></a><div class="fragment"><p>E — Имя элемента: &lt;my-directive&gt;&lt;/my-directive&gt;</p></div><a class="p-l-" name="part3767863" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767863"><span class="p-s-"></span></a><div class="fragment"><p>A — Атрибут: &lt;div my-directive=&quot;exp&quot;&gt; &lt;/div&gt;</p></div><a class="p-l-" name="part3767864" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767864"><span class="p-s-"></span></a><div class="fragment"><p>C — Класс: &lt;div class=&quot;my-directive: exp;&quot;&gt;&lt;/div&gt;</p></div><a class="p-l-" name="part3767865" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767865"><span class="p-s-"></span></a><div class="fragment"><p>M — Комментарий: &lt;!-- directive: my-directive exp --&gt;</p></div><a class="p-l-" name="part3767866" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767866"><span class="p-s-"></span></a><div class="fragment"><p>template — заменяет текущий элемент с содержимым HTML. Процесс замены заменяет все атрибуты/классы старого элемента на новые. См. раздел Создание компонентоввсекции ниже для получения дополнительной информации.</p></div><a class="p-l-" name="part3767867" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767867"><span class="p-s-"></span></a><div class="fragment"><p>templateUrl  — то же шаблон, но загружаемый с указанного URL. Поскольку загрузка шаблона является асинхронной компиляция/линковка приостанавливается пока шаблон не будет загружен.</p></div><a class="p-l-" name="part3767868" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767868"><span class="p-s-"></span></a><div class="fragment"><p>replace — если установлено true, то шаблон заменит текущий элемент, а не добавится внутрь.</p></div><a class="p-l-" name="part3767869" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767869"><span class="p-s-"></span></a><div class="fragment"><p>transclude — компиляция содержимого элемента и делание его доступным для директивы. Обычно используется с ngTransclude. Преимуществом является то, что включение связующей функции получает включение функции, предварительно связанной с правильной областью видимости. В стандартной установке виджет создает изолированную область видимости, но не включает потомков и родственников изолированной области видимости. Это дает возможность виджету, иметь приватное состояние и включение будет привязано к родительской (предварительно изолированной) области видимости.</p></div><a class="p-l-" name="part3767870" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767870"><span class="p-s-"></span></a><div class="fragment"><p>true — включение содержимого директивы.</p></div><a class="p-l-" name="part3767871" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767871"><span class="p-s-"></span></a><div class="fragment"><p>&#39;element&#39; — включение всего элемента, включая любые определения директив с более низким приоритетом.</p></div><a class="p-l-" name="part3767872" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767872"><span class="p-s-"></span></a><div class="fragment"><p>compile: Это функция компиляции, описанная в следующем разделе.</p></div><a class="p-l-" name="part3767873" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767873"><span class="p-s-"></span></a><div class="fragment"><p>link: Это функция связей, описанная в следующем разделе. Это свойство используется только тогда, когда свойство compile не определено.</p></div><a class="p-l-" name="part3767874" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767874"><span class="p-s-"></span></a><div class="fragment"><p>Функция компиляции</p></div><a class="p-l-" name="part3767875" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767875"><span class="p-s-"></span></a><div class="fragment"><p>function compile(tElement, tAttrs, transclude) { ... }</p></div><a class="p-l-" name="part3767876" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767876"><span class="p-s-"></span></a><div class="fragment"><p>Функция компиляции работает с функцией преобразования шаблонов DOM. Так как большинство директив не преобразуют шаблон, она не используется часто. Примеры, которые требуют функции компиляции являются директивами, которые преобразуют шаблон DOM, такие как ngRepeat или загружать содержимое асинхронно, таких как ngView. Функция компиляции принимает следующие аргументы.</p></div><a class="p-l-" name="part3767877" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767877"><span class="p-s-"></span></a><div class="fragment"><p>TElement — элемент шаблона — элемент, в котором была объявлена директива​​. Можно с уверенностью преобразовать в шаблон только элемент и дочерние элементы.</p></div><a class="p-l-" name="part3767878" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767878"><span class="p-s-"></span></a><div class="fragment"><p>tAttrs — шаблон атрибутов — унифицированный список атрибутов, объявленных в этом элементе, распределяется между всеми директивами функций компиляции. См. атрибуты.</p></div><a class="p-l-" name="part3767879" href="/you/angularjs-developer-guide/into-ru/trans/?page=24#part3767879"><span class="p-s-"></span></a><div class="fragment"><p>transclude — включение связующей функции: function(scope, cloneLinkingFn).</p></div><a class="p-l-" name="part3767880" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767880"><span class="p-s-"></span></a><div class="fragment"><p>Примечание: созданные экземпляры шаблона и связей не могут быть такими же объектами, если шаблон был клонирован. По этой причине не безопасно делать в функции компиляции что-нибудь кроме DOM преобразования, которое применяется ко всем клонам DOM. В частности, регистрация наблюдателей за DOM должна производится в связующей функции, а не в функции компиляции.</p></div><a class="p-l-" name="part3767881" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767881"><span class="p-s-"></span></a><div class="fragment"><p>Функция compile может возвращать как функцию, так и объект.</p></div><a class="p-l-" name="part3767882" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767882"><span class="p-s-"></span></a><div class="fragment"><p>возврат функции равносилен регистрации связывающей функции при помощи свойства link объекта config когда функция compile пустая.</p></div><a class="p-l-" name="part3767883" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767883"><span class="p-s-"></span></a><div class="fragment"><p>возврат объекта с функцией(ями) зарегистрированными при помощи свойств pre и post  позволяет вам контролировать, когда в процессе связывания должна быть вызвана функция связывания. Смотрите информацию про функции предварительного связывания и пост связывания ниже.</p></div><a class="p-l-" name="part3767884" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767884"><span class="p-s-"></span></a><div class="fragment"><p>Функция связывания</p></div><a class="p-l-" name="part3767885" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767885"><span class="p-s-"></span></a><div class="fragment"><p>function link(scope, iElement, iAttrs, controller) { ... }</p></div><a class="p-l-" name="part3767886" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767886"><span class="p-s-"></span></a><div class="fragment"><p>Функция связывания отвечает за регистрацию слушателей DOM так же, как и за обновление DOM. Она вызывается после того, как шаблон был клонирован. Это то место, где должна располагаться большая часть логики директив.</p></div><a class="p-l-" name="part3767887" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767887"><span class="p-s-"></span></a><div class="fragment"><p>scope — область видимости — область, используемая директивой для регистрации наблюдателей.</p></div><a class="p-l-" name="part3767888" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767888"><span class="p-s-"></span></a><div class="fragment"><p>IElement — экземпляр элемента — элемент, на котором определена директива. Безопасно манипулировать дочерними элементами только в функции postLink, так как потомки уже были связаны между собой.</p></div><a class="p-l-" name="part3767889" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767889"><span class="p-s-"></span></a><div class="fragment"><p>iAttrs - атрибуты экземпляра - Нормализованный список атрибутов данного элемента, доступный для всех функций связывания директив. Смотри Атрибуты.</p></div><a class="p-l-" name="part3767890" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767890"><span class="p-s-"></span></a><div class="fragment"><p>controller - экземпляр контроллера - Экземпляр контроллера в случае, если хотя бы одна директива элемента определяет контроллер. Контроллер доступен для всех директив, что позволяет использовать его в качестве канала связи между ними.</p></div><a class="p-l-" name="part3767891" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767891"><span class="p-s-"></span></a><div class="fragment"><p>Функция предварительного связывания</p></div><a class="p-l-" name="part3767892" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767892"><span class="p-s-"></span></a><div class="fragment"><p>Вызывается до того, как дочерний элемент будет связан.  Не безопасна для выполнения изменений DOM модели, так как функция связывания компилятора не сможет найти правильные элементы для связывания.</p></div><a class="p-l-" name="part3767893" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767893"><span class="p-s-"></span></a><div class="fragment"><p>Функция пост связывания</p></div><a class="p-l-" name="part3767894" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767894"><span class="p-s-"></span></a><div class="fragment"><p>Вызывается после того, как дочерний элемент был связан. В функции пост связывания можно безопасно производить изменения DOM модели.</p></div><a class="p-l-" name="part3767895" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767895"><span class="p-s-"></span></a><div class="fragment"><p>Атрибуты</p></div><a class="p-l-" name="part3767896" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767896"><span class="p-s-"></span></a><div class="fragment"><p>Объект Attributes - переданный в качестве параметра в функции link() или compile() - предоставляет доступ:</p></div><a class="p-l-" name="part3767897" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767897"><span class="p-s-"></span></a><div class="fragment"><p>нормализованные названия атрибутов: Так как директивы,  например, &#39;ngBind&#39; могут быть представлены в разных видах, например, &#39;ng:bind&#39;, или &#39;x-ng-bind&#39;, объект атрибутов предоставляет нормализованный доступ к атрибутам.</p></div><a class="p-l-" name="part3767898" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767898"><span class="p-s-"></span></a><div class="fragment"><p>Директива внутренней коммуникации: Все директивы, предоставляющие доступ к таким же атрибутам экземпляров объектов, которые позволяют использовать атрибуты директивы объекта как связь между директивами.</p></div><a class="p-l-" name="part3767899" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767899"><span class="p-s-"></span></a><div class="fragment"><p>поддержка интерполяции: интерполяция атрибутов заданная атрибуту объекта позволит другим директивам читать интерполированное значение.</p></div><a class="p-l-" name="part3767900" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767900"><span class="p-s-"></span></a><div class="fragment"><p>Наблюдение интерполированных атрибутов: Используйте $observe чтобы наблюдать изменения значений атрибутов, которые содержат интерполяции (напр. src=&quot;{{bar}}&quot;). Это не только очень эффективно, но также единственный способ легко получить фактическое значение, поскольку во время стадии компоновки интерполяция еще не оценена и поэтому на то время значение является неопределенным.</p></div><a class="p-l-" name="part3767901" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767901"><span class="p-s-"></span></a><div class="fragment"><p>function linkingFn(scope, elm, attrs, ctrl) {</p></div><a class="p-l-" name="part3767902" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767902"><span class="p-s-"></span></a><div class="fragment"><p>// получить значение атрибута</p></div><a class="p-l-" name="part3767903" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767903"><span class="p-s-"></span></a><div class="fragment"><p>console.log(attrs.ngModel);</p></div><a class="p-l-" name="part3767904" href="/you/angularjs-developer-guide/into-ru/trans/?page=25#part3767904"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767905" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767905"><span class="p-s-"></span></a><div class="fragment"><p>// изменяем атрибут</p></div><a class="p-l-" name="part3767906" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767906"><span class="p-s-"></span></a><div class="fragment"><p>attrs.$set(&#39;ngModel&#39;, &#39;new value&#39;);</p></div><a class="p-l-" name="part3767907" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767907"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3767908" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767908"><span class="p-s-"></span></a><div class="fragment"><p>// наблюдение за изменением интерполированного атрибута</p></div><a class="p-l-" name="part3767909" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767909"><span class="p-s-"></span></a><div class="fragment"><p>attrs.$observe(&#39;ngModel&#39;, function(value) {</p></div><a class="p-l-" name="part3767910" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767910"><span class="p-s-"></span></a><div class="fragment"><p>console.log(&#39;ngModel has changed value to &#39; + value);</p></div><a class="p-l-" name="part3767911" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767911"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3767912" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767912"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3767913" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767913"><span class="p-s-"></span></a><div class="fragment"><p>Понимание включения и областей</p></div><a class="p-l-" name="part3767914" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767914"><span class="p-s-"></span></a><div class="fragment"><p>Обычно мы хотим, чтобы компоненты можно было использовать повторно. Ниже представлен псевдо код, который показывает, как может работать упрощенный компонент диалога.</p></div><a class="p-l-" name="part3767915" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767915"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div&gt;</p></div><a class="p-l-" name="part3767916" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767916"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;show=true&quot;&gt;show&lt;/button&gt;</p></div><a class="p-l-" name="part3767917" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767917"><span class="p-s-"></span></a><div class="fragment"><p>&lt;dialog title=&quot;Hello {{username}}.&quot;</p></div><a class="p-l-" name="part3767918" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767918"><span class="p-s-"></span></a><div class="fragment"><p>visible=&quot;show&quot;</p></div><a class="p-l-" name="part3767919" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767919"><span class="p-s-"></span></a><div class="fragment"><p>on-cancel=&quot;show = false&quot;</p></div><a class="p-l-" name="part3767920" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767920"><span class="p-s-"></span></a><div class="fragment"><p>on-ok=&quot;show = false; doSomething()&quot;&gt;</p></div><a class="p-l-" name="part3767921" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767921"><span class="p-s-"></span></a><div class="fragment"><p>Body goes here: {{username}} is {{title}}.</p></div><a class="p-l-" name="part3767922" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767922"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/dialog&gt;</p></div><a class="p-l-" name="part3767923" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767923"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767924" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767924"><span class="p-s-"></span></a><div class="fragment"><p>Клик по кнопке &quot;show&quot; откроет диалог. Этот диалог имеет заголовок, к которому привязан username, а также он будет содержать тело, которое мы хотим вставить в диалог.</p></div><a class="p-l-" name="part3767925" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767925"><span class="p-s-"></span></a><div class="fragment"><p>Вот пример того, как может выглядеть определение шаблона для виджета диалога.</p></div><a class="p-l-" name="part3767926" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767926"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-show=&quot;visible&quot;&gt;</p></div><a class="p-l-" name="part3767927" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767927"><span class="p-s-"></span></a><div class="fragment"><p>&lt;h3&gt;{{title}}&lt;/h3&gt;</p></div><a class="p-l-" name="part3767928" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767928"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div class=&quot;body&quot; ng-transclude&gt;&lt;/div&gt;</p></div><a class="p-l-" name="part3767929" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767929"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div class=&quot;footer&quot;&gt;</p></div><a class="p-l-" name="part3767930" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767930"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;onOk()&quot;&gt;Save changes&lt;/button&gt;</p></div><a class="p-l-" name="part3767931" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767931"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;onCancel()&quot;&gt;Close&lt;/button&gt;</p></div><a class="p-l-" name="part3767932" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767932"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767933" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767933"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767934" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767934"><span class="p-s-"></span></a><div class="fragment"><p>Это не отобразится должным образом, пока мы не воспользуемся магией области видимости</p></div><a class="p-l-" name="part3767935" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767935"><span class="p-s-"></span></a><div class="fragment"><p>Первый вопрос, который мы должны решить, в том как назвать шаблон диалогового окна чтобы определить его, но конкретное место хотелось бы связать с именем пользователя. Кроме того, нужно задать кнопкам функции onOk и onCancel, которые будут присутствовать в области видимости. Это ограничивает полезность виджета. Для решения вопроса с отображением мы используем locals для создания локальных переменных, которые шаблон ожидает следующим образом:</p></div><a class="p-l-" name="part3767936" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767936"><span class="p-s-"></span></a><div class="fragment"><p>scope: {</p></div><a class="p-l-" name="part3767937" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767937"><span class="p-s-"></span></a><div class="fragment"><p>title: &#39;@&#39;, // заголовок использует связывание данных в родительской области</p></div><a class="p-l-" name="part3767938" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767938"><span class="p-s-"></span></a><div class="fragment"><p>onOk: &#39;&amp;&#39;, // создаем делегат функции onOk</p></div><a class="p-l-" name="part3767939" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767939"><span class="p-s-"></span></a><div class="fragment"><p>onCancel: &#39;&amp;&#39;, // создаем делегат функции onCancel</p></div><a class="p-l-" name="part3767940" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767940"><span class="p-s-"></span></a><div class="fragment"><p>visible: &#39;=&#39; // установка видимости для принятия связывания данных</p></div><a class="p-l-" name="part3767941" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767941"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3767942" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767942"><span class="p-s-"></span></a><div class="fragment"><p>Создание локальных свойств в области виджета порождает две проблемы:</p></div><a class="p-l-" name="part3767943" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767943"><span class="p-s-"></span></a><div class="fragment"><p>isolation — если пользователь забудет задать название атрибута диалогового виджета, то диалоговый шаблон будет связан с родительской областью видимости. Это непредсказуемо и нежелательно.</p></div><a class="p-l-" name="part3767944" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767944"><span class="p-s-"></span></a><div class="fragment"><p>transclusion — включенный DOM может увидеть локальный виджет, который, может перезаписать свойства, нужные для включения связывания данных. В нашем примере заголовок виджета переопределяет заголовок включения.</p></div><a class="p-l-" name="part3767945" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767945"><span class="p-s-"></span></a><div class="fragment"><p>Для решения проблемы нехватки изоляции, директивы определяют новую изолированную область. Эта область не наследуется от дочерней области, и потому мы можем не волноваться о том, что случайно затрется какое-либо свойство.</p></div><a class="p-l-" name="part3767946" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767946"><span class="p-s-"></span></a><div class="fragment"><p>Однако изолированная область видимости создает новую проблему: если включенный DOM является дочерним виджетом изолированной области видимости, то он не может быть связан ни с чем. По этой причине включенная область видимости является потомком оригинальной области видимости, перед виджетом,созданным в изолированной области видимости для его локальных переменных. Это делает включение и виджет изолированной областипотомками одного уровня.</p></div><a class="p-l-" name="part3767947" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767947"><span class="p-s-"></span></a><div class="fragment"><p>Это может показаться неожиданно сложным, но так пользователя и разработчика виджетов ожидает меньше всего неожиданностей.</p></div><a class="p-l-" name="part3767948" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767948"><span class="p-s-"></span></a><div class="fragment"><p>Таким образом, окончательное определение директивы выглядит примерно так:</p></div><a class="p-l-" name="part3767949" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767949"><span class="p-s-"></span></a><div class="fragment"><p>transclude: true,</p></div><a class="p-l-" name="part3767950" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767950"><span class="p-s-"></span></a><div class="fragment"><p>scope: {</p></div><a class="p-l-" name="part3767951" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767951"><span class="p-s-"></span></a><div class="fragment"><p>title: &#39;@&#39;, // заголовок использует связывание данных в родительской области</p></div><a class="p-l-" name="part3767952" href="/you/angularjs-developer-guide/into-ru/trans/?page=26#part3767952"><span class="p-s-"></span></a><div class="fragment"><p>onOk: &#39;&amp;&#39;, // создаем делегат функции onOk</p></div><a class="p-l-" name="part3767953" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767953"><span class="p-s-"></span></a><div class="fragment"><p>onCancel: &#39;&amp;&#39;, // создаем делегат функции onCancel</p></div><a class="p-l-" name="part3767954" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767954"><span class="p-s-"></span></a><div class="fragment"><p>visible: &#39;=&#39; // установка видимости для начала связывания данных</p></div><a class="p-l-" name="part3767955" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767955"><span class="p-s-"></span></a><div class="fragment"><p>},</p></div><a class="p-l-" name="part3767956" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767956"><span class="p-s-"></span></a><div class="fragment"><p>restrict: &#39;E&#39;,</p></div><a class="p-l-" name="part3767957" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767957"><span class="p-s-"></span></a><div class="fragment"><p>replace: true</p></div><a class="p-l-" name="part3767958" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767958"><span class="p-s-"></span></a><div class="fragment"><p>Создание компонентов</p></div><a class="p-l-" name="part3767959" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767959"><span class="p-s-"></span></a><div class="fragment"><p>Часто желательно, заменить одну директиву с более сложной структурой DOM. Это позволяет сократить объем директив и сделать их пригодными для повторно используемых компонентов, из которых может быть построено приложение.</p></div><a class="p-l-" name="part3767960" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767960"><span class="p-s-"></span></a><div class="fragment"><p>Ниже представлен пример создания виджета, который можно использовать повторно.</p></div><a class="p-l-" name="part3767961" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767961"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3767962" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767962"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3767963" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767963"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3767964" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767964"><span class="p-s-"></span></a><div class="fragment"><p>style.css</p></div><a class="p-l-" name="part3767965" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767965"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3767966" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767966"><span class="p-s-"></span></a><div class="fragment"><p>End to end тест</p></div><a class="p-l-" name="part3767967" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767967"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3767968" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767968"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;zippyModule&quot;&gt;</p></div><a class="p-l-" name="part3767969" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767969"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3767970" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767970"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767971" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767971"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3767972" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767972"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3767973" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767973"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3767974" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767974"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Ctrl3&quot;&gt;</p></div><a class="p-l-" name="part3767975" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767975"><span class="p-s-"></span></a><div class="fragment"><p>Title: &lt;input ng-model=&quot;title&quot;&gt; &lt;br&gt;</p></div><a class="p-l-" name="part3767976" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767976"><span class="p-s-"></span></a><div class="fragment"><p>Text: &lt;textarea ng-model=&quot;text&quot;&gt;&lt;/textarea&gt;</p></div><a class="p-l-" name="part3767977" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767977"><span class="p-s-"></span></a><div class="fragment"><p>&lt;hr&gt;</p></div><a class="p-l-" name="part3767978" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767978"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div class=&quot;zippy&quot; zippy-title=&quot;Details: {{title}}...&quot;&gt;{{text}}&lt;/div&gt;</p></div><a class="p-l-" name="part3767979" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767979"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3767980" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767980"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3767981" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767981"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3767982" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767982"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3767983" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767983"><span class="p-s-"></span></a><div class="fragment"><p>Title: </p></div><a class="p-l-" name="part3767984" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767984"><span class="p-s-"></span></a><div class="fragment"><p>Text: </p></div><a class="p-l-" name="part3767985" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767985"><span class="p-s-"></span></a><div class="fragment"><p>Details: Lorem Ipsum...</p></div><a class="p-l-" name="part3767986" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767986"><span class="p-s-"></span></a><div class="fragment"><p>ВЫРАЖЕНИЯ</p></div><a class="p-l-" name="part3767987" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767987"><span class="p-s-"></span></a><div class="fragment"><p>Выражения - это фрагменты кода в JavsScript стиле, который обычно  располагаются в привязках, например, {{ выражение }}. Выражения обрабатываются сервисом $parse.</p></div><a class="p-l-" name="part3767988" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767988"><span class="p-s-"></span></a><div class="fragment"><p>Вот пример валидных выражений в angular:</p></div><a class="p-l-" name="part3767989" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767989"><span class="p-s-"></span></a><div class="fragment"><p>1+2</p></div><a class="p-l-" name="part3767990" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767990"><span class="p-s-"></span></a><div class="fragment"><p>3*10 | currency</p></div><a class="p-l-" name="part3767991" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767991"><span class="p-s-"></span></a><div class="fragment"><p>user.name</p></div><a class="p-l-" name="part3767992" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767992"><span class="p-s-"></span></a><div class="fragment"><p>Angular Выражения vs. JS Выражения</p></div><a class="p-l-" name="part3767993" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767993"><span class="p-s-"></span></a><div class="fragment"><p>Заманчиво думать о выражениях Angular как о JavaScript выражения, но это не совсем корректно, так как Angular не использует JavaScript eval() для вычисления выражений. Вы можете думать о выражениях Angular как о JavaScript выражения со следующими отличиями:</p></div><a class="p-l-" name="part3767994" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767994"><span class="p-s-"></span></a><div class="fragment"><p>Значение Атрибутов: значение всех свойств вычисляются в области видимости в отличие от JavaScript, где выражения вычисляются в глобальном окне.</p></div><a class="p-l-" name="part3767995" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767995"><span class="p-s-"></span></a><div class="fragment"><p>Снисхождение: вычисление выражений лояльно к неопределенным и нулевым значениям, в отличие от JavaScript, где такие вычисления выдадут исключение NullPointerException.</p></div><a class="p-l-" name="part3767996" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767996"><span class="p-s-"></span></a><div class="fragment"><p>Поток утверждений не управляем: в Angular нельзя использовать условные операторы, циклы и исключения.</p></div><a class="p-l-" name="part3767997" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767997"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры: можно передать результат вычисления выражений через цепочку фильтров. Например, чтобы преобразовать объект даты в специфичный для данного региона понятный человеку формат.</p></div><a class="p-l-" name="part3767998" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767998"><span class="p-s-"></span></a><div class="fragment"><p>Если, с другой стороны, необходимо выполнить произвольный код JavaScript, нужно использовать метод контроллера и вызвать этот метод. Если необходимо выполнить eval() в выражении Angular из JavaScript, используйте метод $eval().</p></div><a class="p-l-" name="part3767999" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3767999"><span class="p-s-"></span></a><div class="fragment"><p>Пример</p></div><a class="p-l-" name="part3768000" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768000"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768001" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768001"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768002" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768002"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768003" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768003"><span class="p-s-"></span></a><div class="fragment"><p>Комплексный тест</p></div><a class="p-l-" name="part3768004" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768004"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768005" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768005"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768006" href="/you/angularjs-developer-guide/into-ru/trans/?page=27#part3768006"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768007" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768007"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768008" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768008"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768009" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768009"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768010" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768010"><span class="p-s-"></span></a><div class="fragment"><p>1+2={{1+2}}</p></div><a class="p-l-" name="part3768011" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768011"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768012" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768012"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768013" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768013"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768014" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768014"><span class="p-s-"></span></a><div class="fragment"><p>1+2=3</p></div><a class="p-l-" name="part3768015" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768015"><span class="p-s-"></span></a><div class="fragment"><p>Вы можете попробовать разные выражения тут:</p></div><a class="p-l-" name="part3768016" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768016"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768017" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768017"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768018" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768018"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768019" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768019"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768020" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768020"><span class="p-s-"></span></a><div class="fragment"><p>End to end тест</p></div><a class="p-l-" name="part3768021" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768021"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768022" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768022"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768023" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768023"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768024" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768024"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768025" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768025"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768026" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768026"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768027" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768027"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768028" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768028"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Cntl2&quot; class=&quot;expressions&quot;&gt;</p></div><a class="p-l-" name="part3768029" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768029"><span class="p-s-"></span></a><div class="fragment"><p>Expression:</p></div><a class="p-l-" name="part3768030" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768030"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&#39;text&#39; ng-model=&quot;expr&quot; size=&quot;80&quot;/&gt;</p></div><a class="p-l-" name="part3768031" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768031"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;addExp(expr)&quot;&gt;Evaluate&lt;/button&gt;</p></div><a class="p-l-" name="part3768032" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768032"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ul&gt;</p></div><a class="p-l-" name="part3768033" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768033"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;expr in exprs&quot;&gt;</p></div><a class="p-l-" name="part3768034" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768034"><span class="p-s-"></span></a><div class="fragment"><p>[ &lt;a href=&quot;&quot; ng-click=&quot;removeExp($index)&quot;&gt;X&lt;/a&gt; ]</p></div><a class="p-l-" name="part3768035" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768035"><span class="p-s-"></span></a><div class="fragment"><p>&lt;tt&gt;{{expr}}&lt;/tt&gt; =&gt; &lt;span ng-bind=&quot;$parent.$eval(expr)&quot;&gt;&lt;/span&gt;</p></div><a class="p-l-" name="part3768036" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768036"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3768037" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768037"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ul&gt;</p></div><a class="p-l-" name="part3768038" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768038"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768039" href="/you/angularjs-developer-guide/into-ru/trans/?page=28#part3768039"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768040" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768040"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768041" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768041"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768042" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768042"><span class="p-s-"></span></a><div class="fragment"><p>Expression: Evaluate</p></div><a class="p-l-" name="part3768043" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768043"><span class="p-s-"></span></a><div class="fragment"><p>Вычисление Свойств</p></div><a class="p-l-" name="part3768044" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768044"><span class="p-s-"></span></a><div class="fragment"><p>Оценка всех свойств происходит против области видимости. В отличие от JavaScript, где переменные по умолчанию являются глобальными свойства window, Выражения Angular должны использовать $window чтобы сослаться на глобальный объект window. Например, если вы хотите вызвать alert(), которая определена d window, в выражении необходимо использовать $window.alert(). Это сделано намеренно, чтобы предотвратить случайный доступ к переменным глобального состояния (распространенный источник малозаметных ошибок).</p></div><a class="p-l-" name="part3768045" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768045"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768046" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768046"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768047" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768047"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768048" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768048"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768049" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768049"><span class="p-s-"></span></a><div class="fragment"><p>End to end тест</p></div><a class="p-l-" name="part3768050" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768050"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768051" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768051"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768052" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768052"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768053" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768053"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768054" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768054"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768055" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768055"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768056" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768056"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768057" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768057"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div class=&quot;example2&quot; ng-controller=&quot;Cntl1&quot;&gt;</p></div><a class="p-l-" name="part3768058" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768058"><span class="p-s-"></span></a><div class="fragment"><p>Name: &lt;input ng-model=&quot;name&quot; type=&quot;text&quot;/&gt;</p></div><a class="p-l-" name="part3768059" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768059"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;greet()&quot;&gt;Greet&lt;/button&gt;</p></div><a class="p-l-" name="part3768060" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768060"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768061" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768061"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768062" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768062"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768063" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768063"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768064" href="/you/angularjs-developer-guide/into-ru/trans/?page=29#part3768064"><span class="p-s-"></span></a><div class="fragment"><p>Name: Greet</p></div><a class="p-l-" name="part3768065" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768065"><span class="p-s-"></span></a><div class="fragment"><p>Снисходительность</p></div><a class="p-l-" name="part3768066" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768066"><span class="p-s-"></span></a><div class="fragment"><p>Механизм вычисления выражений прощает неаккуратное использование null или undefined. В чистом JavaScript вычисление выражения a.b.c кинет исключение в случае, если a не является объектом. И хотя это имеет смысл для серьёзного языка вроде JavaScript, выражения чаще всего используются для связки данных, которые обычно выглядят так:</p></div><a class="p-l-" name="part3768067" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768067"><span class="p-s-"></span></a><div class="fragment"><p>{{a.b.c}}</p></div><a class="p-l-" name="part3768068" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768068"><span class="p-s-"></span></a><div class="fragment"><p>В данном случае гораздо разумнее не показывать ничего, чем кидать исключение если a не определено (возможно, мы ожидаем ответ от сервера и вскоре a станет определено). Если бы механизм вычисления выражений не был таким снисходительным, нам бы пришлось писать что-то вроде {{((a||{}).b||{}).c}}. Ужасно, не правда ли?</p></div><a class="p-l-" name="part3768069" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768069"><span class="p-s-"></span></a><div class="fragment"><p>Аналогично, вызов функции a.b.c() на неопределённом значении или на null-объекте просто-напросто возвращает undefined.</p></div><a class="p-l-" name="part3768070" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768070"><span class="p-s-"></span></a><div class="fragment"><p>Отсутствие управляющих выражений</p></div><a class="p-l-" name="part3768071" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768071"><span class="p-s-"></span></a><div class="fragment"><p>Вы не можете управлять потоком вычисления внутри выражений. Причина - философия angular, которая утверждает, что логика должна быть внутри контроллеров, а не представлений. Если вам нужен if, цикл, или вы хотите бросить исключение из выражения - делегируйте всё это JavaScript-методу.</p></div><a class="p-l-" name="part3768072" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768072"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры</p></div><a class="p-l-" name="part3768073" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768073"><span class="p-s-"></span></a><div class="fragment"><p>Для показа данных пользователю, возможно, потребуется, преобразовать данные из сырого формата в формат удобный для пользователя. Например, у вас может быть объект данных, который должен быть отформатирован в соответствии с текущим языком, прежде чем показаться пользователю. Вы можете передать выражения через цепочку фильтров так:</p></div><a class="p-l-" name="part3768074" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768074"><span class="p-s-"></span></a><div class="fragment"><p>name | uppercase</p></div><a class="p-l-" name="part3768075" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768075"><span class="p-s-"></span></a><div class="fragment"><p>Вычислитель выражений просто передаёт значение фильтру uppercase.</p></div><a class="p-l-" name="part3768076" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768076"><span class="p-s-"></span></a><div class="fragment"><p>Вы можете вызвать несколько фильтров, один за другим, используя синтаксис:</p></div><a class="p-l-" name="part3768077" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768077"><span class="p-s-"></span></a><div class="fragment"><p>value | filter1 | filter2</p></div><a class="p-l-" name="part3768078" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768078"><span class="p-s-"></span></a><div class="fragment"><p>В фильтры можно передавать аргументы, для этого используется знак двоеточия (:). Например, чтобы отобразить число 123 с двумя знаками после запятой используйте следующую конструкцию:</p></div><a class="p-l-" name="part3768079" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768079"><span class="p-s-"></span></a><div class="fragment"><p>123 | number:2</p></div><a class="p-l-" name="part3768080" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768080"><span class="p-s-"></span></a><div class="fragment"><p>$</p></div><a class="p-l-" name="part3768081" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768081"><span class="p-s-"></span></a><div class="fragment"><p>Удивлены, узнав что префикс $ имеет значение? Это просто префикс, который Angular использует, чтобы отделить имена своего API от других. Если в Angular не использовать $, то выражение a.length() вернет undefined, потому что ни a, ни Angular не определяют такое свойство.</p></div><a class="p-l-" name="part3768082" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768082"><span class="p-s-"></span></a><div class="fragment"><p>Предположим, что в будущей версии Angular мы добавим метод length, и в этом случае поведение выражений изменится. Что еще хуже, если разработчик так же создаст свойство  length, то произойдет столкновение. Эта проблема существует, потому что аргументы Angular осуществляют объекты с дополнительным поведение. Предварив их $ мы резервируют пространство наших имен, так что разработчики Angular и программисты, которые используют Angular, могут работать не пересекаясь.</p></div><a class="p-l-" name="part3768083" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768083"><span class="p-s-"></span></a><div class="fragment"><p>ФОРМЫ</p></div><a class="p-l-" name="part3768084" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768084"><span class="p-s-"></span></a><div class="fragment"><p>Элементы управления (input, select, textarea), являются одним из способов для ввода пользовательских данных. Форма представляет собой коллекцию элементов управления с целью группировки связанных элементов вместе.</p></div><a class="p-l-" name="part3768085" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768085"><span class="p-s-"></span></a><div class="fragment"><p>Форма и элементы управления обеспечивают валидацию сервисов, так что пользователь может быть уведомлен о некорректном вводе. Это улучшает пользовательский опыт, так как пользователь получает мгновенную обратную связь о том, как исправить ошибку. Имейте в виду, что в то время как проверка на стороне клиента играет важную роль в обеспечении хорошего пользовательского опыта, это можно легко обойти, и, следовательно, не стоит полагаться только на эту проверку. Проверка на стороне сервера по-прежнему необходима в целях безопасности.</p></div><a class="p-l-" name="part3768086" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768086"><span class="p-s-"></span></a><div class="fragment"><p>Простая форма</p></div><a class="p-l-" name="part3768087" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768087"><span class="p-s-"></span></a><div class="fragment"><p>Основной директивой понимающей двустороннее связывание данных является ngModel. Директива NgModel предусматривает двустороннее связывание данных путем синхронизации модели с представлением, а также вида с моделью. Кроме того, она предоставляет API для других директив, чтобы расширить их поведение.</p></div><a class="p-l-" name="part3768088" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768088"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768089" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768089"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768090" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768090"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768091" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768091"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768092" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768092"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768093" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768093"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768094" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768094"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768095" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768095"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768096" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768096"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768097" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768097"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768098" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768098"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768099" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768099"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Controller&quot;&gt;</p></div><a class="p-l-" name="part3768100" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768100"><span class="p-s-"></span></a><div class="fragment"><p>&lt;form novalidate class=&quot;simple-form&quot;&gt;</p></div><a class="p-l-" name="part3768101" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768101"><span class="p-s-"></span></a><div class="fragment"><p>Name: &lt;input type=&quot;text&quot; ng-model=&quot;user.name&quot; /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768102" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768102"><span class="p-s-"></span></a><div class="fragment"><p>E-mail: &lt;input type=&quot;email&quot; ng-model=&quot;user.email&quot; /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768103" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768103"><span class="p-s-"></span></a><div class="fragment"><p>Gender: &lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;male&quot; /&gt;male</p></div><a class="p-l-" name="part3768104" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768104"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;female&quot; /&gt;female&lt;br /&gt;</p></div><a class="p-l-" name="part3768105" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768105"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;reset()&quot;&gt;RESET&lt;/button&gt;</p></div><a class="p-l-" name="part3768106" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768106"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;update(user)&quot;&gt;SAVE&lt;/button&gt;</p></div><a class="p-l-" name="part3768107" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768107"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/form&gt;</p></div><a class="p-l-" name="part3768108" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768108"><span class="p-s-"></span></a><div class="fragment"><p>&lt;pre&gt;form = {{user | json}}&lt;/pre&gt;</p></div><a class="p-l-" name="part3768109" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768109"><span class="p-s-"></span></a><div class="fragment"><p>&lt;pre&gt;master = {{master | json}}&lt;/pre&gt;</p></div><a class="p-l-" name="part3768110" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768110"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768111" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768111"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768112" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768112"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768113" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768113"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768114" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768114"><span class="p-s-"></span></a><div class="fragment"><p>Name:</p></div><a class="p-l-" name="part3768115" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768115"><span class="p-s-"></span></a><div class="fragment"><p>E-mail:</p></div><a class="p-l-" name="part3768116" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768116"><span class="p-s-"></span></a><div class="fragment"><p>Gender: male female</p></div><a class="p-l-" name="part3768117" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768117"><span class="p-s-"></span></a><div class="fragment"><p>RESET SAVE</p></div><a class="p-l-" name="part3768118" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768118"><span class="p-s-"></span></a><div class="fragment"><p>form = {}</p></div><a class="p-l-" name="part3768119" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768119"><span class="p-s-"></span></a><div class="fragment"><p>master = {}</p></div><a class="p-l-" name="part3768120" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768120"><span class="p-s-"></span></a><div class="fragment"><p>Заметьте, что novalidate используется для отключения нативной проверки формы браузером.</p></div><a class="p-l-" name="part3768121" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768121"><span class="p-s-"></span></a><div class="fragment"><p>Использование CSS классов</p></div><a class="p-l-" name="part3768122" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768122"><span class="p-s-"></span></a><div class="fragment"><p>Для предоставления возможности оформления форм так же, как и элементов управления, ngModel добавляется такие CSS классы:</p></div><a class="p-l-" name="part3768123" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768123"><span class="p-s-"></span></a><div class="fragment"><p>ng-valid</p></div><a class="p-l-" name="part3768124" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768124"><span class="p-s-"></span></a><div class="fragment"><p>ng-invalid</p></div><a class="p-l-" name="part3768125" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768125"><span class="p-s-"></span></a><div class="fragment"><p>ng-pristine</p></div><a class="p-l-" name="part3768126" href="/you/angularjs-developer-guide/into-ru/trans/?page=30#part3768126"><span class="p-s-"></span></a><div class="fragment"><p>ng-dirty</p></div><a class="p-l-" name="part3768127" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768127"><span class="p-s-"></span></a><div class="fragment"><p>Пример ниже использует CSS для отображения валидности каждого элемента формы. В примере поля user.name и user.email обязательны к заполнению, но красный фон у них отображается только когда с ними уже взаимодествовали. Это помогает пользователю не отвлекаться на ошибку пока он не введет в поле данные, которые не удовлетворяют правилам валидации этого поля.</p></div><a class="p-l-" name="part3768128" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768128"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768129" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768129"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768130" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768130"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768131" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768131"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768132" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768132"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768133" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768133"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768134" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768134"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768135" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768135"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768136" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768136"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768137" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768137"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768138" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768138"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768139" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768139"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Controller&quot;&gt;</p></div><a class="p-l-" name="part3768140" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768140"><span class="p-s-"></span></a><div class="fragment"><p>&lt;form novalidate class=&quot;css-form&quot;&gt;</p></div><a class="p-l-" name="part3768141" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768141"><span class="p-s-"></span></a><div class="fragment"><p>Имя:</p></div><a class="p-l-" name="part3768142" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768142"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;text&quot; ng-model=&quot;user.name&quot; required /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768143" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768143"><span class="p-s-"></span></a><div class="fragment"><p>E-mail: &lt;input type=&quot;email&quot; ng-model=&quot;user.email&quot; required /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768144" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768144"><span class="p-s-"></span></a><div class="fragment"><p>Пол: &lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;male&quot; /&gt;М</p></div><a class="p-l-" name="part3768145" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768145"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;female&quot; /&gt;Ж&lt;br /&gt;</p></div><a class="p-l-" name="part3768146" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768146"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;reset()&quot;&gt;Сбросить&lt;/button&gt;</p></div><a class="p-l-" name="part3768147" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768147"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;update(user)&quot;&gt;Сохранить&lt;/button&gt;</p></div><a class="p-l-" name="part3768148" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768148"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/form&gt;</p></div><a class="p-l-" name="part3768149" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768149"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768150" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768150"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768151" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768151"><span class="p-s-"></span></a><div class="fragment"><p>&lt;style type=&quot;text/css&quot;&gt;</p></div><a class="p-l-" name="part3768152" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768152"><span class="p-s-"></span></a><div class="fragment"><p>.css-form input.ng-invalid.ng-dirty {</p></div><a class="p-l-" name="part3768153" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768153"><span class="p-s-"></span></a><div class="fragment"><p>background-color: #FA787E;</p></div><a class="p-l-" name="part3768154" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768154"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768155" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768155"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768156" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768156"><span class="p-s-"></span></a><div class="fragment"><p>.css-form input.ng-valid.ng-dirty {</p></div><a class="p-l-" name="part3768157" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768157"><span class="p-s-"></span></a><div class="fragment"><p>background-color: #78FA89;</p></div><a class="p-l-" name="part3768158" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768158"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768159" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768159"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/style&gt;</p></div><a class="p-l-" name="part3768160" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768160"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768161" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768161"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768162" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768162"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3768163" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768163"><span class="p-s-"></span></a><div class="fragment"><p>Имя:</p></div><a class="p-l-" name="part3768164" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768164"><span class="p-s-"></span></a><div class="fragment"><p>E-mail:</p></div><a class="p-l-" name="part3768165" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768165"><span class="p-s-"></span></a><div class="fragment"><p>Gender: male female</p></div><a class="p-l-" name="part3768166" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768166"><span class="p-s-"></span></a><div class="fragment"><p>RESET SAVE</p></div><a class="p-l-" name="part3768167" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768167"><span class="p-s-"></span></a><div class="fragment"><p>Связывание формы с состоянием контроллеров</p></div><a class="p-l-" name="part3768168" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768168"><span class="p-s-"></span></a><div class="fragment"><p>Форма - это экземпляр объекта FormController. Экземпляр формы может быть опционально опубликован в область видимости с использованием атрибута name. Также элемент управления является экземпляром NgModelControl. Экземпляр элемента управления также может быть опубликован в экземпляре формы с использованием атрибута name. Это означает, что внутреннее состояние и формы и элемента управления доступны для связывания в представлении путем использования стандартных примитивов.</p></div><a class="p-l-" name="part3768169" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768169"><span class="p-s-"></span></a><div class="fragment"><p>Это позволяет нам расширить пример выше такой функциональностью:</p></div><a class="p-l-" name="part3768170" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768170"><span class="p-s-"></span></a><div class="fragment"><p>кнопка RESET активизируется только если в форме что-то изменилось</p></div><a class="p-l-" name="part3768171" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768171"><span class="p-s-"></span></a><div class="fragment"><p>кнопка SAVE активизируется только если в форме что-то изменилось и форма при этом валидна</p></div><a class="p-l-" name="part3768172" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768172"><span class="p-s-"></span></a><div class="fragment"><p>собственные сообщения об ошибках для user.email и user.agree</p></div><a class="p-l-" name="part3768173" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768173"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768174" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768174"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768175" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768175"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768176" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768176"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768177" href="/you/angularjs-developer-guide/into-ru/trans/?page=31#part3768177"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768178" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768178"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768179" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768179"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768180" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768180"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768181" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768181"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768182" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768182"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768183" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768183"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768184" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768184"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Controller&quot;&gt;</p></div><a class="p-l-" name="part3768185" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768185"><span class="p-s-"></span></a><div class="fragment"><p>&lt;form name=&quot;form&quot; class=&quot;css-form&quot; novalidate&gt;</p></div><a class="p-l-" name="part3768186" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768186"><span class="p-s-"></span></a><div class="fragment"><p>Имя:</p></div><a class="p-l-" name="part3768187" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768187"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;text&quot; ng-model=&quot;user.name&quot; name=&quot;uName&quot; required /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768188" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768188"><span class="p-s-"></span></a><div class="fragment"><p>E-mail:</p></div><a class="p-l-" name="part3768189" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768189"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;email&quot; ng-model=&quot;user.email&quot; name=&quot;uEmail&quot; required/&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768190" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768190"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-show=&quot;form.uEmail.$dirty &amp;&amp; form.uEmail.$invalid&quot;&gt;Ошибка:</p></div><a class="p-l-" name="part3768191" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768191"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-show=&quot;form.uEmail.$error.required&quot;&gt;Укажите свой email.&lt;/span&gt;</p></div><a class="p-l-" name="part3768192" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768192"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-show=&quot;form.uEmail.$error.email&quot;&gt;Это невалидный email.&lt;/span&gt;</p></div><a class="p-l-" name="part3768193" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768193"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768194" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768194"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768195" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768195"><span class="p-s-"></span></a><div class="fragment"><p>Пол: &lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;male&quot; /&gt;М</p></div><a class="p-l-" name="part3768196" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768196"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;radio&quot; ng-model=&quot;user.gender&quot; value=&quot;female&quot; /&gt;Ж&lt;br /&gt;</p></div><a class="p-l-" name="part3768197" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768197"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768198" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768198"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;checkbox&quot; ng-model=&quot;user.agree&quot; name=&quot;userAgree&quot; required /&gt;</p></div><a class="p-l-" name="part3768199" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768199"><span class="p-s-"></span></a><div class="fragment"><p>Я согласен: &lt;input ng-show=&quot;user.agree&quot; type=&quot;text&quot; ng-model=&quot;user.agreeSign&quot;</p></div><a class="p-l-" name="part3768200" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768200"><span class="p-s-"></span></a><div class="fragment"><p>required /&gt;&lt;br /&gt;</p></div><a class="p-l-" name="part3768201" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768201"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-show=&quot;!user.agree || !user.agreeSign&quot;&gt;Вы должны принять условия.&lt;/div&gt;</p></div><a class="p-l-" name="part3768202" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768202"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768203" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768203"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;reset()&quot; ng-disabled=&quot;isUnchanged(user)&quot;&gt;Сбросить&lt;/button&gt;</p></div><a class="p-l-" name="part3768204" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768204"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;update(user)&quot;</p></div><a class="p-l-" name="part3768205" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768205"><span class="p-s-"></span></a><div class="fragment"><p>ng-disabled=&quot;form.$invalid || isUnchanged(user)&quot;&gt;Сохранить&lt;/button&gt;</p></div><a class="p-l-" name="part3768206" href="/you/angularjs-developer-guide/into-ru/trans/?page=32#part3768206"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/form&gt;</p></div><a class="p-l-" name="part3768207" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768207"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768208" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768208"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768209" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768209"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768210" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768210"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3768211" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768211"><span class="p-s-"></span></a><div class="fragment"><p>Имя:</p></div><a class="p-l-" name="part3768212" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768212"><span class="p-s-"></span></a><div class="fragment"><p>E-mail:</p></div><a class="p-l-" name="part3768213" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768213"><span class="p-s-"></span></a><div class="fragment"><p>Gender: male female</p></div><a class="p-l-" name="part3768214" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768214"><span class="p-s-"></span></a><div class="fragment"><p>I agree:</p></div><a class="p-l-" name="part3768215" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768215"><span class="p-s-"></span></a><div class="fragment"><p>Please agree and sign.</p></div><a class="p-l-" name="part3768216" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768216"><span class="p-s-"></span></a><div class="fragment"><p>RESET SAVE</p></div><a class="p-l-" name="part3768217" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768217"><span class="p-s-"></span></a><div class="fragment"><p>Настраиваемая валидация</p></div><a class="p-l-" name="part3768218" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768218"><span class="p-s-"></span></a><div class="fragment"><p>Angular предоставляет базовый функционал для наиболее распространённых html5-полей - text, number, url, email, radio, checkbox. Также он поддерживает некоторые директивы для валидации (required, pattern, minlength, maxlength, min, max).</p></div><a class="p-l-" name="part3768219" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768219"><span class="p-s-"></span></a><div class="fragment"><p>Для того чтобы определить собственный валидатор, вы должны определить директиву, которая добавить настраиваемую валидационную функцию в ngModel контроллер. Чтобы получить этот контроллер, просто укажите его среди зависимостей, как на примере ниже. Валидация происходит в два шага:</p></div><a class="p-l-" name="part3768220" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768220"><span class="p-s-"></span></a><div class="fragment"><p>Обновление Module-to-View - всякий раз когда связанная модель меняется, все функции в массиве NgModelController#$formatters выполняются по очереди, и, таким образом, каждая из этих функций имеет возможность отформатировать значение и изменить состояние валидации элемента управления на форма посредством NgModelController#$setValidity.</p></div><a class="p-l-" name="part3768221" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768221"><span class="p-s-"></span></a><div class="fragment"><p>Обновление View-to-Model - действует похожим образом. Всякий раз, когда пользователь взаимодействует с элементом управления, вызывается функция NgModelController#$setViewValue. Она в свою очередь вызывает последовательно все функции в массиве NgModelController#$parsers, и, таким образом, каждая из этих функций имеет возможность преобразовать значение и поменять состояние валидации элемента управления через вызов NgModelController#$setValidity.</p></div><a class="p-l-" name="part3768222" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768222"><span class="p-s-"></span></a><div class="fragment"><p>В нижеследующем примере мы создаем две директивы.</p></div><a class="p-l-" name="part3768223" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768223"><span class="p-s-"></span></a><div class="fragment"><p>Первая хранит целое число и проверяет, чтобы введенное значение было валидным целым числом. Для примера 1.23 - это неправильное значение, поскольку содержит дробную часть. Заметьте, что мы вызываем функцию unshift() для массива, вместо простой вставки. Это делается потому, что мы хотим чтобы наш парсер получал значение элемента управления первым, до конвертации значения в число. </p></div><a class="p-l-" name="part3768224" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768224"><span class="p-s-"></span></a><div class="fragment"><p>Вторая директива обрабатывает короткое дробное число. Она парсит 1.2 и 1,2 в одинаково правильное дробное значение 1.2. Заметьте, что мы не можем использовать тут тип imput-элемента number, поскольку HTML5 -браузеры не позволяют пользователю 1,2. Это будет рассматриваться как ошибочное значение. </p></div><a class="p-l-" name="part3768225" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768225"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768226" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768226"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768227" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768227"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768228" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768228"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768229" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768229"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768230" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768230"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;form-example1&quot;&gt;</p></div><a class="p-l-" name="part3768231" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768231"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768232" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768232"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768233" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768233"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768234" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768234"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768235" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768235"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768236" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768236"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Controller&quot;&gt;</p></div><a class="p-l-" name="part3768237" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768237"><span class="p-s-"></span></a><div class="fragment"><p>&lt;form name=&quot;form&quot; class=&quot;css-form&quot; novalidate&gt;</p></div><a class="p-l-" name="part3768238" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768238"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div&gt;</p></div><a class="p-l-" name="part3768239" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768239"><span class="p-s-"></span></a><div class="fragment"><p>Размер (целое число в интервале 0-10):</p></div><a class="p-l-" name="part3768240" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768240"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;number&quot; ng-model=&quot;size&quot; name=&quot;size&quot;</p></div><a class="p-l-" name="part3768241" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768241"><span class="p-s-"></span></a><div class="fragment"><p>min=&quot;0&quot; max=&quot;10&quot; integer /&gt;{{size}}&lt;br /&gt;</p></div><a class="p-l-" name="part3768242" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768242"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-show=&quot;form.size.$error.integer&quot;&gt;Это не целое число!&lt;/span&gt;</p></div><a class="p-l-" name="part3768243" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768243"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-show=&quot;form.size.$error.min || form.size.$error.max&quot;&gt;</p></div><a class="p-l-" name="part3768244" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768244"><span class="p-s-"></span></a><div class="fragment"><p>Значение должно быть в интервале от 0 до 10!&lt;/span&gt;</p></div><a class="p-l-" name="part3768245" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768245"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768246" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768246"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768247" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768247"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div&gt;</p></div><a class="p-l-" name="part3768248" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768248"><span class="p-s-"></span></a><div class="fragment"><p>Длина (float):</p></div><a class="p-l-" name="part3768249" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768249"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;text&quot; ng-model=&quot;length&quot; name=&quot;length&quot; smart-float /&gt;</p></div><a class="p-l-" name="part3768250" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768250"><span class="p-s-"></span></a><div class="fragment"><p>{{length}}&lt;br /&gt;</p></div><a class="p-l-" name="part3768251" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768251"><span class="p-s-"></span></a><div class="fragment"><p>&lt;span ng-show=&quot;form.length.$error.float&quot;&gt;</p></div><a class="p-l-" name="part3768252" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768252"><span class="p-s-"></span></a><div class="fragment"><p>This is not a valid float number!&lt;/span&gt;</p></div><a class="p-l-" name="part3768253" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768253"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768254" href="/you/angularjs-developer-guide/into-ru/trans/?page=33#part3768254"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/form&gt;</p></div><a class="p-l-" name="part3768255" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768255"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768256" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768256"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768257" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768257"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768258" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768258"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3768259" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768259"><span class="p-s-"></span></a><div class="fragment"><p>Size (integer 0 - 10):</p></div><a class="p-l-" name="part3768260" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768260"><span class="p-s-"></span></a><div class="fragment"><p>Length (float):</p></div><a class="p-l-" name="part3768261" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768261"><span class="p-s-"></span></a><div class="fragment"><p>Реализация собственных элементов управления формы (с использованием ngModel)</p></div><a class="p-l-" name="part3768262" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768262"><span class="p-s-"></span></a><div class="fragment"><p>Angular реализует все базовые элементы управления HTML формой (input, select, textarea), которых должно быть достаточно в большинстве случаев. Тем не менее, если нужна большая гибкость, можно описать собственный элемент управления формы в виде директивы.</p></div><a class="p-l-" name="part3768263" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768263"><span class="p-s-"></span></a><div class="fragment"><p>Для работы стандартных элементов управления с ngModel и чтобы добиться двухстороннего связывания необходимо:</p></div><a class="p-l-" name="part3768264" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768264"><span class="p-s-"></span></a><div class="fragment"><p>выполнить метод $render, который отвечает за отображение данных после того, как осуществился NgModelController#$formatters,</p></div><a class="p-l-" name="part3768265" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768265"><span class="p-s-"></span></a><div class="fragment"><p>вызывать метод $setViewValue, когда пользователь взаимодействует с элементом управления и модель должна быть обновлена. Обычно это делается внутри наблюдателя DOM-событий.</p></div><a class="p-l-" name="part3768266" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768266"><span class="p-s-"></span></a><div class="fragment"><p>См. $compileProvider.directive для дополнительной информации.</p></div><a class="p-l-" name="part3768267" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768267"><span class="p-s-"></span></a><div class="fragment"><p>В следующем примере показано, как сделать двухстороннее связывание данных с элементом contentEditable.</p></div><a class="p-l-" name="part3768268" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768268"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768269" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768269"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768270" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768270"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768271" href="/you/angularjs-developer-guide/into-ru/trans/?page=34#part3768271"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768272" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768272"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768273" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768273"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;form-example2&quot;&gt;</p></div><a class="p-l-" name="part3768274" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768274"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768275" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768275"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768276" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768276"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768277" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768277"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768278" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768278"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768279" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768279"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div contentEditable=&quot;true&quot; ng-model=&quot;content&quot; title=&quot;Click to edit&quot;&gt;Some&lt;/div&gt;</p></div><a class="p-l-" name="part3768280" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768280"><span class="p-s-"></span></a><div class="fragment"><p>&lt;pre&gt;model = {{content}}&lt;/pre&gt;</p></div><a class="p-l-" name="part3768281" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768281"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768282" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768282"><span class="p-s-"></span></a><div class="fragment"><p>&lt;style type=&quot;text/css&quot;&gt;</p></div><a class="p-l-" name="part3768283" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768283"><span class="p-s-"></span></a><div class="fragment"><p>div[contentEditable] {</p></div><a class="p-l-" name="part3768284" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768284"><span class="p-s-"></span></a><div class="fragment"><p>cursor: pointer;</p></div><a class="p-l-" name="part3768285" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768285"><span class="p-s-"></span></a><div class="fragment"><p>background-color: #D0D0D0;</p></div><a class="p-l-" name="part3768286" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768286"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768287" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768287"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/style&gt;</p></div><a class="p-l-" name="part3768288" href="/you/angularjs-developer-guide/into-ru/trans/?page=35#part3768288"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768289" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768289"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768290" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768290"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768291" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768291"><span class="p-s-"></span></a><div class="fragment"><p>Some</p></div><a class="p-l-" name="part3768292" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768292"><span class="p-s-"></span></a><div class="fragment"><p>model = Some</p></div><a class="p-l-" name="part3768293" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768293"><span class="p-s-"></span></a><div class="fragment"><p>I18n И L10n</p></div><a class="p-l-" name="part3768294" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768294"><span class="p-s-"></span></a><div class="fragment"><p>I18n и L10n в AngularJS</p></div><a class="p-l-" name="part3768295" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768295"><span class="p-s-"></span></a><div class="fragment"><p>Что такое i18n and l10n?</p></div><a class="p-l-" name="part3768296" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768296"><span class="p-s-"></span></a><div class="fragment"><p>Интернационализация, сокращенно i18n, это процесс разработки продуктов таким образом, что они могут быть легко локализованы для разных языков и культур. Локализация, сокращенно l10n, это процесс адаптации приложений и текста для возможности их применения в определенной культурной или языковой среде. Для разработчиков приложений, интернационализация приложений подразумевает вынесение всех строк и других языковых конструкций (например, дат или форматов валют) из приложения. Локализация приложения означает предоставление переводов и локализованных языковых конструкций.</p></div><a class="p-l-" name="part3768297" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768297"><span class="p-s-"></span></a><div class="fragment"><p>На каком уровне в настоящее время поддерживается I18N/L10N в Angular?</p></div><a class="p-l-" name="part3768298" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768298"><span class="p-s-"></span></a><div class="fragment"><p>В настоящее время, Angular поддерживает I18N/L10N для даты и времени, количества и фильтров валют.</p></div><a class="p-l-" name="part3768299" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768299"><span class="p-s-"></span></a><div class="fragment"><p>Кроме того, Angular поддерживает локализацию, которую обеспечивает директива ngPluralize.</p></div><a class="p-l-" name="part3768300" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768300"><span class="p-s-"></span></a><div class="fragment"><p>Все локализуемые компоненты Angular зависят от языкового стандарта наборов и правил управляемых сервисом $locale.</p></div><a class="p-l-" name="part3768301" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768301"><span class="p-s-"></span></a><div class="fragment"><p>Для читателей, которые хотят посмотреть примеры, у нас есть несколько веб-страниц, которые наглядно демонстрируют, как использовать фильтры Angular с различными наборами правил языка. Вы можете найти эти примеры либо на Github или в папке i18n/e2e в пакете разработчика Angular.</p></div><a class="p-l-" name="part3768302" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768302"><span class="p-s-"></span></a><div class="fragment"><p>Что такое  locale id?</p></div><a class="p-l-" name="part3768303" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768303"><span class="p-s-"></span></a><div class="fragment"><p>Локаль представляет конкретный географический, политический или культурный регион. Наиболее часто используемый код языка состоит из двух частей: кода языка и кода страны. Например, en-US, en-AU, zh-CN являются допустимыми кодами языка, которые состоят из когда самого языка и кода страны. Потому указанием кода страны в код языка не является обязательным, идентификаторы региональных настроек, таких как  as en, zh, and sk также корректны. См. сайт ICU для получения дополнительной информации об использовании идентификаторов региональных настроек.</p></div><a class="p-l-" name="part3768304" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768304"><span class="p-s-"></span></a><div class="fragment"><p>Поддерживаемые языки в Angular Angular знает правила форматов чисел и дат, установленные в разных файлах, каждый файл для конкретной местности. Вы можете найти список поддерживаемых локалей здесь</p></div><a class="p-l-" name="part3768305" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768305"><span class="p-s-"></span></a><div class="fragment"><p>Поддержка региональных настроек в Angular</p></div><a class="p-l-" name="part3768306" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768306"><span class="p-s-"></span></a><div class="fragment"><p>В Angular существуют два подхода к поддержки языковых особенностей:</p></div><a class="p-l-" name="part3768307" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768307"><span class="p-s-"></span></a><div class="fragment"><p>1. Предустановленные правила</p></div><a class="p-l-" name="part3768308" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768308"><span class="p-s-"></span></a><div class="fragment"><p>Можно предустановить требуемую национальную версию файла с Angular, связав содержание языкового стандарта файла в конце angular.js или angular.min.js файла.</p></div><a class="p-l-" name="part3768309" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768309"><span class="p-s-"></span></a><div class="fragment"><p>Например, чтобы в *nix, создать angular.js файл, содержащий правила локализации для немецкого языка, нужно сделать следующее:</p></div><a class="p-l-" name="part3768310" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768310"><span class="p-s-"></span></a><div class="fragment"><p>cat angular.js i18n/angular-locale_de-ge.js &gt; angular_de-ge.js</p></div><a class="p-l-" name="part3768311" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768311"><span class="p-s-"></span></a><div class="fragment"><p>Когда приложение, содержащее сценарий angular_de-ge.js вместо универсального сценария angular.js запустится, Angular автоматически предустановит правила локализации для немецкого языка.</p></div><a class="p-l-" name="part3768312" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768312"><span class="p-s-"></span></a><div class="fragment"><p>2. Подключить js-скрипт с локалью к странице index.html</p></div><a class="p-l-" name="part3768313" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768313"><span class="p-s-"></span></a><div class="fragment"><p>Можно также подключить js-файл с локалью к странице index.html. Например, если один клиент требует немецкий язык, вы передаете index_de-ge.html который будет выглядеть примерно так:</p></div><a class="p-l-" name="part3768314" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768314"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768315" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768315"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768316" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768316"><span class="p-s-"></span></a><div class="fragment"><p>….</p></div><a class="p-l-" name="part3768317" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768317"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;angular.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768318" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768318"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;i18n/angular-locale_de-ge.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768319" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768319"><span class="p-s-"></span></a><div class="fragment"><p>….</p></div><a class="p-l-" name="part3768320" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768320"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768321" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768321"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768322" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768322"><span class="p-s-"></span></a><div class="fragment"><p>Сравнение двух подходов. Оба описанных выше подхода требуют, чтобы вы подготовили различные страницы index.html или js-файлы для каждого региона, что ваше приложение стало локализованным. Кроме того, необходимо настроить сервер для отдачи правильного файла, который соответствует требуемой национальной версии.</p></div><a class="p-l-" name="part3768323" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768323"><span class="p-s-"></span></a><div class="fragment"><p>Тем не менее, второй подход (подключение js-скрипта к странице index.html), вероятно, будет медленнее, так как должен быть загружен дополнительный сценарий.</p></div><a class="p-l-" name="part3768324" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768324"><span class="p-s-"></span></a><div class="fragment"><p>«Gotchas»</p></div><a class="p-l-" name="part3768325" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768325"><span class="p-s-"></span></a><div class="fragment"><p>Текущий символ «gotcha»</p></div><a class="p-l-" name="part3768326" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768326"><span class="p-s-"></span></a><div class="fragment"><p>Фильтр валют Angular&#39;а позволяет использовать символ валюты по умолчанию из службы локали или можно указать фильтру специальный символ валюты. Если приложение будет использоваться только в одном регионе, то можно положиться на символ валюты по умолчанию. Однако, если вы ожидаете, что пользователи в других местах будут использовать ваше приложение, вы должны предоставить свой собственный символ валюты, чтобы убедиться, что её значение понимается правильно.</p></div><a class="p-l-" name="part3768327" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768327"><span class="p-s-"></span></a><div class="fragment"><p>Например, если нужно показать остаток на счете 1000 долларов то следует настроить фильтр следующим образом: {{1000 | валюта}}, и в приложении будет установлена en-US локаль. Будет показано «$ 1000,00». Однако, если кто-то в других местных (например, в Японии) пользуется этим приложением, то браузер установит язык в ja, и баланс вместо этого станет «¥ 1000.00». Это расстроит ваших клиентов.</p></div><a class="p-l-" name="part3768328" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768328"><span class="p-s-"></span></a><div class="fragment"><p>В этом случае, вам необходимо изменить символ валюты по умолчанию, указав фильтр валют с символом валюты в качестве параметра при настройке фильтров, например, USD$1,000.00. Таким образом, Angular всегда будет показывать баланс «USD$1000» независимо от языковой версии.</p></div><a class="p-l-" name="part3768329" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768329"><span class="p-s-"></span></a><div class="fragment"><p>Перевод длины «gotcha»</p></div><a class="p-l-" name="part3768330" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768330"><span class="p-s-"></span></a><div class="fragment"><p>Имейте в виду, что переведенные строковые/датавременные форматы могут сильно различаться по длине. Например, 3 июня 1977 будет переведено на испанский как 3 de junio de 1977. Там обязательно будут другие более крайние случаи. Поэтому, когда интернационализуется приложение, вам необходимо соответственно применить правила CSS и сделать тщательное тестирование, чтобы убедиться что компоненты пользовательского интерфейса не перекрываются.</p></div><a class="p-l-" name="part3768331" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768331"><span class="p-s-"></span></a><div class="fragment"><p>Временные зоны</p></div><a class="p-l-" name="part3768332" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768332"><span class="p-s-"></span></a><div class="fragment"><p>Имейте в виду, что фильтр DateTime в Angular использует часовой пояс из настроек браузера. Так же приложение отображает различную информацию времени в зависимости от часового пояса из настроек компьютера, на котором запущено приложение. Ни Javascript, ни Angular в настоящее время не поддерживает отображение даты и часового пояса определяемого разработчиком.</p></div><a class="p-l-" name="part3768333" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768333"><span class="p-s-"></span></a><div class="fragment"><p>СОВМЕСТИМОСТЬ С INTERNET EXPLORER</p></div><a class="p-l-" name="part3768334" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768334"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3768335" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768335"><span class="p-s-"></span></a><div class="fragment"><p>Этот документ описывает особенности работы с пользовательскими атрибутами HTML и тегами в Internet Explorer (IE). Прочитайте, если планируете разрабатывать приложения на Angular для IE v8.0 или более ранней.</p></div><a class="p-l-" name="part3768336" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768336"><span class="p-s-"></span></a><div class="fragment"><p>Упрощенная версия</p></div><a class="p-l-" name="part3768337" href="/you/angularjs-developer-guide/into-ru/trans/?page=36#part3768337"><span class="p-s-"></span></a><div class="fragment"><p>Для того, чтобы Angular работал в IE пожалуйста, убедитесь, что:</p></div><a class="p-l-" name="part3768338" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768338"><span class="p-s-"></span></a><div class="fragment"><p>Библиотечная функция JSON.stringify в случае необходимости (необходимо для IE7). Можно использовать JSON2 или JSON3 библиотеки для этого.</p></div><a class="p-l-" name="part3768339" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768339"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768340" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768340"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot;&gt;</p></div><a class="p-l-" name="part3768341" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768341"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768342" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768342"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!--[if lte IE 8]&gt;</p></div><a class="p-l-" name="part3768343" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768343"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;/path/to/json2.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768344" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768344"><span class="p-s-"></span></a><div class="fragment"><p>&lt;![endif]--&gt;</p></div><a class="p-l-" name="part3768345" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768345"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768346" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768346"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768347" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768347"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768348" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768348"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768349" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768349"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768350" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768350"><span class="p-s-"></span></a><div class="fragment"><p>добавить  id=&quot;ng-app&quot; в корневой элемент в сочетании с ng-app атрибутом</p></div><a class="p-l-" name="part3768351" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768351"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768352" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768352"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot; id=&quot;ng-app&quot; ng-app=&quot;optionalModuleName&quot;&gt;</p></div><a class="p-l-" name="part3768353" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768353"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768354" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768354"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768355" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768355"><span class="p-s-"></span></a><div class="fragment"><p>не стоит использовать пользовательские теги наподобие &lt;ng:view&gt; (используйте атрибут вида &lt;div ng-view&gt; вместо этого), или</p></div><a class="p-l-" name="part3768356" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768356"><span class="p-s-"></span></a><div class="fragment"><p>если используются пользовательские теги, то предпринять следующее, чтобы IE правильно их обработал:</p></div><a class="p-l-" name="part3768357" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768357"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768358" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768358"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;http://angularjs.org&quot; id=&quot;ng-app&quot; ng-app=&quot;optionalModuleName&quot;&gt;</p></div><a class="p-l-" name="part3768359" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768359"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768360" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768360"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!--[if lte IE 8]&gt;</p></div><a class="p-l-" name="part3768361" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768361"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script&gt;</p></div><a class="p-l-" name="part3768362" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768362"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng-include&#39;);</p></div><a class="p-l-" name="part3768363" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768363"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng-pluralize&#39;);</p></div><a class="p-l-" name="part3768364" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768364"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng-view&#39;);</p></div><a class="p-l-" name="part3768365" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768365"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768366" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768366"><span class="p-s-"></span></a><div class="fragment"><p>// При необходимости их в CSS</p></div><a class="p-l-" name="part3768367" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768367"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng:include&#39;);</p></div><a class="p-l-" name="part3768368" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768368"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng:pluralize&#39;);</p></div><a class="p-l-" name="part3768369" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768369"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng:view&#39;);</p></div><a class="p-l-" name="part3768370" href="/you/angularjs-developer-guide/into-ru/trans/?page=37#part3768370"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/script&gt;</p></div><a class="p-l-" name="part3768371" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768371"><span class="p-s-"></span></a><div class="fragment"><p>&lt;![endif]--&gt;</p></div><a class="p-l-" name="part3768372" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768372"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768373" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768373"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768374" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768374"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768375" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768375"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768376" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768376"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768377" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768377"><span class="p-s-"></span></a><div class="fragment"><p>Важные части:</p></div><a class="p-l-" name="part3768378" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768378"><span class="p-s-"></span></a><div class="fragment"><p>xmlns:ng — пространство имен — для каждого пользовательского тега, который планируется использовать, необходимо отдельное пространство имен.</p></div><a class="p-l-" name="part3768379" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768379"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(yourTagName) — создание пользовательских имен тегов — Так как это актуально только для старых версий IE нужно загрузить его условно. Для каждого тега, который не имеет имени и который не определен в HTML Вы должны предварительно объявить чтобы IE не ругался.</p></div><a class="p-l-" name="part3768380" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768380"><span class="p-s-"></span></a><div class="fragment"><p>Полная версия</p></div><a class="p-l-" name="part3768381" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768381"><span class="p-s-"></span></a><div class="fragment"><p>IE имеет проблемы с именами тегов, которые не являются стандартными именами тегов HTML. Эти проблемы делятся на две категории, и каждая категория имеет свое собственное решение.</p></div><a class="p-l-" name="part3768382" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768382"><span class="p-s-"></span></a><div class="fragment"><p>Если имя тега начинается с префикса my:, то это считается пространство имен XML и должно иметь соответствующее объявление пространства имен на &lt;html xmlns:my=&quot;ignored&quot;&gt;</p></div><a class="p-l-" name="part3768383" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768383"><span class="p-s-"></span></a><div class="fragment"><p>Если тег не имеет : то он не является стандартным тегом HTML, поэтому должен быть предварительно создан с помощью document.createElement(&#39;my-tag&#39;)</p></div><a class="p-l-" name="part3768384" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768384"><span class="p-s-"></span></a><div class="fragment"><p>Если планируется стилизация пользовательского тега CSS-селектором, то она должна быть предварительно объявлена с помощью document.createElement(&#39;my-tag&#39;) независимо от пространства имен XML.</p></div><a class="p-l-" name="part3768385" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768385"><span class="p-s-"></span></a><div class="fragment"><p>Хорошие новости</p></div><a class="p-l-" name="part3768386" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768386"><span class="p-s-"></span></a><div class="fragment"><p>Хорошей новостью является то, что эти ограничения относятся только к именам тегов элемента, а не к именам атрибутов элемента. Так что специальная обработка в IE не требуется: &lt;div my-tag your:tag&gt; &lt;/div&gt;.</p></div><a class="p-l-" name="part3768387" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768387"><span class="p-s-"></span></a><div class="fragment"><p>Что произойдет, если будет допущена ошибка?</p></div><a class="p-l-" name="part3768388" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768388"><span class="p-s-"></span></a><div class="fragment"><p>Предположим, есть HTML с неизвестным тегом mytag (с таким же результатом могут использоваться теги my:tag или  my-tag):</p></div><a class="p-l-" name="part3768389" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768389"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html&gt;</p></div><a class="p-l-" name="part3768390" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768390"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768391" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768391"><span class="p-s-"></span></a><div class="fragment"><p>&lt;mytag&gt;some text&lt;/mytag&gt;</p></div><a class="p-l-" name="part3768392" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768392"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768393" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768393"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768394" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768394"><span class="p-s-"></span></a><div class="fragment"><p>Это следуют распарсить в седуюший DOM:</p></div><a class="p-l-" name="part3768395" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768395"><span class="p-s-"></span></a><div class="fragment"><p>#document</p></div><a class="p-l-" name="part3768396" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768396"><span class="p-s-"></span></a><div class="fragment"><p>+- HTML</p></div><a class="p-l-" name="part3768397" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768397"><span class="p-s-"></span></a><div class="fragment"><p>+- BODY</p></div><a class="p-l-" name="part3768398" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768398"><span class="p-s-"></span></a><div class="fragment"><p>+- mytag</p></div><a class="p-l-" name="part3768399" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768399"><span class="p-s-"></span></a><div class="fragment"><p>+- #text: some text</p></div><a class="p-l-" name="part3768400" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768400"><span class="p-s-"></span></a><div class="fragment"><p>Ожидается, что элемент BODY имеет дочерний элемент mytag, который в свою очередь имеет некоторый текст.</p></div><a class="p-l-" name="part3768401" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768401"><span class="p-s-"></span></a><div class="fragment"><p>Но это не то, что делает IE (если не использовались вышеуказанные решения):</p></div><a class="p-l-" name="part3768402" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768402"><span class="p-s-"></span></a><div class="fragment"><p>#document</p></div><a class="p-l-" name="part3768403" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768403"><span class="p-s-"></span></a><div class="fragment"><p>+- HTML</p></div><a class="p-l-" name="part3768404" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768404"><span class="p-s-"></span></a><div class="fragment"><p>+- BODY</p></div><a class="p-l-" name="part3768405" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768405"><span class="p-s-"></span></a><div class="fragment"><p>+- mytag</p></div><a class="p-l-" name="part3768406" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768406"><span class="p-s-"></span></a><div class="fragment"><p>+- #text: some text</p></div><a class="p-l-" name="part3768407" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768407"><span class="p-s-"></span></a><div class="fragment"><p>+- /mytag</p></div><a class="p-l-" name="part3768408" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768408"><span class="p-s-"></span></a><div class="fragment"><p>В IE, поведение в том, что элемент BODY имеет троих потомков:</p></div><a class="p-l-" name="part3768409" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768409"><span class="p-s-"></span></a><div class="fragment"><p>Самостоятельно закрытый mytag. Пример самостоятельно закрытого тега &lt;br/&gt;.Завершающий слэш / не является обязательным, но тег &lt;br&gt; не может иметь детей, и браузер, увидев &lt;br&gt;some text&lt;/br&gt;, не определит его как &lt;br&gt; с текстом внутри.</p></div><a class="p-l-" name="part3768410" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768410"><span class="p-s-"></span></a><div class="fragment"><p>Текстовый узел с текстом. Это должно было быть потомком выше mytag, а не элементом одного с ним уровня.</p></div><a class="p-l-" name="part3768411" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768411"><span class="p-s-"></span></a><div class="fragment"><p>Неправильно закрытый тег mytag. Это недопустимо в именах элементов, которые не могут иметь слэш /. Кроме этого закрывающий элемент не должен быть частью DOM, так как он используется только чтобы очертить структуру DOM.</p></div><a class="p-l-" name="part3768412" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768412"><span class="p-s-"></span></a><div class="fragment"><p>CSS-стилизация пользовательских тегов</p></div><a class="p-l-" name="part3768413" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768413"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы создать рабочие CSS-селекторы для пользовательских элементов, имя пользовательского элемента должно быть предварительно объявлено с помощью document.createElement(&#39;my-tag&#39;) независимо от пространства имен XML.</p></div><a class="p-l-" name="part3768414" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768414"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html xmlns:ng=&quot;needed for ng: namespace&quot;&gt;</p></div><a class="p-l-" name="part3768415" href="/you/angularjs-developer-guide/into-ru/trans/?page=38#part3768415"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768416" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768416"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!--[if lte IE 8]&gt;</p></div><a class="p-l-" name="part3768417" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768417"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script&gt;</p></div><a class="p-l-" name="part3768418" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768418"><span class="p-s-"></span></a><div class="fragment"><p>// необходимо для корректного парсинга ng-include</p></div><a class="p-l-" name="part3768419" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768419"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng-include&#39;);</p></div><a class="p-l-" name="part3768420" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768420"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768421" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768421"><span class="p-s-"></span></a><div class="fragment"><p>// необходимо для включения CSS ссылок</p></div><a class="p-l-" name="part3768422" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768422"><span class="p-s-"></span></a><div class="fragment"><p>document.createElement(&#39;ng:view&#39;);</p></div><a class="p-l-" name="part3768423" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768423"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/script&gt;</p></div><a class="p-l-" name="part3768424" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768424"><span class="p-s-"></span></a><div class="fragment"><p>&lt;![endif]--&gt;</p></div><a class="p-l-" name="part3768425" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768425"><span class="p-s-"></span></a><div class="fragment"><p>&lt;style&gt;</p></div><a class="p-l-" name="part3768426" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768426"><span class="p-s-"></span></a><div class="fragment"><p>ng\\:view {</p></div><a class="p-l-" name="part3768427" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768427"><span class="p-s-"></span></a><div class="fragment"><p>display: block;</p></div><a class="p-l-" name="part3768428" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768428"><span class="p-s-"></span></a><div class="fragment"><p>border: 1px solid red;</p></div><a class="p-l-" name="part3768429" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768429"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768430" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768430"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768431" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768431"><span class="p-s-"></span></a><div class="fragment"><p>ng-include {</p></div><a class="p-l-" name="part3768432" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768432"><span class="p-s-"></span></a><div class="fragment"><p>display: block;</p></div><a class="p-l-" name="part3768433" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768433"><span class="p-s-"></span></a><div class="fragment"><p>border: 1px solid blue;</p></div><a class="p-l-" name="part3768434" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768434"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768435" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768435"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/style&gt;</p></div><a class="p-l-" name="part3768436" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768436"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768437" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768437"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768438" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768438"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ng:view&gt;&lt;/ng:view&gt;</p></div><a class="p-l-" name="part3768439" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768439"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ng-include&gt;&lt;/ng-include&gt;</p></div><a class="p-l-" name="part3768440" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768440"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768441" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768441"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768442" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768442"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768443" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768443"><span class="p-s-"></span></a><div class="fragment"><p>ВВЕДЕНИЕ</p></div><a class="p-l-" name="part3768444" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768444"><span class="p-s-"></span></a><div class="fragment"><p>Angular это сугубо клиентская технология, полностью написанная на JavaScript. Он использует широко распространенные веб-технологии (HTML, CSS и JavaScript), делая разработку веб-приложений проще и быстрее, чем когда-либо прежде.</p></div><a class="p-l-" name="part3768445" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768445"><span class="p-s-"></span></a><div class="fragment"><p>Одним из важных способов, которым Angular упрощает веб-разработку, является увеличение уровня абстракции между разработчиком и большинством низкоуровневых веб-разработки приложений. Angular автоматически берет на себя многие из этих задач, в том числе:</p></div><a class="p-l-" name="part3768446" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768446"><span class="p-s-"></span></a><div class="fragment"><p>Манипуляции с DOM</p></div><a class="p-l-" name="part3768447" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768447"><span class="p-s-"></span></a><div class="fragment"><p>Установка наблюдателей и уведомителей</p></div><a class="p-l-" name="part3768448" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768448"><span class="p-s-"></span></a><div class="fragment"><p>Валидация входных данных</p></div><a class="p-l-" name="part3768449" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768449"><span class="p-s-"></span></a><div class="fragment"><p>Потому обработчики Angular делают большую часть работы, связанной с этими задачами, а разработчики могут сконцентрироваться на логике приложения, а не на монотонном, подверженном ошибкам, более низком уровне кодирования.</p></div><a class="p-l-" name="part3768450" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768450"><span class="p-s-"></span></a><div class="fragment"><p>В то время как Angular упрощает разработку веб-приложений, он задействует сравнительно сложные технологии на стороне клиента, в том числе:</p></div><a class="p-l-" name="part3768451" href="/you/angularjs-developer-guide/into-ru/trans/?page=39#part3768451"><span class="p-s-"></span></a><div class="fragment"><p>Отделение данных от логики приложения и представления</p></div><a class="p-l-" name="part3768452" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768452"><span class="p-s-"></span></a><div class="fragment"><p>Связывание данных между данными и представлением</p></div><a class="p-l-" name="part3768453" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768453"><span class="p-s-"></span></a><div class="fragment"><p>Сервисы (стандартные операции веб-приложения, реализованные в виде замещения объектов)</p></div><a class="p-l-" name="part3768454" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768454"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение зависимости (используется в основном для связи вместе с сервисами)</p></div><a class="p-l-" name="part3768455" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768455"><span class="p-s-"></span></a><div class="fragment"><p>Расширяемый компилятор HTML (полностью написан на JavaScript)</p></div><a class="p-l-" name="part3768456" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768456"><span class="p-s-"></span></a><div class="fragment"><p>Простое тестирование</p></div><a class="p-l-" name="part3768457" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768457"><span class="p-s-"></span></a><div class="fragment"><p>Раньше подобные методы по большей части отсутствовали на стороне клиента. </p></div><a class="p-l-" name="part3768458" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768458"><span class="p-s-"></span></a><div class="fragment"><p>Одностраничные / многостраничные приложения</p></div><a class="p-l-" name="part3768459" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768459"><span class="p-s-"></span></a><div class="fragment"><p>Можно использовать Angular для разработки как одностраничных, так и многостраничных приложений, но Angular предназначен в первую очередь для разработки одностраничного приложения. Angular поддерживает историю браузера, кнопки вперед / назад и закладки на одностраничное приложение.</p></div><a class="p-l-" name="part3768460" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768460"><span class="p-s-"></span></a><div class="fragment"><p>Разумеется вы не хотите загружать Angular для каждой измененной страницы, как было бы в случае с использованием Angular в многостраничном приложении. Тем не менее, это имело бы смысл, если добавить подмножество особенностей Angular (например, шаблоны для трансляции особенностей связывания данных в Angular), в существующие многостраничные приложения. Можете прочитать этот курс действий, если вы перешли со старого приложения к одностраничному приложению Angular.</p></div><a class="p-l-" name="part3768461" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768461"><span class="p-s-"></span></a><div class="fragment"><p>МОДУЛИ</p></div><a class="p-l-" name="part3768462" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768462"><span class="p-s-"></span></a><div class="fragment"><p>Что такое модуль?</p></div><a class="p-l-" name="part3768463" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768463"><span class="p-s-"></span></a><div class="fragment"><p>Большинство приложений имеют основной метод, который создает экземпляр, связывает и загружает приложение. Приложения в Angular не имеют основного исполняемого метода. Модуль выполняет роль декларативного описания того, как приложение должно быть загружено. Есть несколько преимуществ такого подхода:</p></div><a class="p-l-" name="part3768464" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768464"><span class="p-s-"></span></a><div class="fragment"><p>Процесс более декларативен, поэтому легче для понимания</p></div><a class="p-l-" name="part3768465" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768465"><span class="p-s-"></span></a><div class="fragment"><p>Для модульного тестирования нет необходимости загружать все модули, использующиеся в написании юнит-тестов.</p></div><a class="p-l-" name="part3768466" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768466"><span class="p-s-"></span></a><div class="fragment"><p>Можно подгрузить дополнительные модули, которые переопределят какие-то настройки, облегчая тем самым комплексное (end-to-end) тестирование</p></div><a class="p-l-" name="part3768467" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768467"><span class="p-s-"></span></a><div class="fragment"><p>Сторонний код можно упаковать в модуль и использовать многократно.</p></div><a class="p-l-" name="part3768468" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768468"><span class="p-s-"></span></a><div class="fragment"><p>Модули могут быть загружены в произвольном порядке/ параллельно (в связи с задержкой при выполнении модуля).</p></div><a class="p-l-" name="part3768469" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768469"><span class="p-s-"></span></a><div class="fragment"><p>Основы</p></div><a class="p-l-" name="part3768470" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768470"><span class="p-s-"></span></a><div class="fragment"><p>Хорошо, идем дальше. Как нам написать Hello World — приложение?</p></div><a class="p-l-" name="part3768471" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768471"><span class="p-s-"></span></a><div class="fragment"><p>Важно:</p></div><a class="p-l-" name="part3768472" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768472"><span class="p-s-"></span></a><div class="fragment"><p>API модуля</p></div><a class="p-l-" name="part3768473" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768473"><span class="p-s-"></span></a><div class="fragment"><p>Обратите внимание на ссылку на myApp-модуль в &lt;html ng-app=&quot;myApp&quot;&gt;, это то, что загрузит приложение, с помощью вашего модуля.</p></div><a class="p-l-" name="part3768474" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768474"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768475" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768475"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768476" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768476"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768477" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768477"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768478" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768478"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768479" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768479"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;myApp&quot;&gt;</p></div><a class="p-l-" name="part3768480" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768480"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768481" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768481"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768482" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768482"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768483" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768483"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768484" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768484"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768485" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768485"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div&gt;</p></div><a class="p-l-" name="part3768486" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768486"><span class="p-s-"></span></a><div class="fragment"><p>{{ &#39;World&#39; | greet }}</p></div><a class="p-l-" name="part3768487" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768487"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768488" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768488"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768489" href="/you/angularjs-developer-guide/into-ru/trans/?page=40#part3768489"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768490" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768490"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768491" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768491"><span class="p-s-"></span></a><div class="fragment"><p>Hello, World!</p></div><a class="p-l-" name="part3768492" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768492"><span class="p-s-"></span></a><div class="fragment"><p>Рекомендуемая установка</p></div><a class="p-l-" name="part3768493" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768493"><span class="p-s-"></span></a><div class="fragment"><p>Приведенный выше пример достаточно прост и плохо подходит для больших приложений. Вместо этого мы рекомендуем вам разбить приложение на несколько модулей вроде этого:</p></div><a class="p-l-" name="part3768494" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768494"><span class="p-s-"></span></a><div class="fragment"><p>Модуль service, для описания сервисов</p></div><a class="p-l-" name="part3768495" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768495"><span class="p-s-"></span></a><div class="fragment"><p>Модуль directive, для описания директив</p></div><a class="p-l-" name="part3768496" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768496"><span class="p-s-"></span></a><div class="fragment"><p>Модуль filter, для описания фильтров</p></div><a class="p-l-" name="part3768497" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768497"><span class="p-s-"></span></a><div class="fragment"><p>И модуль уровня приложения, который зависит от вышеуказанных модулей и содержит код инициализации.</p></div><a class="p-l-" name="part3768498" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768498"><span class="p-s-"></span></a><div class="fragment"><p>Причина этого разделения в том, что в тестах часто необходимо проигнорировать код инициализации, который, как правило, трудно проверить. Выделив этот код в отдельный модуль, его можно легко проигнорировать в тестах. Тестирование так же может быть более сфокусированным только на те модули, которые имеют отношения к тестам.</p></div><a class="p-l-" name="part3768499" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768499"><span class="p-s-"></span></a><div class="fragment"><p>Сказанное выше является лишь предложением, поэтому не стесняйтесь адаптировать это к собственным потребностям.</p></div><a class="p-l-" name="part3768500" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768500"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768501" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768501"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768502" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768502"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768503" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768503"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768504" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768504"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768505" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768505"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;xmpl&quot;&gt;</p></div><a class="p-l-" name="part3768506" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768506"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768507" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768507"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768508" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768508"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768509" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768509"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768510" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768510"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768511" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768511"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;XmplController&quot;&gt;</p></div><a class="p-l-" name="part3768512" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768512"><span class="p-s-"></span></a><div class="fragment"><p>{{ greeting }}!</p></div><a class="p-l-" name="part3768513" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768513"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768514" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768514"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768515" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768515"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768516" href="/you/angularjs-developer-guide/into-ru/trans/?page=41#part3768516"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768517" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768517"><span class="p-s-"></span></a><div class="fragment"><p>Bonjour World!!</p></div><a class="p-l-" name="part3768518" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768518"><span class="p-s-"></span></a><div class="fragment"><p>Модуль загрузки и зависимостей</p></div><a class="p-l-" name="part3768519" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768519"><span class="p-s-"></span></a><div class="fragment"><p>Модуль представляет собой набор конфигурационных и исполняемых блоков, которые применяются к приложению в процессе загрузки. В своей простейшей форме модуль состоит из двух видов блоков:</p></div><a class="p-l-" name="part3768520" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768520"><span class="p-s-"></span></a><div class="fragment"><p>Конфигурационные блоки — выполняются во время фазы регистрации и конфигурации. Только источники и константы могут быть внедрены в конфигурационные блоки. Это сделано для предотвращения случайного создания экземпляров сервисов, до их окончательной настройки.</p></div><a class="p-l-" name="part3768521" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768521"><span class="p-s-"></span></a><div class="fragment"><p>Исполняемые блоки — выполняются после того как инжектор создаст и заведет приложение. Только экземпляры и константы могут быть введены в исполняемые блоки. Это необходимо для предотвращения дальнейшей настройки системы во время выполнения приложения.</p></div><a class="p-l-" name="part3768522" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768522"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, []).</p></div><a class="p-l-" name="part3768523" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768523"><span class="p-s-"></span></a><div class="fragment"><p>config(function(injectables) { // provider-injector</p></div><a class="p-l-" name="part3768524" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768524"><span class="p-s-"></span></a><div class="fragment"><p>// Пример конфигурационного блока</p></div><a class="p-l-" name="part3768525" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768525"><span class="p-s-"></span></a><div class="fragment"><p>// Их может быть сколько угодно</p></div><a class="p-l-" name="part3768526" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768526"><span class="p-s-"></span></a><div class="fragment"><p>// Можно внедрять только источники (не экземпляры)</p></div><a class="p-l-" name="part3768527" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768527"><span class="p-s-"></span></a><div class="fragment"><p>// внутрь конфигурационного блока</p></div><a class="p-l-" name="part3768528" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768528"><span class="p-s-"></span></a><div class="fragment"><p>}).</p></div><a class="p-l-" name="part3768529" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768529"><span class="p-s-"></span></a><div class="fragment"><p>run(function(injectables) { // инжектор зависимостей</p></div><a class="p-l-" name="part3768530" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768530"><span class="p-s-"></span></a><div class="fragment"><p>// Пример исполняемого блока</p></div><a class="p-l-" name="part3768531" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768531"><span class="p-s-"></span></a><div class="fragment"><p>// Их может быть сколько угодно</p></div><a class="p-l-" name="part3768532" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768532"><span class="p-s-"></span></a><div class="fragment"><p>// Можно внедрять только экземпляры (не источники)</p></div><a class="p-l-" name="part3768533" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768533"><span class="p-s-"></span></a><div class="fragment"><p>// внутрь исполняемого блока</p></div><a class="p-l-" name="part3768534" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768534"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768535" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768535"><span class="p-s-"></span></a><div class="fragment"><p>Конфигурационные блоки</p></div><a class="p-l-" name="part3768536" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768536"><span class="p-s-"></span></a><div class="fragment"><p>Некоторые удобные методы модуля, эквивалентные конфигурации блока. Например:</p></div><a class="p-l-" name="part3768537" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768537"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, []).</p></div><a class="p-l-" name="part3768538" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768538"><span class="p-s-"></span></a><div class="fragment"><p>value(&#39;a&#39;, 123).</p></div><a class="p-l-" name="part3768539" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768539"><span class="p-s-"></span></a><div class="fragment"><p>factory(&#39;a&#39;, function() { return 123; }).</p></div><a class="p-l-" name="part3768540" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768540"><span class="p-s-"></span></a><div class="fragment"><p>directive(&#39;directiveName&#39;, ...).</p></div><a class="p-l-" name="part3768541" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768541"><span class="p-s-"></span></a><div class="fragment"><p>filter(&#39;filterName&#39;, ...);</p></div><a class="p-l-" name="part3768542" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768542"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768543" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768543"><span class="p-s-"></span></a><div class="fragment"><p>// а так же</p></div><a class="p-l-" name="part3768544" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768544"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768545" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768545"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, []).</p></div><a class="p-l-" name="part3768546" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768546"><span class="p-s-"></span></a><div class="fragment"><p>config(function($provide, $compileProvider, $filterProvider) {</p></div><a class="p-l-" name="part3768547" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768547"><span class="p-s-"></span></a><div class="fragment"><p>$provide.value(&#39;a&#39;, 123);</p></div><a class="p-l-" name="part3768548" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768548"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;a&#39;, function() { return 123; });</p></div><a class="p-l-" name="part3768549" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768549"><span class="p-s-"></span></a><div class="fragment"><p>$compileProvider.directive(&#39;directiveName&#39;, ...);</p></div><a class="p-l-" name="part3768550" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768550"><span class="p-s-"></span></a><div class="fragment"><p>$filterProvider.register(&#39;filterName&#39;, ...);</p></div><a class="p-l-" name="part3768551" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768551"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768552" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768552"><span class="p-s-"></span></a><div class="fragment"><p>Конфигурационные блоки применяются в том порядке, в котором они зарегистрированы. Единственным исключением из этого являются предопределенные константы, которые размещены в начале всех конфигурационных блоков.</p></div><a class="p-l-" name="part3768553" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768553"><span class="p-s-"></span></a><div class="fragment"><p>Исполняемые блоки</p></div><a class="p-l-" name="part3768554" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768554"><span class="p-s-"></span></a><div class="fragment"><p>Исполняемые блоки ближе всего к главному методу Angular. Исполняемый блок содержит код, который должен выполниться при запуске приложения. Он выполняется после того, как все службы были настроены и был создан инжектор. Исполняемые блоки обычно содержат код, усложняющий юнит-тест, и по этой причине должны быть объявлены в изолированных модулях, так чтобы их можно было проигнорировать в юнит-тестах.</p></div><a class="p-l-" name="part3768555" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768555"><span class="p-s-"></span></a><div class="fragment"><p>Зависимости</p></div><a class="p-l-" name="part3768556" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768556"><span class="p-s-"></span></a><div class="fragment"><p>Одни модули могут зависеть от других модулей. Зависимость от модуля означает, что необходимый модуль должен быть загружен перед требующим его загрузки модулем. Другими словами, конфигурацию блоков с необходимыми модулями нужно выполнить до конфигурации блоков которым требуются эти модули. То же самое верно и для исполняемых блоков. Каждый модуль может быть загружен только один раз, даже если он требуется для нескольких других модулей.</p></div><a class="p-l-" name="part3768557" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768557"><span class="p-s-"></span></a><div class="fragment"><p>Асинхронная загрузка</p></div><a class="p-l-" name="part3768558" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768558"><span class="p-s-"></span></a><div class="fragment"><p>Модули это способ управления конфигурацией инжектора $injector, и не имеют ничего общего с загрузкой скриптов в VM. Существуют проекты, подгружающие необходимые скрипты извне, что может быть сделано и в Angular. Поскольку модули ничего не делают во время загрузки они могут быть загружены в VM в любом порядке и таким образом загрузчики скрипта могут воспользоваться этим свойством и распараллелить процесс загрузки.</p></div><a class="p-l-" name="part3768559" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768559"><span class="p-s-"></span></a><div class="fragment"><p>Юнит-тестирование</p></div><a class="p-l-" name="part3768560" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768560"><span class="p-s-"></span></a><div class="fragment"><p>В простейшей форме модульное тестирование это выделение части из приложения и моделирование воздействий на эту часть. Важно понимать, что каждый модуль могут быть загружен в инжектор только один раз. Обычно приложение имеет только один инжектор. Но в тестах, каждый тест имеет свой собственный инжектор, это означает, что модули загружаются несколько раз в VM. Правильно структурированные модули могут помочь провести модульное тестирование, как в этом примере:</p></div><a class="p-l-" name="part3768561" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768561"><span class="p-s-"></span></a><div class="fragment"><p>Во всех этих примерах будем считать определение модуля таким:</p></div><a class="p-l-" name="part3768562" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768562"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;greetMod&#39;, []).</p></div><a class="p-l-" name="part3768563" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768563"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768564" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768564"><span class="p-s-"></span></a><div class="fragment"><p>factory(&#39;alert&#39;, function($window) {</p></div><a class="p-l-" name="part3768565" href="/you/angularjs-developer-guide/into-ru/trans/?page=42#part3768565"><span class="p-s-"></span></a><div class="fragment"><p>return function(text) {</p></div><a class="p-l-" name="part3768566" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768566"><span class="p-s-"></span></a><div class="fragment"><p>$window.alert(text);</p></div><a class="p-l-" name="part3768567" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768567"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768568" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768568"><span class="p-s-"></span></a><div class="fragment"><p>}).</p></div><a class="p-l-" name="part3768569" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768569"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768570" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768570"><span class="p-s-"></span></a><div class="fragment"><p>value(&#39;salutation&#39;, &#39;Hello&#39;).</p></div><a class="p-l-" name="part3768571" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768571"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768572" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768572"><span class="p-s-"></span></a><div class="fragment"><p>factory(&#39;greet&#39;, function(alert, salutation) {</p></div><a class="p-l-" name="part3768573" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768573"><span class="p-s-"></span></a><div class="fragment"><p>return function(name) {</p></div><a class="p-l-" name="part3768574" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768574"><span class="p-s-"></span></a><div class="fragment"><p>alert(salutation + &#39; &#39; + name + &#39;!&#39;);</p></div><a class="p-l-" name="part3768575" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768575"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768576" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768576"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768577" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768577"><span class="p-s-"></span></a><div class="fragment"><p>Давайте напишем несколько тестов:</p></div><a class="p-l-" name="part3768578" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768578"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;myApp&#39;, function() {</p></div><a class="p-l-" name="part3768579" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768579"><span class="p-s-"></span></a><div class="fragment"><p>// Загружаем соответствующие модули приложения затем загружаем</p></div><a class="p-l-" name="part3768580" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768580"><span class="p-s-"></span></a><div class="fragment"><p>// специальный тестовый модуль, который перекрывает $window фиктивной версией,</p></div><a class="p-l-" name="part3768581" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768581"><span class="p-s-"></span></a><div class="fragment"><p>// так что вызов window.alert () не будет блокировать тест</p></div><a class="p-l-" name="part3768582" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768582"><span class="p-s-"></span></a><div class="fragment"><p>// выполняющийся с окном предупреждения.  Это пример переопределения</p></div><a class="p-l-" name="part3768583" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768583"><span class="p-s-"></span></a><div class="fragment"><p>// конфигурации в тестах.</p></div><a class="p-l-" name="part3768584" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768584"><span class="p-s-"></span></a><div class="fragment"><p>beforeEach(module(&#39;greetMod&#39;, function($provide) {</p></div><a class="p-l-" name="part3768585" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768585"><span class="p-s-"></span></a><div class="fragment"><p>$provide.value(&#39;$window&#39;, {</p></div><a class="p-l-" name="part3768586" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768586"><span class="p-s-"></span></a><div class="fragment"><p>alert: jasmine.createSpy(&#39;alert&#39;)</p></div><a class="p-l-" name="part3768587" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768587"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768588" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768588"><span class="p-s-"></span></a><div class="fragment"><p>}));</p></div><a class="p-l-" name="part3768589" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768589"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768590" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768590"><span class="p-s-"></span></a><div class="fragment"><p>// Функция inject() создаст инжектор, внедрив все что нужно,</p></div><a class="p-l-" name="part3768591" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768591"><span class="p-s-"></span></a><div class="fragment"><p>// и $window в тестах. Тесты не должны самостоятельно решать проблемы</p></div><a class="p-l-" name="part3768592" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768592"><span class="p-s-"></span></a><div class="fragment"><p>// со связями в приложении, только если тестируют их</p></div><a class="p-l-" name="part3768593" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768593"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should alert on $window&#39;, inject(function(greet, $window) {</p></div><a class="p-l-" name="part3768594" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768594"><span class="p-s-"></span></a><div class="fragment"><p>greet(&#39;World&#39;);</p></div><a class="p-l-" name="part3768595" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768595"><span class="p-s-"></span></a><div class="fragment"><p>expect($window.alert).toHaveBeenCalledWith(&#39;Hello World!&#39;);</p></div><a class="p-l-" name="part3768596" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768596"><span class="p-s-"></span></a><div class="fragment"><p>}));</p></div><a class="p-l-" name="part3768597" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768597"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768598" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768598"><span class="p-s-"></span></a><div class="fragment"><p>// другой способ переопределения конфигурации в</p></div><a class="p-l-" name="part3768599" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768599"><span class="p-s-"></span></a><div class="fragment"><p>// тестах использующих встроенный модуль и внедрение методов.</p></div><a class="p-l-" name="part3768600" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768600"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should alert using the alert service&#39;, function() {</p></div><a class="p-l-" name="part3768601" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768601"><span class="p-s-"></span></a><div class="fragment"><p>var alertSpy = jasmine.createSpy(&#39;alert&#39;);</p></div><a class="p-l-" name="part3768602" href="/you/angularjs-developer-guide/into-ru/trans/?page=43#part3768602"><span class="p-s-"></span></a><div class="fragment"><p>module(function($provide) {</p></div><a class="p-l-" name="part3768603" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768603"><span class="p-s-"></span></a><div class="fragment"><p>$provide.value(&#39;alert&#39;, alertSpy);</p></div><a class="p-l-" name="part3768604" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768604"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768605" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768605"><span class="p-s-"></span></a><div class="fragment"><p>inject(function(greet) {</p></div><a class="p-l-" name="part3768606" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768606"><span class="p-s-"></span></a><div class="fragment"><p>greet(&#39;World&#39;);</p></div><a class="p-l-" name="part3768607" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768607"><span class="p-s-"></span></a><div class="fragment"><p>expect(alertSpy).toHaveBeenCalledWith(&#39;Hello World!&#39;);</p></div><a class="p-l-" name="part3768608" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768608"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768609" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768609"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768610" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768610"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768611" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768611"><span class="p-s-"></span></a><div class="fragment"><p>ОБЛАСТИ ВИДИМОСТИ</p></div><a class="p-l-" name="part3768612" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768612"><span class="p-s-"></span></a><div class="fragment"><p>Что такое области видимости (scopes)?</p></div><a class="p-l-" name="part3768613" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768613"><span class="p-s-"></span></a><div class="fragment"><p>область является объектом, который относится к модели приложения. Это контекст выполнения выражений. Области расположены в иерархической структуре, имитирующей DOM-структуру приложения. Области могут отслеживать выражения и распространение событий.</p></div><a class="p-l-" name="part3768614" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768614"><span class="p-s-"></span></a><div class="fragment"><p>Характеристики областей</p></div><a class="p-l-" name="part3768615" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768615"><span class="p-s-"></span></a><div class="fragment"><p>Области обеспечивают API ($watch) для наблюдения за изменениями модели.</p></div><a class="p-l-" name="part3768616" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768616"><span class="p-s-"></span></a><div class="fragment"><p>Области обеспечивают API ($apply) для распространения любых изменений модели через систему внутри «сферы Angular» (контроллеры, сервисы, обработчики событий)</p></div><a class="p-l-" name="part3768617" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768617"><span class="p-s-"></span></a><div class="fragment"><p>Области могут быть вложенными, чтобы изолировать компоненты приложений, обеспечивая при этом доступ к общим свойствам модели. Область (прототипически) наследует свойства от родительской области.</p></div><a class="p-l-" name="part3768618" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768618"><span class="p-s-"></span></a><div class="fragment"><p>Области создают контекст в котором вычисляются выражения. Например, выражение {{username}} не имеет смысла, если оно не вычислено в области, которая определяет переменную username.</p></div><a class="p-l-" name="part3768619" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768619"><span class="p-s-"></span></a><div class="fragment"><p>Область как модель данных</p></div><a class="p-l-" name="part3768620" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768620"><span class="p-s-"></span></a><div class="fragment"><p>Область является связующим звеном между контроллером и видом. В фазе привязки шаблона директивы устанавливают выражение $warch в область. $warch позволяет уведомлять директивы об изменении свойства, что позволяет директиве, обновить значение в DOM.</p></div><a class="p-l-" name="part3768621" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768621"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры и директивы имеют ссылки на область, но не друг на друга. Это изолирует контроллер от директивы, а также от DOM&#39;а. Это важный момент, так как контроллеры остаются визуально независимыми, что значительно улучшает тестирование.</p></div><a class="p-l-" name="part3768622" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768622"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768623" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768623"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768624" href="/you/angularjs-developer-guide/into-ru/trans/?page=44#part3768624"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768625" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768625"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768626" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768626"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768627" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768627"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768628" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768628"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768629" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768629"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768630" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768630"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768631" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768631"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768632" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768632"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768633" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768633"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;MyController&quot;&gt;</p></div><a class="p-l-" name="part3768634" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768634"><span class="p-s-"></span></a><div class="fragment"><p>Your name:</p></div><a class="p-l-" name="part3768635" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768635"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input type=&quot;text&quot; ng-model=&quot;username&quot;&gt;</p></div><a class="p-l-" name="part3768636" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768636"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&#39;sayHello()&#39;&gt;greet&lt;/button&gt;</p></div><a class="p-l-" name="part3768637" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768637"><span class="p-s-"></span></a><div class="fragment"><p>&lt;hr&gt;</p></div><a class="p-l-" name="part3768638" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768638"><span class="p-s-"></span></a><div class="fragment"><p>{{greeting}}</p></div><a class="p-l-" name="part3768639" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768639"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768640" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768640"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768641" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768641"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768642" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768642"><span class="p-s-"></span></a><div class="fragment"><p>Demo</p></div><a class="p-l-" name="part3768643" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768643"><span class="p-s-"></span></a><div class="fragment"><p>Your name: greet</p></div><a class="p-l-" name="part3768644" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768644"><span class="p-s-"></span></a><div class="fragment"><p>В приведенном выше примере уведомление MyController присоединяет World к свойству username  в области видимости. Область видимости затем обновляет значение в input, который затем отображает input с предварительно заполненным именем пользователя. Это демонстрирует, как контроллер может записать данные в область видимости.</p></div><a class="p-l-" name="part3768645" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768645"><span class="p-s-"></span></a><div class="fragment"><p>Точно так же контроллер можно назначить поведение области видимости, как видно по методу SayHello, который вызывается, когда пользователь нажимает на кнопку «greet». Метод SayHello может прочитать свойство «username» и создать свойство«greeting». Это показывает, что свойства в области видимости обновляются автоматически, когда они связаны с виджетом HTML input.</p></div><a class="p-l-" name="part3768646" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768646"><span class="p-s-"></span></a><div class="fragment"><p>Логически рендеринг {{greeting}} включает в себя:</p></div><a class="p-l-" name="part3768647" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768647"><span class="p-s-"></span></a><div class="fragment"><p>вычисление области видимости, связанной с DOM-узлом, где {{greeting}} определено в шаблоне. В данном примере это та же область видимости, что и область, переданная в MyController. (Иерархию областей видимости рассмотрим позже.)</p></div><a class="p-l-" name="part3768648" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768648"><span class="p-s-"></span></a><div class="fragment"><p>Вычисление выражения greeting в области видимости, объявленной выше, и присвоение результата к тексту включенному в элемент DOM.</p></div><a class="p-l-" name="part3768649" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768649"><span class="p-s-"></span></a><div class="fragment"><p>Можно думать об области видимости и ее свойствах, как о данных, которые используются для визуализации представления. Область видимости является единственным источником актуальных данных для всех вещей, связанных с представлением.</p></div><a class="p-l-" name="part3768650" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768650"><span class="p-s-"></span></a><div class="fragment"><p>Со стороны тестируемости, разделение вида и контроллера желательно, потому что это позволяет протестировать поведение, не отвлекаясь на детали рендеринга.</p></div><a class="p-l-" name="part3768651" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768651"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should say hello&#39;, function() {</p></div><a class="p-l-" name="part3768652" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768652"><span class="p-s-"></span></a><div class="fragment"><p>var scopeMock = {};</p></div><a class="p-l-" name="part3768653" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768653"><span class="p-s-"></span></a><div class="fragment"><p>var cntl = new MyController(scopeMock);</p></div><a class="p-l-" name="part3768654" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768654"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768655" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768655"><span class="p-s-"></span></a><div class="fragment"><p>// Утверждение, что имя пользователя является предварительно-заполняемым</p></div><a class="p-l-" name="part3768656" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768656"><span class="p-s-"></span></a><div class="fragment"><p>expect(scopeMock.username).toEqual(&#39;World&#39;);</p></div><a class="p-l-" name="part3768657" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768657"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768658" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768658"><span class="p-s-"></span></a><div class="fragment"><p>// Утверждение, что мы читаем имя пользователя и приветствуем его</p></div><a class="p-l-" name="part3768659" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768659"><span class="p-s-"></span></a><div class="fragment"><p>scopeMock.username = &#39;angular&#39;;</p></div><a class="p-l-" name="part3768660" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768660"><span class="p-s-"></span></a><div class="fragment"><p>scopeMock.sayHello();</p></div><a class="p-l-" name="part3768661" href="/you/angularjs-developer-guide/into-ru/trans/?page=45#part3768661"><span class="p-s-"></span></a><div class="fragment"><p>expect(scopeMock.greeting).toEqual(&#39;Hello angular!&#39;);</p></div><a class="p-l-" name="part3768662" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768662"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768663" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768663"><span class="p-s-"></span></a><div class="fragment"><p>Иерархия областей видимости</p></div><a class="p-l-" name="part3768664" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768664"><span class="p-s-"></span></a><div class="fragment"><p>Каждое приложение Angular имеет только одну корневую область видимости, но может иметь несколько дочерних областей видимости.</p></div><a class="p-l-" name="part3768665" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768665"><span class="p-s-"></span></a><div class="fragment"><p>Приложение может иметь несколько областей видимсоти, потому что некоторые директивы создают новых потомков областей (см. директивы документации, чтобы узнать, какие директивы создают новые области видимости). Когда новые области видимости будут созданы, они будут добавлены как потомки их родительской области. Это создает древовидную структуру, которая параллельна DOM, к которому они прикреплены</p></div><a class="p-l-" name="part3768666" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768666"><span class="p-s-"></span></a><div class="fragment"><p>Когда Angular вычисляет {{username}}, то он сначала ищет в области видимости, связанной с данным элементом, свойство username. Если такое свойство не найдено, он ищет в родительской области и так далее, пока достигнет корневой области видимости. В JavaScript такое поведение называется прототипным наследованием и дочерние области видимости прототипически наследуются от своих родителей.</p></div><a class="p-l-" name="part3768667" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768667"><span class="p-s-"></span></a><div class="fragment"><p>Этот пример иллюстрирует области видимости в приложении и прототип наследование свойств.</p></div><a class="p-l-" name="part3768668" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768668"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768669" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768669"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768670" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768670"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768671" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768671"><span class="p-s-"></span></a><div class="fragment"><p>style.css</p></div><a class="p-l-" name="part3768672" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768672"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768673" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768673"><span class="p-s-"></span></a><div class="fragment"><p>!doctype html&gt;</p></div><a class="p-l-" name="part3768674" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768674"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768675" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768675"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768676" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768676"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768677" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768677"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768678" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768678"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768679" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768679"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768680" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768680"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;EmployeeController&quot;&gt;</p></div><a class="p-l-" name="part3768681" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768681"><span class="p-s-"></span></a><div class="fragment"><p>Manager: {{employee.name}} [ {{department}} ]&lt;br&gt;</p></div><a class="p-l-" name="part3768682" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768682"><span class="p-s-"></span></a><div class="fragment"><p>Reports:</p></div><a class="p-l-" name="part3768683" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768683"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ul&gt;</p></div><a class="p-l-" name="part3768684" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768684"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;employee in employee.reports&quot;&gt;</p></div><a class="p-l-" name="part3768685" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768685"><span class="p-s-"></span></a><div class="fragment"><p>{{employee.name}} [ {{department}} ]</p></div><a class="p-l-" name="part3768686" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768686"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3768687" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768687"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ul&gt;</p></div><a class="p-l-" name="part3768688" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768688"><span class="p-s-"></span></a><div class="fragment"><p>&lt;hr&gt;</p></div><a class="p-l-" name="part3768689" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768689"><span class="p-s-"></span></a><div class="fragment"><p>{{greeting}}</p></div><a class="p-l-" name="part3768690" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768690"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768691" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768691"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768692" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768692"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768693" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768693"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3768694" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768694"><span class="p-s-"></span></a><div class="fragment"><p>Manager: Joe the Manager [ Engineering ]</p></div><a class="p-l-" name="part3768695" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768695"><span class="p-s-"></span></a><div class="fragment"><p>Reports:</p></div><a class="p-l-" name="part3768696" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768696"><span class="p-s-"></span></a><div class="fragment"><p>John Smith [ Engineering ]</p></div><a class="p-l-" name="part3768697" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768697"><span class="p-s-"></span></a><div class="fragment"><p>Mary Run [ Engineering ]</p></div><a class="p-l-" name="part3768698" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768698"><span class="p-s-"></span></a><div class="fragment"><p>Обратите внимание, что Angular автоматически помечает классом ng-scope элементы прикрепленные к области видимости. Определение &lt;style&gt; в данном примере подсвечивает красным новые области видимости. Дочерние области видимости необходимы, чтобы повторитель вычислил выражение {{employee.name}}, но в зависимости от области видимости выражение может иметь другой результат. Аналогично вычисление {{department}} прототипически наследуется от корневой области видимости, так как это единственное место, где department определен.</p></div><a class="p-l-" name="part3768699" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768699"><span class="p-s-"></span></a><div class="fragment"><p>Извлечение областей видимости из DOM.</p></div><a class="p-l-" name="part3768700" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768700"><span class="p-s-"></span></a><div class="fragment"><p>Области видимости крепятся к DOM как данные свойства $scope, и могут быть получены в целях отладки. (Маловероятно, что может быть необходимо получения областей таким образом внутри приложения.) Место, где корневая область видимсоти крепится к DOM определяется расположением директивы ng-app. Обычно ng-app помечается элемент &lt;html&gt;, но ее может быть обозначен и другой элемент, если, например, Angular должен контроллировать только часть вида.</p></div><a class="p-l-" name="part3768701" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768701"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы изучить области видимости в отладчике:</p></div><a class="p-l-" name="part3768702" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768702"><span class="p-s-"></span></a><div class="fragment"><p>Щелкните правой кнопкой мыши на элементе интереса в вашем браузере и выберите «проверить элемент». Вы должны увидеть браузерный отладчик с выделенным элементом на который вы нажали.</p></div><a class="p-l-" name="part3768703" href="/you/angularjs-developer-guide/into-ru/trans/?page=46#part3768703"><span class="p-s-"></span></a><div class="fragment"><p>Отладчик позволяет получить доступ к выбранному элементу в консоли как переменная $0 </p></div><a class="p-l-" name="part3768704" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768704"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы получить соответствующую область видимости выполните в консоли: angular.element($0).scope()</p></div><a class="p-l-" name="part3768705" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768705"><span class="p-s-"></span></a><div class="fragment"><p>Распределение событий областей видимости</p></div><a class="p-l-" name="part3768706" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768706"><span class="p-s-"></span></a><div class="fragment"><p>Области могут распространяться в событиях аналогично событиям DOM. Событие можно транслировать в дочернюю область видимости или генерировать в родительских</p></div><a class="p-l-" name="part3768707" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768707"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3768708" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768708"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3768709" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768709"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3768710" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768710"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3768711" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768711"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3768712" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768712"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3768713" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768713"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3768714" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768714"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768715" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768715"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3768716" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768716"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3768717" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768717"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3768718" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768718"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;EventController&quot;&gt;</p></div><a class="p-l-" name="part3768719" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768719"><span class="p-s-"></span></a><div class="fragment"><p>Root scope &lt;tt&gt;MyEvent&lt;/tt&gt; count: {{count}}</p></div><a class="p-l-" name="part3768720" href="/you/angularjs-developer-guide/into-ru/trans/?page=47#part3768720"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ul&gt;</p></div><a class="p-l-" name="part3768721" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768721"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;i in [1]&quot; ng-controller=&quot;EventController&quot;&gt;</p></div><a class="p-l-" name="part3768722" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768722"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;$emit(&#39;MyEvent&#39;)&quot;&gt;$emit(&#39;MyEvent&#39;)&lt;/button&gt;</p></div><a class="p-l-" name="part3768723" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768723"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;$broadcast(&#39;MyEvent&#39;)&quot;&gt;$broadcast(&#39;MyEvent&#39;)&lt;/button&gt;</p></div><a class="p-l-" name="part3768724" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768724"><span class="p-s-"></span></a><div class="fragment"><p>&lt;br&gt;</p></div><a class="p-l-" name="part3768725" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768725"><span class="p-s-"></span></a><div class="fragment"><p>Middle scope &lt;tt&gt;MyEvent&lt;/tt&gt; count: {{count}}</p></div><a class="p-l-" name="part3768726" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768726"><span class="p-s-"></span></a><div class="fragment"><p>&lt;ul&gt;</p></div><a class="p-l-" name="part3768727" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768727"><span class="p-s-"></span></a><div class="fragment"><p>&lt;li ng-repeat=&quot;item in [1, 2]&quot; ng-controller=&quot;EventController&quot;&gt;</p></div><a class="p-l-" name="part3768728" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768728"><span class="p-s-"></span></a><div class="fragment"><p>Leaf scope &lt;tt&gt;MyEvent&lt;/tt&gt; count: {{count}}</p></div><a class="p-l-" name="part3768729" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768729"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3768730" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768730"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ul&gt;</p></div><a class="p-l-" name="part3768731" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768731"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/li&gt;</p></div><a class="p-l-" name="part3768732" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768732"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/ul&gt;</p></div><a class="p-l-" name="part3768733" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768733"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768734" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768734"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3768735" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768735"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3768736" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768736"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3768737" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768737"><span class="p-s-"></span></a><div class="fragment"><p>Root scope MyEvent count: 0</p></div><a class="p-l-" name="part3768738" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768738"><span class="p-s-"></span></a><div class="fragment"><p>$emit(&#39;MyEvent&#39;) $broadcast(&#39;MyEvent&#39;)</p></div><a class="p-l-" name="part3768739" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768739"><span class="p-s-"></span></a><div class="fragment"><p>Middle scope MyEvent count: 0</p></div><a class="p-l-" name="part3768740" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768740"><span class="p-s-"></span></a><div class="fragment"><p>Leaf scope MyEvent count: 0</p></div><a class="p-l-" name="part3768741" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768741"><span class="p-s-"></span></a><div class="fragment"><p>Leaf scope MyEvent count: 0</p></div><a class="p-l-" name="part3768742" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768742"><span class="p-s-"></span></a><div class="fragment"><p>Жизненный цикл области видимости</p></div><a class="p-l-" name="part3768743" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768743"><span class="p-s-"></span></a><div class="fragment"><p>Нормальный поток исполнения в рамках выполнения обработчиков событий - это исполнение соответствующих функций обратного вызова JavaScript. После каждого выполнения функции обратного вызова, браузер перерисовывает DOM и возвращается обратно к отслеживанию событий. </p></div><a class="p-l-" name="part3768744" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768744"><span class="p-s-"></span></a><div class="fragment"><p>Когда браузер вызывает JavaScript код, тот выполняется вне контекста Angular, и это означает что Angular ничего не знает об изменении модели. Для правильной обработки изменения модели, поток выполнения должен войти в контекст Angular, выполнив вызов $apply(). Только те изменения модели, которые выполняются внутри вызова $apply() будут правильно обработаны Angular. Например, если директива отслеживает события DOM, такие как ng-click, они должны быть выполнены внутри метода $apply().</p></div><a class="p-l-" name="part3768745" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768745"><span class="p-s-"></span></a><div class="fragment"><p>После вычисления выражения, вызов $apply() выполняет цикл $digest. В этой фазе область видимости просматривает все $watch выражения и сравнивает их с предыдущим значением. Проверка на факт изменения выполняется асинхронно. Это означает, что такое присваивание как $scope.username=&quot;angular&quot; не приведет к немедленному оповещению списка $watch об изменениях. Вместо этого оповещение списка $watch откладывается до обработки цикла $digest. Это отложенное оповещение необходимо, поскольку это позволяет объединить несколько обновлений модели в одно оповещение $watch, а также гарантирует, что во время процедуры очередного оповещения $watch никаких других функций $watch не выполняется. Если $watch меняет значение в модели, это вызывает дополнительную итерацию цикла $digest. </p></div><a class="p-l-" name="part3768746" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768746"><span class="p-s-"></span></a><div class="fragment"><p>Создание</p></div><a class="p-l-" name="part3768747" href="/you/angularjs-developer-guide/into-ru/trans/?page=48#part3768747"><span class="p-s-"></span></a><div class="fragment"><p>Корневая область видимости  создается во время выполнения вазы загрузки приложения инжектором ($injector). Во время связывания шаблона, некоторые директивы также создают новые дочерние области видимости. </p></div><a class="p-l-" name="part3768748" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768748"><span class="p-s-"></span></a><div class="fragment"><p>Регистрация наблюдателя</p></div><a class="p-l-" name="part3768749" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768749"><span class="p-s-"></span></a><div class="fragment"><p>Во время связывания шаблона директивы регистрируют наблюдателей в области видимости. Эти наблюдатели будут использованы для синхронизации значений в модели с данными в DOM.</p></div><a class="p-l-" name="part3768750" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768750"><span class="p-s-"></span></a><div class="fragment"><p>Изменение модели</p></div><a class="p-l-" name="part3768751" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768751"><span class="p-s-"></span></a><div class="fragment"><p>Для правильной обработки изменений вы должны делать их только внутри вызова scope.$apply(). Angular API делает это неявно, и таким образом никаких дополнительных вызовов $apply не нужно во время выполнения синхронных вызовов в контроллерах или асинхронных вызовах в сервисах $http или $timeout.</p></div><a class="p-l-" name="part3768752" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768752"><span class="p-s-"></span></a><div class="fragment"><p>Наблюдение за изменениями</p></div><a class="p-l-" name="part3768753" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768753"><span class="p-s-"></span></a><div class="fragment"><p>В конце вызова $apply, Angular выполняет цикл $digest в корневой области видимости, который распространяется также на дочерние области  видимости. Во время выполнения цикла $digest все выражения или функции в списке $watched проверяются с целью выявления изменения модели и если такое изменение зафиксировано - вызывается соответствующий обработчик в $watch.</p></div><a class="p-l-" name="part3768754" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768754"><span class="p-s-"></span></a><div class="fragment"><p>Разрушение области видимости</p></div><a class="p-l-" name="part3768755" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768755"><span class="p-s-"></span></a><div class="fragment"><p>Когда дочерние области видимости более не нужны, вызывается создатель области видимости, который также отвечает и за удаление ее через API scope.$destroy(). Это остановит распространение вызовов $digest в дочерние области видимости и позволит сборщику мусора освободить используемую память. </p></div><a class="p-l-" name="part3768756" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768756"><span class="p-s-"></span></a><div class="fragment"><p>Области видимости и директивы</p></div><a class="p-l-" name="part3768757" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768757"><span class="p-s-"></span></a><div class="fragment"><p>Во время фазы компиляции, компилятор находит директивы в шаблоне DOM. Такие директивы обычно делятся на две категории:</p></div><a class="p-l-" name="part3768758" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768758"><span class="p-s-"></span></a><div class="fragment"><p>Директивы наблюдения, такие как заключенные в двойные фигурные скобки выражения типа {{expression}}, которые регистрируют свои функции-наблюдатели вызовом метода $watch(). Этот тип директив необходим для обеспечения нотификации об изменениях которые могут привести к обновлению представления.</p></div><a class="p-l-" name="part3768759" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768759"><span class="p-s-"></span></a><div class="fragment"><p>Директивы прослушивания, такие как ng-click, которые регистрируют соответствующую функцию в DOM, которая выполняет соответствующее ей выражение и обновляет представление, используя метод $apply().</p></div><a class="p-l-" name="part3768760" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768760"><span class="p-s-"></span></a><div class="fragment"><p>Когда внешнее событие (такое как действие пользователя, таймер или XHR) вызывается, соответствующее выражение ассоциированное с этим событием должно быть выполнено в соответствующей области видимости посредством вызова метода $apply(), и таким образом все обработчики, отслеживающие события выполняются корректно.  </p></div><a class="p-l-" name="part3768761" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768761"><span class="p-s-"></span></a><div class="fragment"><p>Директивы, создающие области видимости</p></div><a class="p-l-" name="part3768762" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768762"><span class="p-s-"></span></a><div class="fragment"><p>В большинстве случаев, директивы и области видимости взаимодействуют, но не создают при этом новых областей видимости. Однако, некоторые директивы, такие как ng-controller и ng-repeat, создают новые дочерние области видимости и закрепляют их за соответствующими DOM элементами. Вы можете получить область видимости для любого DOM элемента при помощи метода angular.element(aDomElement).scope().</p></div><a class="p-l-" name="part3768763" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768763"><span class="p-s-"></span></a><div class="fragment"><p>Контролеры и области видимости</p></div><a class="p-l-" name="part3768764" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768764"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры и области видимости взаимодействуют друг с другом в следующих ситуациях:</p></div><a class="p-l-" name="part3768765" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768765"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры используют области видимости для предоставления методов шаблонам (см. ng-controller).</p></div><a class="p-l-" name="part3768766" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768766"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры определяют методы (и, соответственно, поведение) которые могут изменять модель (свойства в области видимости).</p></div><a class="p-l-" name="part3768767" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768767"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры могут регистрировать наблюдателей в модели. Эти наблюдатели выполняются сразу после обработки функций контроллера.</p></div><a class="p-l-" name="part3768768" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768768"><span class="p-s-"></span></a><div class="fragment"><p>Смотрите документацию по ng-controller для большей информации.</p></div><a class="p-l-" name="part3768769" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768769"><span class="p-s-"></span></a><div class="fragment"><p>Обсуждение производительности области видимости $watch</p></div><a class="p-l-" name="part3768770" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768770"><span class="p-s-"></span></a><div class="fragment"><p>Грязная проверка (Dirty checking) области видимости для изменения свойств является распространенной операцией в Angular и по этой причине функция проверки должна быть эффективной. Следует позаботиться о том, что бы функция проверки не обращалась к DOM, т. к. доступ к DOM на несколько порядков медленнее, чем доступ к свойствам JavaScript-объектов.</p></div><a class="p-l-" name="part3768771" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768771"><span class="p-s-"></span></a><div class="fragment"><p>ТИП</p></div><a class="p-l-" name="part3768772" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768772"><span class="p-s-"></span></a><div class="fragment"><p>ВНЕДРЕНИЕ ЗАВИСИМОСТЕЙ (DEPENDENCY INJECTION)</p></div><a class="p-l-" name="part3768773" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768773"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение зависимостей (DI) - это шаблон проектирования программного обеспечения, связанный с захватом кодом его зависимостей.</p></div><a class="p-l-" name="part3768774" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768774"><span class="p-s-"></span></a><div class="fragment"><p>Для более детального ознакомления с DI, посмотрите статью Внедрение зависимостей в Википедии, Инверсия Управления Мартина Фаулера (Martin Fowler), или почитайте про DI в вашей любимой книге про шаблоны проектирования ПО.</p></div><a class="p-l-" name="part3768775" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768775"><span class="p-s-"></span></a><div class="fragment"><p>DI в двух словах</p></div><a class="p-l-" name="part3768776" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768776"><span class="p-s-"></span></a><div class="fragment"><p>Существует всего 3 способа, как объект или функция может захватить зависимости:</p></div><a class="p-l-" name="part3768777" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768777"><span class="p-s-"></span></a><div class="fragment"><p>Зависимость может быть создана посредством обычного вызова оператора new.</p></div><a class="p-l-" name="part3768778" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768778"><span class="p-s-"></span></a><div class="fragment"><p>Зависимость может быть найдена при помощи ссылки на глобальную переменную.</p></div><a class="p-l-" name="part3768779" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768779"><span class="p-s-"></span></a><div class="fragment"><p>Зависимость может быть передана туда, где она необходима.</p></div><a class="p-l-" name="part3768780" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768780"><span class="p-s-"></span></a><div class="fragment"><p>Первые два способа создания или поиска зависимостей не оптимальны, потому что они четко задают зависимость, усложняя (или делая невозможным) изменение зависимости. Это особенно проблематично при тестировании, где всегда желательно включать имитаторы зависимостей для изоляции тестов.</p></div><a class="p-l-" name="part3768781" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768781"><span class="p-s-"></span></a><div class="fragment"><p>Третий способ наиболее пригоден, так как он снимает с компонента ответственность за поиск зависимости. Она просто передается компоненту.</p></div><a class="p-l-" name="part3768782" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768782"><span class="p-s-"></span></a><div class="fragment"><p>function SomeClass(greeter) {</p></div><a class="p-l-" name="part3768783" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768783"><span class="p-s-"></span></a><div class="fragment"><p>this.greeter = greeter</p></div><a class="p-l-" name="part3768784" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768784"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768785" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768785"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768786" href="/you/angularjs-developer-guide/into-ru/trans/?page=49#part3768786"><span class="p-s-"></span></a><div class="fragment"><p>SomeClass.prototype.doSomething = function(name) {</p></div><a class="p-l-" name="part3768787" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768787"><span class="p-s-"></span></a><div class="fragment"><p>this.greeter.greet(name);</p></div><a class="p-l-" name="part3768788" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768788"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768789" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768789"><span class="p-s-"></span></a><div class="fragment"><p>В примере выше класс SomeClass не заботится о том, где расположена зависимость greeter, он просто получает greeter во время выполнения.</p></div><a class="p-l-" name="part3768790" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768790"><span class="p-s-"></span></a><div class="fragment"><p>Это приятно, но ответственность за захват зависимости перекладывается на код, отвечающий за создание SomeClass.</p></div><a class="p-l-" name="part3768791" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768791"><span class="p-s-"></span></a><div class="fragment"><p>Для управления ответственностью за создание зависимостей в каждом Angular-приложении есть инжектор. Инжектор - это локатор служб отвечающий за создание и поиск зависимостей.</p></div><a class="p-l-" name="part3768792" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768792"><span class="p-s-"></span></a><div class="fragment"><p>Вот пример использования инжектора.</p></div><a class="p-l-" name="part3768793" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768793"><span class="p-s-"></span></a><div class="fragment"><p>// Обеспечение обвязки информации в модуле</p></div><a class="p-l-" name="part3768794" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768794"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, []).</p></div><a class="p-l-" name="part3768795" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768795"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768796" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768796"><span class="p-s-"></span></a><div class="fragment"><p>// Обучение инжектора построению &#39;greeter&#39;а</p></div><a class="p-l-" name="part3768797" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768797"><span class="p-s-"></span></a><div class="fragment"><p>// Заметьте, что greeter сам по себе зависит от &#39;$window&#39;</p></div><a class="p-l-" name="part3768798" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768798"><span class="p-s-"></span></a><div class="fragment"><p>factory(&#39;greeter&#39;, function($window) {</p></div><a class="p-l-" name="part3768799" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768799"><span class="p-s-"></span></a><div class="fragment"><p>// Это фабричная функция, которая отвечает за</p></div><a class="p-l-" name="part3768800" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768800"><span class="p-s-"></span></a><div class="fragment"><p>// создание &#39;greet&#39; службы.</p></div><a class="p-l-" name="part3768801" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768801"><span class="p-s-"></span></a><div class="fragment"><p>return {</p></div><a class="p-l-" name="part3768802" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768802"><span class="p-s-"></span></a><div class="fragment"><p>greet: function(text) {</p></div><a class="p-l-" name="part3768803" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768803"><span class="p-s-"></span></a><div class="fragment"><p>$window.alert(text);</p></div><a class="p-l-" name="part3768804" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768804"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768805" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768805"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3768806" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768806"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768807" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768807"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768808" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768808"><span class="p-s-"></span></a><div class="fragment"><p>// Создание нового инжектора из модуля</p></div><a class="p-l-" name="part3768809" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768809"><span class="p-s-"></span></a><div class="fragment"><p>// (Это обычно производится автоматически загрузчиком Angular)</p></div><a class="p-l-" name="part3768810" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768810"><span class="p-s-"></span></a><div class="fragment"><p>var injector = angular.injector([&#39;myModule&#39;, &#39;ng&#39;]);</p></div><a class="p-l-" name="part3768811" href="/you/angularjs-developer-guide/into-ru/trans/?page=50#part3768811"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768812" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768812"><span class="p-s-"></span></a><div class="fragment"><p>// Запрашивает какую-либо зависимость у инжектора</p></div><a class="p-l-" name="part3768813" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768813"><span class="p-s-"></span></a><div class="fragment"><p>var greeter = injector.get(&#39;greeter&#39;);</p></div><a class="p-l-" name="part3768814" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768814"><span class="p-s-"></span></a><div class="fragment"><p>Запрос зависимостей решает проблему четкого прописывания их в коде, но так же это означает, что инжектор должен быть доступен в любом месте приложения, что противоречит Закону Деметры. Для того, чтобы это исправить, мы передаем ответственность за поиск зависимостей инжектору описывая их следующим образом:</p></div><a class="p-l-" name="part3768815" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768815"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!-- Given this HTML --&gt;</p></div><a class="p-l-" name="part3768816" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768816"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;MyController&quot;&gt;</p></div><a class="p-l-" name="part3768817" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768817"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;sayHello()&quot;&gt;Hello&lt;/button&gt;</p></div><a class="p-l-" name="part3768818" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768818"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3768819" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768819"><span class="p-s-"></span></a><div class="fragment"><p>// Добавляем определение этого контролера</p></div><a class="p-l-" name="part3768820" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768820"><span class="p-s-"></span></a><div class="fragment"><p>function MyController($scope, greeter) {</p></div><a class="p-l-" name="part3768821" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768821"><span class="p-s-"></span></a><div class="fragment"><p>$scope.sayHello = function() {</p></div><a class="p-l-" name="part3768822" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768822"><span class="p-s-"></span></a><div class="fragment"><p>greeter.greet(&#39;Hello World&#39;);</p></div><a class="p-l-" name="part3768823" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768823"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3768824" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768824"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768825" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768825"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768826" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768826"><span class="p-s-"></span></a><div class="fragment"><p>// Директива &#39;ng-controller&#39; делает это за кулисами</p></div><a class="p-l-" name="part3768827" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768827"><span class="p-s-"></span></a><div class="fragment"><p>injector.instantiate(MyController);</p></div><a class="p-l-" name="part3768828" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768828"><span class="p-s-"></span></a><div class="fragment"><p>Заметьте, что, так как ng-controller создает экземпляр класса, то он может удовлетворить и все зависимости MyController, который при этом даже не догадывается про инжектор. Это лучшее решение. Код приложения просто запрашивает необходимые зависимости, не используя инжектор. Такая структура не противоречит Закону Деметры.</p></div><a class="p-l-" name="part3768829" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768829"><span class="p-s-"></span></a><div class="fragment"><p>Аннотация зависимости</p></div><a class="p-l-" name="part3768830" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768830"><span class="p-s-"></span></a><div class="fragment"><p>Как инжектор узнает, какой сервис должен быть внедрен?</p></div><a class="p-l-" name="part3768831" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768831"><span class="p-s-"></span></a><div class="fragment"><p>Разработчик приложения должен предоставить пояснение, что инжектор используется для разрешения зависимостей. Через Angular некоторые функции API вызываются с помощью инжектора, в соответствии с документацией API. Инжектор должен знать, какие сервисы внедряются в функцию. Ниже приведены три эквивалентных способа разметки кода с информацией о именах сервисов. Они могут использоваться как взаимозаменяемые, если вы считаете это нужным, и быть эквивалентными.</p></div><a class="p-l-" name="part3768832" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768832"><span class="p-s-"></span></a><div class="fragment"><p>Выводы о зависимостях</p></div><a class="p-l-" name="part3768833" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768833"><span class="p-s-"></span></a><div class="fragment"><p>Самый простой способ захватить зависимости - это использовать названия зависимостей в качестве названий параметров метода.</p></div><a class="p-l-" name="part3768834" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768834"><span class="p-s-"></span></a><div class="fragment"><p>function MyController($scope, greeter) {</p></div><a class="p-l-" name="part3768835" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768835"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768836" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768836"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768837" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768837"><span class="p-s-"></span></a><div class="fragment"><p>Получив метод инжектор может узнать, какие зависимости нужно внедрить, исследуя объявление метода и выделяя названия параметров. В коде выше $scope и greeter являются сервисами, которые нужно внедрить в метод.</p></div><a class="p-l-" name="part3768838" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768838"><span class="p-s-"></span></a><div class="fragment"><p>Не смотря на простоту, этот способ не будет работать при использовании JavaScript минимизаторов/обфускаторов, так как они изменяют названия параметров метода. Таким образом, этот способ описания может быть полезен только для прототипирования и демо приложений.</p></div><a class="p-l-" name="part3768839" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768839"><span class="p-s-"></span></a><div class="fragment"><p>$inject Annotation</p></div><a class="p-l-" name="part3768840" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768840"><span class="p-s-"></span></a><div class="fragment"><p>Для того, чтобы разрешить минимизаторам изменять названия параметров и при этом внедрять правильные сервисы, метод должен быть описан со свойством $inject. Свойство $inject - это массив названий внедряемых сервисов.</p></div><a class="p-l-" name="part3768841" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768841"><span class="p-s-"></span></a><div class="fragment"><p>var MyController = function(renamed$scope, renamedGreeter) {</p></div><a class="p-l-" name="part3768842" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768842"><span class="p-s-"></span></a><div class="fragment"><p>...</p></div><a class="p-l-" name="part3768843" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768843"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3768844" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768844"><span class="p-s-"></span></a><div class="fragment"><p>MyController.$inject = [&#39;$scope&#39;, &#39;greeter&#39;];</p></div><a class="p-l-" name="part3768845" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768845"><span class="p-s-"></span></a><div class="fragment"><p>Необходимо позаботиться о том, что $inject аннотация синхронизировалась только с фактическими аргументами в объявлении функции.</p></div><a class="p-l-" name="part3768846" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768846"><span class="p-s-"></span></a><div class="fragment"><p>Этот метод аннотации полезен для деклараций контроллера, поскольку он назначает аннотационную информацию с функцией.</p></div><a class="p-l-" name="part3768847" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768847"><span class="p-s-"></span></a><div class="fragment"><p>Встроенная аннотация</p></div><a class="p-l-" name="part3768848" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768848"><span class="p-s-"></span></a><div class="fragment"><p>Иногда использование $inject аннотации стиля не удобно, например, когда аннотируются директивы.</p></div><a class="p-l-" name="part3768849" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768849"><span class="p-s-"></span></a><div class="fragment"><p>Для примера:</p></div><a class="p-l-" name="part3768850" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768850"><span class="p-s-"></span></a><div class="fragment"><p>someModule.factory(&#39;greeter&#39;, function($window) {</p></div><a class="p-l-" name="part3768851" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768851"><span class="p-s-"></span></a><div class="fragment"><p>...;</p></div><a class="p-l-" name="part3768852" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768852"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3768853" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768853"><span class="p-s-"></span></a><div class="fragment"><p>Результаты в разрастание кода в связи с необходимостью временной переменной:</p></div><a class="p-l-" name="part3768854" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768854"><span class="p-s-"></span></a><div class="fragment"><p>var greeterFactory = function(renamed$window) {</p></div><a class="p-l-" name="part3768855" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768855"><span class="p-s-"></span></a><div class="fragment"><p>...;</p></div><a class="p-l-" name="part3768856" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768856"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3768857" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768857"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768858" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768858"><span class="p-s-"></span></a><div class="fragment"><p>greeterFactory.$inject = [&#39;$window&#39;];</p></div><a class="p-l-" name="part3768859" href="/you/angularjs-developer-guide/into-ru/trans/?page=51#part3768859"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3768860" href="/you/angularjs-developer-guide/into-ru/trans/?page=52#part3768860"><span class="p-s-"></span></a><div class="fragment"><p>someModule.factory(&#39;greeter&#39;, greeterFactory);</p></div><a class="p-l-" name="part3768861" href="/you/angularjs-developer-guide/into-ru/trans/?page=52#part3768861"><span class="p-s-"></span></a><div class="fragment"><p>По этой причине третий стиль аннотация точно такой же.</p></div><a class="p-l-" name="part3768862" href="/you/angularjs-developer-guide/into-ru/trans/?page=52#part3768862"><span class="p-s-"></span></a><div class="fragment"><p>someModule.factory(&#39;greeter&#39;, [&#39;$window&#39;, function(renamed$window) {</p></div><a class="p-l-" name="part3769025" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769025"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  ...;</p></div><a class="p-l-" name="part3769026" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769026"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>}]);</p></div><a class="p-l-" name="part3769027" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769027"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Keep in mind that all of the annotation styles are equivalent and can be used anywhere in Angular where injection is supported.</p></div><a class="p-l-" name="part3769028" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769028"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Where can I use DI?</p></div><a class="p-l-" name="part3769029" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769029"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>DI is pervasive throughout Angular. It is typically used in controllers and factory methods.</p></div><a class="p-l-" name="part3769030" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769030"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>DI in controllers</p></div><a class="p-l-" name="part3769031" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769031"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controllers are classes which are responsible for application behavior. The recommended way of declaring controllers is:</p></div><a class="p-l-" name="part3769032" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769032"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var MyController = function($scope, dep1, dep2) {</p></div><a class="p-l-" name="part3769033" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769033"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  ...</p></div><a class="p-l-" name="part3769034" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769034"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  $scope.aMethod = function() {</p></div><a class="p-l-" name="part3769035" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769035"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769036" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769036"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }</p></div><a class="p-l-" name="part3769037" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769037"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>}</p></div><a class="p-l-" name="part3769038" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769038"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>MyController.$inject = [&#39;$scope&#39;, &#39;dep1&#39;, &#39;dep2&#39;];</p></div><a class="p-l-" name="part3769039" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769039"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Factory methods</p></div><a class="p-l-" name="part3769040" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769040"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Factory methods are responsible for creating most objects in Angular. Examples are directives, services, and filters. The factory methods are registered with the module, and the recommended way of declaring factories is:</p></div><a class="p-l-" name="part3769041" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769041"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>angular.module(&#39;myModule&#39;, []).</p></div><a class="p-l-" name="part3769042" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769042"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  config([&#39;depProvider&#39;, function(depProvider){</p></div><a class="p-l-" name="part3769043" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769043"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769044" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769044"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }]).</p></div><a class="p-l-" name="part3769045" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769045"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  factory(&#39;serviceId&#39;, [&#39;depService&#39;, function(depService) {</p></div><a class="p-l-" name="part3769046" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769046"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769047" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769047"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }]).</p></div><a class="p-l-" name="part3769048" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769048"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  directive(&#39;directiveName&#39;, [&#39;depService&#39;, function(depService) {</p></div><a class="p-l-" name="part3769049" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769049"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769050" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769050"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }]).</p></div><a class="p-l-" name="part3769051" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3769051"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  filter(&#39;filterName&#39;, [&#39;depService&#39;, function(depService) {</p></div><a class="p-l-" name="part3769052" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3769052"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769053" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3769053"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }]).</p></div><a class="p-l-" name="part3769054" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3769054"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  run([&#39;depService&#39;, function(depService) {</p></div><a class="p-l-" name="part3769055" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3769055"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    ...</p></div><a class="p-l-" name="part3769056" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3769056"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }]);</p></div><a class="p-l-" name="part3770879" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770879"><span class="p-s-"></span></a><div class="fragment"><p>browser().location().search()</p></div><a class="p-l-" name="part3770880" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770880"><span class="p-s-"></span></a><div class="fragment"><p>Заявляет о значении данного будущем удовлетворяет совпадений. Все API инструкции возвращают будущего объекта, который получит значение, присвоенное после их выполнения. Вычислителей определяются с помощью angular.scenario.matcher, и они используют значение фьючерса запустить ожидания. Например: expect(browser().location().href()).toEqual(&#39;http://www.google.com&#39;)</p></div><a class="p-l-" name="part3770881" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770881"><span class="p-s-"></span></a><div class="fragment"><p>binding(name)</p></div><a class="p-l-" name="part3770882" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770882"><span class="p-s-"></span></a><div class="fragment"><p>Включает/выключает чекбокс с указанным именем.</p></div><a class="p-l-" name="part3770883" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770883"><span class="p-s-"></span></a><div class="fragment"><p>repeater(selector, label).count()</p></div><a class="p-l-" name="part3770884" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770884"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает массив со значениями в столбце с заданным связывание в повторителе, соответствующие данному JQuery селектору. Метка используется для выхода теста.</p></div><a class="p-l-" name="part3770885" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770885"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).count()</p></div><a class="p-l-" name="part3770886" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770886"><span class="p-s-"></span></a><div class="fragment"><p>Выполняет функции  fn(selectedElements, done), где selectedElements те элементы, которые соответствуют данному JQuery селектору и делается это функцией, которая вызывается в конце функции fn. Метка используется для выхода теста.</p></div><a class="p-l-" name="part3770887" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770887"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).{method}(key)</p></div><a class="p-l-" name="part3770888" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770888"><span class="p-s-"></span></a><div class="fragment"><p>ПОНИМАНИЕ ШАБЛОНОВ ANGULAR</p></div><a class="p-l-" name="part3770889" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770889"><span class="p-s-"></span></a><div class="fragment"><p>Фильтр - Форматирует ваши данные для отображения пользователям.</p></div><a class="p-l-" name="part3770890" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770890"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!-- тег Body дополнен директивой ngController --&gt;</p></div><a class="p-l-" name="part3770891" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770891"><span class="p-s-"></span></a><div class="fragment"><p>wrapped in &quot;{{ }}&quot; markup --&gt;</p></div><a class="p-l-" name="part3770892" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770892"><span class="p-s-"></span></a><div class="fragment"><p>В простом одностраничном приложении, шаблон состоит из HTML, CSS, и указаний Angular, содержащихся в одном HTML файла (обычно index.html). В более сложных приложений, Вы можете отобразить несколько представлений в пределах одной главной страницы с помощью «частичек» (partials), которые являются сегментами шаблона расположенными в отдельных HTML-файлах. Частички подключаются к главной странице с помощью сервиса $route в сочетании с директивой ngView. Пример такого способа приведен в учебнике по Angular, на седьмом и восьмом шаге.</p></div><a class="p-l-" name="part3770893" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770893"><span class="p-s-"></span></a><div class="fragment"><p>Справочник по API</p></div><a class="p-l-" name="part3770894" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770894"><span class="p-s-"></span></a><div class="fragment"><p>Использование: Angular применяет этот класс для элемента виджета ввода, если ввод этого элемента не проходит проверку. (см. директиву входа).</p></div><a class="p-l-" name="part3770895" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770895"><span class="p-s-"></span></a><div class="fragment"><p>Формы Angular</p></div><a class="p-l-" name="part3770896" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770896"><span class="p-s-"></span></a><div class="fragment"><p>Связывание данных в шаблонах Angular</p></div><a class="p-l-" name="part3770897" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770897"><span class="p-s-"></span></a><div class="fragment"><p>Шаблоны Angular</p></div><a class="p-l-" name="part3770898" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770898"><span class="p-s-"></span></a><div class="fragment"><p>Вычисленное выражение просто передает значение имени и фамилии в фильтр, преобразующий в верхний регистр.</p></div><a class="p-l-" name="part3770899" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770899"><span class="p-s-"></span></a><div class="fragment"><p>Справочник по фильтрам Angular</p></div><a class="p-l-" name="part3770900" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770900"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3770901" href="/you/angularjs-developer-guide/into-ru/trans/?page=55#part3770901"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;MyReverseModule&quot;&gt;</p></div><a class="p-l-" name="part3770902" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770902"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3770903" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770903"><span class="p-s-"></span></a><div class="fragment"><p>Reverse + uppercase: {{greeting|reverse:true}}&lt;br&gt;</p></div><a class="p-l-" name="part3770904" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770904"><span class="p-s-"></span></a><div class="fragment"><p>No filter: hello</p></div><a class="p-l-" name="part3770905" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770905"><span class="p-s-"></span></a><div class="fragment"><p>Angular HTML Компилятор</p></div><a class="p-l-" name="part3770906" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770906"><span class="p-s-"></span></a><div class="fragment"><p>{{ expression | filter }}</p></div><a class="p-l-" name="part3770907" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770907"><span class="p-s-"></span></a><div class="fragment"><p>123 | number:2</p></div><a class="p-l-" name="part3770908" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770908"><span class="p-s-"></span></a><div class="fragment"><p>Number filter: {{1234.5678|number}} =&gt; 1,234.57. Notice the &quot;,&quot; and rounding to two significant digits.</p></div><a class="p-l-" name="part3770909" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770909"><span class="p-s-"></span></a><div class="fragment"><p>Related API</p></div><a class="p-l-" name="part3770910" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770910"><span class="p-s-"></span></a><div class="fragment"><p>Понимание служб Angular </p></div><a class="p-l-" name="part3770911" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770911"><span class="p-s-"></span></a><div class="fragment"><p>Related API</p></div><a class="p-l-" name="part3770912" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770912"><span class="p-s-"></span></a><div class="fragment"><p>служба $location:</p></div><a class="p-l-" name="part3770913" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770913"><span class="p-s-"></span></a><div class="fragment"><p>Изменяет адресную строку.</p></div><a class="p-l-" name="part3770914" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770914"><span class="p-s-"></span></a><div class="fragment"><p>window.location	$location служба</p></div><a class="p-l-" name="part3770915" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770915"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>aware of docroot/context from which the application is loaded	no - window.location.path returns &quot;/docroot/actual/path&quot;	yes - $location.path() returns &quot;/actual/path&quot;</p></div><a class="p-l-" name="part3770916" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770916"><span class="p-s-"></span></a><div class="fragment"><p>Общий обзор API</p></div><a class="p-l-" name="part3770917" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770917"><span class="p-s-"></span></a><div class="fragment"><p>html5Mode(mode): {boolean}</p></div><a class="p-l-" name="part3770918" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770918"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>prefix used for Hashbang URLs (used in Hashbang mode or in legacy browser in Html5 mode)</p></div><a class="p-l-" name="part3770919" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770919"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location service provides getter methods for read-only parts of the URL (absUrl, protocol, host, port) and getter / setter methods for url, path, search, hash:</p></div><a class="p-l-" name="part3770920" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770920"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/newValue&#39;)</p></div><a class="p-l-" name="part3770921" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770921"><span class="p-s-"></span></a><div class="fragment"><p>$location.replace();</p></div><a class="p-l-" name="part3770922" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770922"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>All values that are passed to $location setter methods, path(), search(), hash(), are encoded.</p></div><a class="p-l-" name="part3770923" href="/you/angularjs-developer-guide/into-ru/trans/?page=56#part3770923"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location service has two configuration modes which control the format of the URL in the browser address bar: Hashbang mode (the default) and the HTML5 mode which is based on using the HTML5 History API. Applications use the same API in both modes and the $location service will work with appropriate URL segments and browser APIs to facilitate the browser URL change and history management.</p></div><a class="p-l-" name="part3770924" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770924"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>requires server-side configuration	no	yes</p></div><a class="p-l-" name="part3770925" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770925"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  function($locationProvider) {</p></div><a class="p-l-" name="part3770926" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770926"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    // open http://host.com/base/index.html#!/a</p></div><a class="p-l-" name="part3770927" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770927"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.absUrl() == &#39;http://host.com/base/index.html#!/foo&#39;</p></div><a class="p-l-" name="part3770928" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770928"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3770929" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770929"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Crawling your app</p></div><a class="p-l-" name="part3770930" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770930"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In HTML5 mode, the $location service getters and setters interact with the browser URL address through the HTML5 history API, which allows for use of regular URL path and search segments, instead of their hashbang equivalents. If the HTML5 History API is not supported by a browser, the $location service will fall back to using the hashbang URLs automatically. This frees you from having to worry about whether the browser displaying your app supports the history API or not; the $location service transparently uses the best available option.</p></div><a class="p-l-" name="part3770931" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770931"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  function($locationProvider) {</p></div><a class="p-l-" name="part3770932" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770932"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    // in browser with HTML5 history support:</p></div><a class="p-l-" name="part3770933" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770933"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.path(&#39;/foo&#39;);</p></div><a class="p-l-" name="part3770934" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770934"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.absUrl() == &#39;http://host.com/foo?a=b&amp;c&#39;</p></div><a class="p-l-" name="part3770935" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770935"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3770936" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770936"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.search() == {x: &#39;y&#39;}</p></div><a class="p-l-" name="part3770937" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770937"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.absUrl() == &#39;http://host.com/#!/foo/bar?x=y&#39;</p></div><a class="p-l-" name="part3770938" href="/you/angularjs-developer-guide/into-ru/trans/?page=57#part3770938"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Html link rewriting</p></div><a class="p-l-" name="part3770939" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770939"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In cases like the following, links are not rewritten; instead, the browser will perform a full page reload to the original link.</p></div><a class="p-l-" name="part3770940" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770940"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Links starting with &#39;/&#39; that lead to a different base path when base is defined</p></div><a class="p-l-" name="part3770941" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770941"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>If you want your AJAX application to be indexed by web crawlers, you will need to add the following meta tag to the HEAD section of your document:</p></div><a class="p-l-" name="part3770942" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770942"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Running Angular apps with the History API enabled from document root is strongly encouraged as it takes care of all relative link issues.</p></div><a class="p-l-" name="part3770943" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770943"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Example</p></div><a class="p-l-" name="part3770944" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770944"><span class="p-s-"></span></a><div class="fragment untranslated-"><p> Edit</p></div><a class="p-l-" name="part3770945" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770945"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  &lt;head&gt;</p></div><a class="p-l-" name="part3770946" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770946"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    &lt;div ng-non-bindable class=&quot;html5-hashbang-example&quot;&gt;</p></div><a class="p-l-" name="part3770947" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770947"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        $location.host() = {{$location.host()}}&lt;br&gt;</p></div><a class="p-l-" name="part3770948" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770948"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        &lt;a href=&quot;http://www.host.com/base/first?a=b&quot;&gt;/base/first?a=b&lt;/a&gt; |</p></div><a class="p-l-" name="part3770949" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770949"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      &lt;div id=&quot;hashbang-mode&quot; ng-controller=&quot;HashbangCntl&quot;&gt;</p></div><a class="p-l-" name="part3770950" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770950"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        $location.port() = {{$location.port()}}&lt;br&gt;</p></div><a class="p-l-" name="part3770951" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770951"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        &lt;a href=&quot;http://www.host.com/base/sec/ond?flag#hash&quot;&gt;sec/ond?flag#hash&lt;/a&gt; |</p></div><a class="p-l-" name="part3770952" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770952"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3770953" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770953"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.port() = {{$location.port()}}</p></div><a class="p-l-" name="part3770954" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770954"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Browser without History API</p></div><a class="p-l-" name="part3770955" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770955"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.search() = {{$location.search()}}</p></div><a class="p-l-" name="part3770956" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770956"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The $location service allows you to change only the URL; it does not allow you to reload the page. When you need to change the URL and reload the page or navigate to a different page, please use a lower level API, $window.location.href.</p></div><a class="p-l-" name="part3770957" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770957"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note that the ! prefix in the hashbang mode is not part of $location.path(); it is actually hashPrefix.</p></div><a class="p-l-" name="part3770958" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770958"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $provide.factory(&#39;serviceUnderTest&#39;, function($location){</p></div><a class="p-l-" name="part3770959" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770959"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  it(&#39;should...&#39;, inject(function($location, $rootScope, serviceUnderTest) {</p></div><a class="p-l-" name="part3770960" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770960"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3770961" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770961"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Changes to your code</p></div><a class="p-l-" name="part3770962" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770962"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.updateHash(value)	$location.path(path).search(search)</p></div><a class="p-l-" name="part3770963" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770963"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.update(value)	$window.location.href = value</p></div><a class="p-l-" name="part3770964" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770964"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.href</p></div><a class="p-l-" name="part3770965" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770965"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.protocol()</p></div><a class="p-l-" name="part3770966" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770966"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.search	$window.location.path</p></div><a class="p-l-" name="part3770967" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770967"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;input type=&quot;text&quot; ng-model=&quot;locationPath&quot; /&gt;</p></div><a class="p-l-" name="part3770968" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770968"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>});</p></div><a class="p-l-" name="part3770969" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770969"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>});</p></div><a class="p-l-" name="part3770970" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770970"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>While Angular offers several useful services, for any nontrivial application you&#39;ll find it useful to write your own custom services. To do this you begin by registering a service factory function with a module either via the Module#factory api or directly via the $provide api inside of module config function.</p></div><a class="p-l-" name="part3770971" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770971"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Using the angular.Module api:</p></div><a class="p-l-" name="part3770972" href="/you/angularjs-developer-guide/into-ru/trans/?page=58#part3770972"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  //factory function body that constructs shinyNewServiceInstance</p></div><a class="p-l-" name="part3770973" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770973"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, [], function($provide) {</p></div><a class="p-l-" name="part3770974" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770974"><span class="p-s-"></span></a><div class="fragment"><p>return shinyNewServiceInstance;</p></div><a class="p-l-" name="part3770975" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770975"><span class="p-s-"></span></a><div class="fragment"><p>Зависимости</p></div><a class="p-l-" name="part3770976" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770976"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;notify&#39;, [&#39;$window&#39;, function(win) {</p></div><a class="p-l-" name="part3770977" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770977"><span class="p-s-"></span></a><div class="fragment"><p>if (msgs.length == 3) {</p></div><a class="p-l-" name="part3770978" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770978"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3770979" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770979"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>All services in Angular are instantiated lazily. This means that a service will be created only when it is needed for instantiation of a service or an application component that depends on it. In other words, Angular won&#39;t instantiate services unless they are requested directly or indirectly by the application.</p></div><a class="p-l-" name="part3770980" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770980"><span class="p-s-"></span></a><div class="fragment"><p>Понимание служб Angular</p></div><a class="p-l-" name="part3770981" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770981"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3770982" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770982"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Since JavaScript is a dynamic language, DI can&#39;t figure out which services to inject by static types (like in static typed languages). Therefore, you can specify the service name by using the $inject property, which is an array containing strings with names of services to be injected. The name must match the corresponding service ID registered with angular. The order of the service IDs matters: the order of the services in the array will be used when calling the factory function with injected parameters. The names of parameters in factory function don&#39;t matter, but by convention they match the service IDs, which has added benefits discussed below.</p></div><a class="p-l-" name="part3770983" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770983"><span class="p-s-"></span></a><div class="fragment"><p>$loc.setHash();</p></div><a class="p-l-" name="part3770984" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770984"><span class="p-s-"></span></a><div class="fragment"><p>$log.info(&#39;...&#39;);</p></div><a class="p-l-" name="part3770985" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770985"><span class="p-s-"></span></a><div class="fragment"><p>myController.$inject = [&#39;$location&#39;, &#39;$log&#39;];</p></div><a class="p-l-" name="part3770986" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770986"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3770987" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770987"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3770988" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770988"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3770989" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770989"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;callNotify(message);&quot;&gt;NOTIFY&lt;/button&gt;</p></div><a class="p-l-" name="part3770990" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770990"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3770991" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770991"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>A new feature of Angular DI allows it to determine the dependency from the name of the parameter. Let&#39;s rewrite the above example to show the use of this implicit dependency injection of $window, $scope, and our notify service:</p></div><a class="p-l-" name="part3770992" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770992"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3770993" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770993"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3770994" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770994"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;myController&quot;&gt;</p></div><a class="p-l-" name="part3770995" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770995"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3770996" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770996"><span class="p-s-"></span></a><div class="fragment"><p>Давайте попробуем уведомить службу, которая неявно внедряется в контроллер...</p></div><a class="p-l-" name="part3770997" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770997"><span class="p-s-"></span></a><div class="fragment"><p>Понимание служб Angular<br />Создание служб Angular<br />Управление зависимостями служб<br />Тестирование служб Angular<br /></p></div><a class="p-l-" name="part3770998" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770998"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular allows services to declare other services as dependencies needed for construction of their instances.</p></div><a class="p-l-" name="part3770999" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3770999"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;myService&#39;, [&#39;dep1&#39;, &#39;dep2&#39;, function(dep1, dep2) {}]);</p></div><a class="p-l-" name="part3771000" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771000"><span class="p-s-"></span></a><div class="fragment"><p>var myServiceFactory = function(dep1, dep2) {};</p></div><a class="p-l-" name="part3771001" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771001"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Using DI inference (incompatible with minifiers):</p></div><a class="p-l-" name="part3771002" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771002"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Here is an example of two services, one of which depends on the other and both of which depend on other services that are provided by the Angular framework:</p></div><a class="p-l-" name="part3771003" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771003"><span class="p-s-"></span></a><div class="fragment"><p>*</p></div><a class="p-l-" name="part3771004" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771004"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;batchLog&#39;, [&#39;$timeout&#39;, &#39;$log&#39;, function($timeout, $log) {</p></div><a class="p-l-" name="part3771005" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771005"><span class="p-s-"></span></a><div class="fragment"><p>if (messageQueue.length) {</p></div><a class="p-l-" name="part3771006" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771006"><span class="p-s-"></span></a><div class="fragment"><p>$timeout(log, 50000);</p></div><a class="p-l-" name="part3771007" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771007"><span class="p-s-"></span></a><div class="fragment"><p>log();</p></div><a class="p-l-" name="part3771008" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771008"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771009" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771009"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>     * routeTemplateMonitor monitors each $route change and logs the current</p></div><a class="p-l-" name="part3771010" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771010"><span class="p-s-"></span></a><div class="fragment"><p>[&#39;$route&#39;, &#39;batchLog&#39;, &#39;$rootScope&#39;,</p></div><a class="p-l-" name="part3771011" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771011"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771012" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771012"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  // get the main service to kick of the application</p></div><a class="p-l-" name="part3771013" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771013"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The routeTemplateMonitor service depends on the built-in $route service as well as our custom batchLog service.</p></div><a class="p-l-" name="part3771014" href="/you/angularjs-developer-guide/into-ru/trans/?page=59#part3771014"><span class="p-s-"></span></a><div class="fragment"><p>Создание служб в Angular</p></div><a class="p-l-" name="part3771015" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771015"><span class="p-s-"></span></a><div class="fragment"><p>API служб Angular</p></div><a class="p-l-" name="part3771016" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771016"><span class="p-s-"></span></a><div class="fragment"><p>var mock, notify;</p></div><a class="p-l-" name="part3771017" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771017"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771018" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771018"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771019" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771019"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771020" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771020"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;two&#39;);</p></div><a class="p-l-" name="part3771021" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771021"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771022" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771022"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;three&#39;);</p></div><a class="p-l-" name="part3771023" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771023"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771024" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771024"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;third&#39;);</p></div><a class="p-l-" name="part3771025" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771025"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771026" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771026"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771027" href="/you/angularjs-developer-guide/into-ru/trans/?page=60#part3771027"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение службы в контролеры</p></div><a class="p-l-" name="part3771073" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771073"><span class="p-s-"></span></a><div class="fragment"><p>О MCV В ANGULAR</p></div><a class="p-l-" name="part3771074" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771074"><span class="p-s-"></span></a><div class="fragment"><p>Поощряйте слабую связь между этими компонентами</p></div><a class="p-l-" name="part3771075" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771075"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента Controller</p></div><a class="p-l-" name="part3771076" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771076"><span class="p-s-"></span></a><div class="fragment"><p>В зависимости от контекста обсуждения в Angular документации термин модель может относиться как к одному объекту, представляющих одну сущность (например, модель под названием «Телефоны» содержащую в качестве значения массив телефонов) или всей модели данных для приложения (все объекты).</p></div><a class="p-l-" name="part3771077" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771077"><span class="p-s-"></span></a><div class="fragment"><p>Создайте свойство с определенным значением в области видимости объекта в JavaScript коде, что чаще всего происходит в контроллерах:</p></div><a class="p-l-" name="part3771078" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771078"><span class="p-s-"></span></a><div class="fragment"><p>$scope.foo = &#39;bar&#39;;</p></div><a class="p-l-" name="part3771079" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771079"><span class="p-s-"></span></a><div class="fragment"><p>Используйте директиву ngInit шаблонами (для забавы / пример не рекомендуется использовать в реальных приложениях):</p></div><a class="p-l-" name="part3771080" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771080"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;query&quot; value=&quot;fluffy cloud&quot;&gt;</p></div><a class="p-l-" name="part3771081" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771081"><span class="p-s-"></span></a><div class="fragment"><p>Приведенный выше код создает по одному потомку области видимсоти для каждого элемента в массиве «Телефоны» и создает по объекту «телефон» в каждой из этих областей со значением, установленным в «телефон» в массиве.</p></div><a class="p-l-" name="part3771082" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771082"><span class="p-s-"></span></a><div class="fragment"><p>На следующем рисунке показана простая модель данных, которая создается неявно из простого шаблона:</p></div><a class="p-l-" name="part3771083" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771083"><span class="p-s-"></span></a><div class="fragment"><p>Настройка исходного состояния области видимости.</p></div><a class="p-l-" name="part3771084" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771084"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular applies (in the sense of JavaScript&#39;s Function#apply) the controller constructor function to a new Angular scope object, which sets up an initial scope state. This means that Angular never creates instances of the controller type (by invoking the new operator on the controller constructor). Constructors are always applied to an existing scope object.</p></div><a class="p-l-" name="part3771085" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771085"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>NOTE: Many of the examples in the documentation show the creation of functions in the global scope. This is only for demonstration purposes - in a real application you should use the .controller method of your Angular module for your application as follows:</p></div><a class="p-l-" name="part3771086" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771086"><span class="p-s-"></span></a><div class="fragment"><p>Добавление поведения в объект Scope</p></div><a class="p-l-" name="part3771087" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771087"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In general, a controller shouldn&#39;t try to do too much. It should contain only the business logic needed for a single view.</p></div><a class="p-l-" name="part3771088" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771088"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Input formatting — Use angular form controls instead.</p></div><a class="p-l-" name="part3771089" href="/you/angularjs-developer-guide/into-ru/trans/?page=61#part3771089"><span class="p-s-"></span></a><div class="fragment"><p>Связывание Контроллеров с Объектами Области видимости Angular</p></div><a class="p-l-" name="part3771090" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771090"><span class="p-s-"></span></a><div class="fragment"><p>шаблон с двумя кнопками и простым сообщением</p></div><a class="p-l-" name="part3771091" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771091"><span class="p-s-"></span></a><div class="fragment"><p>Пример Spicy контролера</p></div><a class="p-l-" name="part3771092" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771092"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;The food is {{spice}} spicy!&lt;/p&gt;</p></div><a class="p-l-" name="part3771093" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771093"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = &#39;very&#39;;</p></div><a class="p-l-" name="part3771094" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771094"><span class="p-s-"></span></a><div class="fragment"><p>$scope.jalapenoSpicy = function() {</p></div><a class="p-l-" name="part3771095" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771095"><span class="p-s-"></span></a><div class="fragment"><p>Что следует проверить в приведенном выше примере:</p></div><a class="p-l-" name="part3771096" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771096"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controller methods can be created through direct assignment to scope (the chiliSpicy method)</p></div><a class="p-l-" name="part3771097" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771097"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controller methods can also take arguments, as demonstrated in the following variation of the previous example.</p></div><a class="p-l-" name="part3771098" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771098"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;spicy(&#39;chili&#39;)&quot;&gt;Chili&lt;/button&gt;</p></div><a class="p-l-" name="part3771099" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771099"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771100" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771100"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = spice;</p></div><a class="p-l-" name="part3771101" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771101"><span class="p-s-"></span></a><div class="fragment"><p>Пример наследование контролера</p></div><a class="p-l-" name="part3771102" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771102"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;ChildCtrl&quot;&gt;</p></div><a class="p-l-" name="part3771103" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771103"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771104" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771104"><span class="p-s-"></span></a><div class="fragment"><p>$scope.name = &#39;Nikki&#39;;</p></div><a class="p-l-" name="part3771105" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771105"><span class="p-s-"></span></a><div class="fragment"><p>$scope.name = &#39;Mattie&#39;;</p></div><a class="p-l-" name="part3771106" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771106"><span class="p-s-"></span></a><div class="fragment"><p>$scope.timeOfDay = &#39;evening&#39;;</p></div><a class="p-l-" name="part3771107" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771107"><span class="p-s-"></span></a><div class="fragment"><p>Корневая область видимости</p></div><a class="p-l-" name="part3771108" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771108"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Inheritance works between controllers in the same way as it does with models. So in our previous examples, all of the models could be replaced with controller methods that return string values.</p></div><a class="p-l-" name="part3771109" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771109"><span class="p-s-"></span></a><div class="fragment"><p>Функция контролера:</p></div><a class="p-l-" name="part3771110" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771110"><span class="p-s-"></span></a><div class="fragment"><p>{&quot;name&quot;:&quot;habanero&quot;, &quot;spiceness&quot;:&quot;LAVA HOT!!&quot;}];</p></div><a class="p-l-" name="part3771111" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771111"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование контролера:</p></div><a class="p-l-" name="part3771112" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771112"><span class="p-s-"></span></a><div class="fragment"><p>var scope;</p></div><a class="p-l-" name="part3771113" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771113"><span class="p-s-"></span></a><div class="fragment"><p>var ctrl = $controller(myController, {$scope: scope});</p></div><a class="p-l-" name="part3771114" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771114"><span class="p-s-"></span></a><div class="fragment"><p>expect(scope.spices.length).toBe(3);</p></div><a class="p-l-" name="part3771115" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771115"><span class="p-s-"></span></a><div class="fragment"><p>expect(scope.spice).toBe(&#39;habanero&#39;);</p></div><a class="p-l-" name="part3771116" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771116"><span class="p-s-"></span></a><div class="fragment"><p>Если вам необходимо протестировать вложенные контроллеры, необходимо создать ту же иерархию областей видимости в вашем тесте, который существует в DOM.</p></div><a class="p-l-" name="part3771117" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771117"><span class="p-s-"></span></a><div class="fragment"><p>beforeEach(inject(function($rootScope, $controller) {</p></div><a class="p-l-" name="part3771118" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771118"><span class="p-s-"></span></a><div class="fragment"><p>var childCtrl = $controller(ChildCtrl, {$scope: childScope});</p></div><a class="p-l-" name="part3771119" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771119"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771120" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771120"><span class="p-s-"></span></a><div class="fragment"><p>expect(childScope.timeOfDay).toBe(&#39;morning&#39;)</p></div><a class="p-l-" name="part3771121" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771121"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771122" href="/you/angularjs-developer-guide/into-ru/trans/?page=62#part3771122"><span class="p-s-"></span></a><div class="fragment"><p>Понимание Model Component</p></div><a class="p-l-" name="part3771123" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771123"><span class="p-s-"></span></a><div class="fragment"><p>В Angular, представление это DOM загруженный и показанный в браузере, после того как  Angular преобразует DOM на основе информации в шаблоне, контроллера и модели.</p></div><a class="p-l-" name="part3771124" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771124"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента Model</p></div><a class="p-l-" name="part3771125" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771125"><span class="p-s-"></span></a><div class="fragment"><p>Чтобы решить эту проблему, мы создали Angular Scenario Runner который имитирует взаимодействие с пользователями, которые помогут проверить здоровье angular-приложения.</p></div><a class="p-l-" name="part3771126" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771126"><span class="p-s-"></span></a><div class="fragment"><p>Вот пример простого сценария:</p></div><a class="p-l-" name="part3771127" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771127"><span class="p-s-"></span></a><div class="fragment"><p>element(&#39;:button&#39;).click();</p></div><a class="p-l-" name="part3771128" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771128"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771129" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771129"><span class="p-s-"></span></a><div class="fragment"><p>API</p></div><a class="p-l-" name="part3771130" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771130"><span class="p-s-"></span></a><div class="fragment"><p>sleep(seconds)</p></div><a class="p-l-" name="part3771131" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771131"><span class="p-s-"></span></a><div class="fragment"><p>browser().navigateTo(url, fn)</p></div><a class="p-l-" name="part3771132" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771132"><span class="p-s-"></span></a><div class="fragment"><p>browser().window().href()</p></div><a class="p-l-" name="part3771133" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771133"><span class="p-s-"></span></a><div class="fragment"><p>browser().window().search()</p></div><a class="p-l-" name="part3771134" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771134"><span class="p-s-"></span></a><div class="fragment"><p>browser().location().url()</p></div><a class="p-l-" name="part3771135" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771135"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает $location.search() загруженной в данный момент страницы в тестируемом фрейме.</p></div><a class="p-l-" name="part3771136" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771136"><span class="p-s-"></span></a><div class="fragment"><p>expect(future).not().{matcher}</p></div><a class="p-l-" name="part3771137" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771137"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the value of the first binding matching the given name.</p></div><a class="p-l-" name="part3771138" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771138"><span class="p-s-"></span></a><div class="fragment"><p>input(name).select(value)</p></div><a class="p-l-" name="part3771139" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771139"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the number of rows in the repeater matching the given jQuery selector. The label is used for test output.</p></div><a class="p-l-" name="part3771140" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771140"><span class="p-s-"></span></a><div class="fragment"><p>select(name).option(value)</p></div><a class="p-l-" name="part3771141" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771141"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the number of elements that match the given jQuery selector. The label is used for test output.</p></div><a class="p-l-" name="part3771142" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771142"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).{method}()</p></div><a class="p-l-" name="part3771143" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771143"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the result of calling method passing in key on the element matching the given jQuery selector, where method can be any of the following jQuery methods: attr, prop, css. The label is used for test output.</p></div><a class="p-l-" name="part3771144" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771144"><span class="p-s-"></span></a><div class="fragment"><p>Шаблон Angular является декларативной спецификацией, которая, наряду с информацией из модели и контроллера, становится оказанных, что пользователь должен видеть в браузере. Это статический DOM, содержащий HTML, CSS, и angular-элементы, специфичные и angular-атрибуты элемента. Angular-элементы и специальные angular-атрибуты добавляют поведение и преобразуют шаблон DOM в динамическое представление DOM.</p></div><a class="p-l-" name="part3771145" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771145"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Form controls — Lets you validate user input.</p></div><a class="p-l-" name="part3771146" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771146"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body ng-controller=&quot;MyController&quot;&gt;</p></div><a class="p-l-" name="part3771147" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771147"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;changeFoo()&quot;&gt;{{buttonText}}&lt;/button&gt;</p></div><a class="p-l-" name="part3771148" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771148"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771149" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771149"><span class="p-s-"></span></a><div class="fragment"><p>РАБОТА С CSS В ANGULAR</p></div><a class="p-l-" name="part3771150" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771150"><span class="p-s-"></span></a><div class="fragment"><p>ng-pristine, ng-dirty</p></div><a class="p-l-" name="part3771151" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771151"><span class="p-s-"></span></a><div class="fragment"><p>ПРИВЯЗКА ДАННЫХ В ANGULAR</p></div><a class="p-l-" name="part3771152" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771152"><span class="p-s-"></span></a><div class="fragment untranslated-"><p> The way Angular templates works is different, as illustrated in the diagram. They are different because first the template (which is the uncompiled HTML along with any additional markup or directives) is compiled on the browser, and second, the compilation step produces a live view. We say live because any changes to the view are immediately reflected in the model, and any changes in the model are propagated to the view. This makes the model always the single-source-of-truth for the application state, greatly simplifying the programming model for the developer. You can think of the view as simply an instant projection of your model.</p></div><a class="p-l-" name="part3771153" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771153"><span class="p-s-"></span></a><div class="fragment"><p>ПОНИМАНИЕ ФИЛЬТРОВ В ANGULAR</p></div><a class="p-l-" name="part3771154" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771154"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771155" href="/you/angularjs-developer-guide/into-ru/trans/?page=63#part3771155"><span class="p-s-"></span></a><div class="fragment"><p>СОЗДАНИЕ ФИЛЬТРОВ В ANGULAR</p></div><a class="p-l-" name="part3771156" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771156"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3771157" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771157"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3771158" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771158"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;Ctrl&quot;&gt;</p></div><a class="p-l-" name="part3771159" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771159"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771160" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771160"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Reverse: olleh</p></div><a class="p-l-" name="part3771161" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771161"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3771162" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771162"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Filters typically transform the data to a new data type, formatting the data in the process. Filters can also be chained, and can take optional arguments.</p></div><a class="p-l-" name="part3771163" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771163"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Use the same syntax for multiple arguments:</p></div><a class="p-l-" name="part3771164" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771164"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Filter with arguments: {{1234.5678|number:5}} =&gt; 1,234.56780. Filters can take optional arguments, separated by colons in a binding. For example, the &quot;number&quot; filter takes a number argument that specifies how many digits to display to the right of the decimal point.</p></div><a class="p-l-" name="part3771165" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771165"><span class="p-s-"></span></a><div class="fragment"><p>API фильтров Angular</p></div><a class="p-l-" name="part3771166" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771166"><span class="p-s-"></span></a><div class="fragment"><p>Создание службы Angular</p></div><a class="p-l-" name="part3771167" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771167"><span class="p-s-"></span></a><div class="fragment"><p>API служб Angular</p></div><a class="p-l-" name="part3771168" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771168"><span class="p-s-"></span></a><div class="fragment"><p>Предоставляет текущий URL в адресной строке браузера, так что вы можете</p></div><a class="p-l-" name="part3771169" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771169"><span class="p-s-"></span></a><div class="fragment"><p>Щелкнуть кнопки вперед или назад (или щелкнуть на ссылку в Истории).</p></div><a class="p-l-" name="part3771170" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771170"><span class="p-s-"></span></a><div class="fragment"><p>разрешить чтение / запись свойства о текущем местоположении браузера</p></div><a class="p-l-" name="part3771171" href="/you/angularjs-developer-guide/into-ru/trans/?page=64#part3771171"><span class="p-s-"></span></a><div class="fragment"><p>Когда следует использовать $location?</p></div><a class="p-l-" name="part3771172" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771172"><span class="p-s-"></span></a><div class="fragment"><p>Служба $location может вести себя по-разному, в зависимости от конфигурации, которая была предоставлена ​​ей, когда она была создана. Конфигурация по умолчанию подходит для многих приложений, для других настройка конфигурации может включить новые возможности.</p></div><a class="p-l-" name="part3771173" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771173"><span class="p-s-"></span></a><div class="fragment"><p>true - см. режим HTML5</p></div><a class="p-l-" name="part3771174" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771174"><span class="p-s-"></span></a><div class="fragment"><p>по-умолчанию: &quot;&quot;</p></div><a class="p-l-" name="part3771175" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771175"><span class="p-s-"></span></a><div class="fragment"><p>// возвращает текущий путь</p></div><a class="p-l-" name="part3771176" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771176"><span class="p-s-"></span></a><div class="fragment"><p>Все сеттер методы возвращают тот же объект $location, обеспечивая возможность стыковки. Например, чтобы изменить несколько сегментов за раз, цепочка сеттеров такая:</p></div><a class="p-l-" name="part3771177" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771177"><span class="p-s-"></span></a><div class="fragment"><p>// или вы можете присоединить их как: $location.path(&#39;/someNewPath&#39;).replace();</p></div><a class="p-l-" name="part3771178" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771178"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Getters (calls to methods without parameters) return decoded values for the following methods path(), search(), hash().</p></div><a class="p-l-" name="part3771179" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771179"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Hashbang mode	HTML5 mode</p></div><a class="p-l-" name="part3771180" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771180"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Hashbang mode (default mode)</p></div><a class="p-l-" name="part3771181" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771181"><span class="p-s-"></span></a><div class="fragment"><p>$locationProvider.html5Mode(false);</p></div><a class="p-l-" name="part3771182" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771182"><span class="p-s-"></span></a><div class="fragment"><p>$location.absUrl() == &#39;http://host.com/base/index.html#!/a&#39;</p></div><a class="p-l-" name="part3771183" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771183"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771184" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771184"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/new&#39;).search(&#39;x=y&#39;);</p></div><a class="p-l-" name="part3771185" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771185"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To allow indexing of your AJAX application, you have to add special meta tag in the head section of your document:</p></div><a class="p-l-" name="part3771186" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771186"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Opening a regular URL in a legacy browser -&gt; redirects to a hashbang URL</p></div><a class="p-l-" name="part3771187" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771187"><span class="p-s-"></span></a><div class="fragment"><p>$locationProvider.html5Mode(true);</p></div><a class="p-l-" name="part3771188" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771188"><span class="p-s-"></span></a><div class="fragment"><p>// open http://host.com/#!/a -&gt; rewrite to http://host.com/a</p></div><a class="p-l-" name="part3771189" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771189"><span class="p-s-"></span></a><div class="fragment"><p>$location.absUrl() == &#39;http://host.com/foo&#39;</p></div><a class="p-l-" name="part3771190" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771190"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771191" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771191"><span class="p-s-"></span></a><div class="fragment"><p>// в броузере без поддержки html5 истории:</p></div><a class="p-l-" name="part3771192" href="/you/angularjs-developer-guide/into-ru/trans/?page=65#part3771192"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771193" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771193"><span class="p-s-"></span></a><div class="fragment"><p><br />}</p></div><a class="p-l-" name="part3771194" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771194"><span class="p-s-"></span></a><div class="fragment"><p>Когда вы используете API режим HTML5 истории, вам будут нужны разные ссылки в разных браузерах, но все, что вам нужно сделать, это указать регулярное ссылки URL, такие как: &lt;a href=&quot;/some?foo=bar&quot;&gt;link&lt;/a&gt;</p></div><a class="p-l-" name="part3771195" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771195"><span class="p-s-"></span></a><div class="fragment"><p>Ссылки, которые содержат целевой элемент</p></div><a class="p-l-" name="part3771196" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771196"><span class="p-s-"></span></a><div class="fragment"><p>Пример: &lt;a href=&quot;/not-my-base/link&quot;&gt;link&lt;/a&gt;</p></div><a class="p-l-" name="part3771197" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771197"><span class="p-s-"></span></a><div class="fragment"><p>&lt;meta name=&quot;fragment&quot; content=&quot;!&quot; /&gt;</p></div><a class="p-l-" name="part3771198" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771198"><span class="p-s-"></span></a><div class="fragment"><p>Отправка ссылок между различными браузерами</p></div><a class="p-l-" name="part3771199" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771199"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Here you can see two $location instances, both in Html5 mode, but on different browsers, so that you can see the differences. These $location services are connected to a fake browsers. Each input represents address bar of the browser.</p></div><a class="p-l-" name="part3771200" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771200"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3771201" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771201"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771202" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771202"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div id=&quot;html5-mode&quot; ng-controller=&quot;Html5Cntl&quot;&gt;</p></div><a class="p-l-" name="part3771203" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771203"><span class="p-s-"></span></a><div class="fragment"><p>$location.port() = {{$location.port()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771204" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771204"><span class="p-s-"></span></a><div class="fragment"><p>&lt;a href=&quot;http://www.host.com/base/sec/ond?flag#hash&quot;&gt;sec/ond?flag#hash&lt;/a&gt; |</p></div><a class="p-l-" name="part3771205" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771205"><span class="p-s-"></span></a><div class="fragment"><p>&lt;h4&gt;Browser without History API&lt;/h4&gt;</p></div><a class="p-l-" name="part3771206" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771206"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() = {{$location.path()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771207" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771207"><span class="p-s-"></span></a><div class="fragment"><p>&lt;a href=&quot;/other-base/another?search&quot;&gt;external&lt;/a&gt;</p></div><a class="p-l-" name="part3771208" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771208"><span class="p-s-"></span></a><div class="fragment"><p>Демонстрация</p></div><a class="p-l-" name="part3771209" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771209"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() = {{$location.path()}}</p></div><a class="p-l-" name="part3771210" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771210"><span class="p-s-"></span></a><div class="fragment"><p>$location.protocol() = {{$location.protocol()}}</p></div><a class="p-l-" name="part3771211" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771211"><span class="p-s-"></span></a><div class="fragment"><p>$location.hash() = {{$location.hash()}}</p></div><a class="p-l-" name="part3771212" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771212"><span class="p-s-"></span></a><div class="fragment"><p>Использование $location выходит за рамки жизненного цикла</p></div><a class="p-l-" name="part3771213" href="/you/angularjs-developer-guide/into-ru/trans/?page=66#part3771213"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование с помощью службы $location</p></div><a class="p-l-" name="part3771214" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771214"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      // whatever it does...</p></div><a class="p-l-" name="part3771215" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771215"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/new/path&#39;);</p></div><a class="p-l-" name="part3771216" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771216"><span class="p-s-"></span></a><div class="fragment"><p>}));</p></div><a class="p-l-" name="part3771217" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771217"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Navigation inside the app	Change to</p></div><a class="p-l-" name="part3771218" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771218"><span class="p-s-"></span></a><div class="fragment"><p>$location.hashPath = path $location.path(path)</p></div><a class="p-l-" name="part3771219" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771219"><span class="p-s-"></span></a><div class="fragment"><p>$location[protocol | host | port | path | search]	$window.location[protocol | host | port | path | search]</p></div><a class="p-l-" name="part3771220" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771220"><span class="p-s-"></span></a><div class="fragment"><p>$location.protocol</p></div><a class="p-l-" name="part3771221" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771221"><span class="p-s-"></span></a><div class="fragment"><p>$location.host()</p></div><a class="p-l-" name="part3771222" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771222"><span class="p-s-"></span></a><div class="fragment"><p>$window.location.search</p></div><a class="p-l-" name="part3771223" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771223"><span class="p-s-"></span></a><div class="fragment"><p>// js - контроллер </p></div><a class="p-l-" name="part3771224" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771224"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771225" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771225"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3771226" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771226"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>All Angular services participate in dependency injection (DI) by registering themselves with Angular&#39;s DI system (injector) under a name (id) as well as by declaring dependencies which need to be provided for the factory function of the registered service. The ability to swap dependencies for mocks/stubs/dummies in tests allows for services to be highly testable.</p></div><a class="p-l-" name="part3771227" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771227"><span class="p-s-"></span></a><div class="fragment"><p>var myModule = angular.module(&#39;myModule&#39;, []);</p></div><a class="p-l-" name="part3771228" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771228"><span class="p-s-"></span></a><div class="fragment"><p>return shinyNewServiceInstance;</p></div><a class="p-l-" name="part3771229" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771229"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;serviceId&#39;, function() {</p></div><a class="p-l-" name="part3771230" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771230"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771231" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771231"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Services can not only be depended upon, but can also have their own dependencies. These can be specified as arguments of the factory function. Read more about dependency injection (DI) in Angular and the use of array notation and the $inject property to make DI annotation minification-proof.</p></div><a class="p-l-" name="part3771232" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771232"><span class="p-s-"></span></a><div class="fragment"><p>var msgs = [];</p></div><a class="p-l-" name="part3771233" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771233"><span class="p-s-"></span></a><div class="fragment"><p>win.alert(msgs.join(&quot;\n&quot;));</p></div><a class="p-l-" name="part3771234" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771234"><span class="p-s-"></span></a><div class="fragment"><p>}]);</p></div><a class="p-l-" name="part3771235" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771235"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Services as singletons</p></div><a class="p-l-" name="part3771236" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771236"><span class="p-s-"></span></a><div class="fragment"><p>Управление зависимостями службы</p></div><a class="p-l-" name="part3771237" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771237"><span class="p-s-"></span></a><div class="fragment"><p>API служб Angular</p></div><a class="p-l-" name="part3771238" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771238"><span class="p-s-"></span></a><div class="fragment"><p>function myController($loc, $log) {</p></div><a class="p-l-" name="part3771239" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771239"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3771240" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771240"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3771241" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771241"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3771242" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771242"><span class="p-s-"></span></a><div class="fragment"><p>Комплексный (E2E) тест</p></div><a class="p-l-" name="part3771243" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771243"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771244" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771244"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-controller=&quot;myController&quot;&gt;</p></div><a class="p-l-" name="part3771245" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771245"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771246" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771246"><span class="p-s-"></span></a><div class="fragment"><p>Давайте попробуем эту простую службу уведомлений, внедренную в контроллер...</p></div><a class="p-l-" name="part3771247" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771247"><span class="p-s-"></span></a><div class="fragment"><p>Исходный код</p></div><a class="p-l-" name="part3771248" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771248"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3771249" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771249"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771250" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771250"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;Let&#39;s try the notify service, that is implicitly injected into the controller...&lt;/p&gt;</p></div><a class="p-l-" name="part3771251" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771251"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771252" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771252"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  NOTIFY</p></div><a class="p-l-" name="part3771253" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771253"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3771254" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771254"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To declare dependencies, you specify them in the factory function signature and annotate the function with the inject annotations either using by setting the $inject property, as an array of string identifiers or using the array notation. Optionally the $inject property declaration can be dropped (see &quot;Inferring $inject&quot; but note that that is currently an experimental feature).</p></div><a class="p-l-" name="part3771255" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771255"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771256" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771256"><span class="p-s-"></span></a><div class="fragment"><p>myServiceFactory.$inject = [&#39;dep1&#39;, &#39;dep2&#39;];</p></div><a class="p-l-" name="part3771257" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771257"><span class="p-s-"></span></a><div class="fragment"><p>function myModuleCfgFn($provide) {</p></div><a class="p-l-" name="part3771258" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771258"><span class="p-s-"></span></a><div class="fragment"><p>/**</p></div><a class="p-l-" name="part3771259" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771259"><span class="p-s-"></span></a><div class="fragment"><p>* @param {*} message Message to be logged.</p></div><a class="p-l-" name="part3771260" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771260"><span class="p-s-"></span></a><div class="fragment"><p>var messageQueue = [];</p></div><a class="p-l-" name="part3771261" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771261"><span class="p-s-"></span></a><div class="fragment"><p>$log(&#39;batchLog messages: &#39;, messageQueue);</p></div><a class="p-l-" name="part3771262" href="/you/angularjs-developer-guide/into-ru/trans/?page=67#part3771262"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771263" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771263"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771264" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771264"><span class="p-s-"></span></a><div class="fragment"><p>}]);</p></div><a class="p-l-" name="part3771265" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771265"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>     * template via the batchLog service.</p></div><a class="p-l-" name="part3771266" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771266"><span class="p-s-"></span></a><div class="fragment"><p>function($route, batchLog, $rootScope) {</p></div><a class="p-l-" name="part3771267" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771267"><span class="p-s-"></span></a><div class="fragment"><p>}]);</p></div><a class="p-l-" name="part3771268" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771268"><span class="p-s-"></span></a><div class="fragment"><p>angular.injector([batchLogModule]).get(&#39;routeT</p></div><a class="p-l-" name="part3771269" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771269"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Both of our services use the factory function signature and array notation for inject annotations to declare their dependencies. It is important that the order of the string identifiers in the array is the same as the order of argument names in the signature of the factory function. Unless the dependencies are inferred from the function signature, it is this array with IDs and their order that the injector uses to determine which services and in which order to inject.</p></div><a class="p-l-" name="part3771270" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771270"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение служб в контролеры</p></div><a class="p-l-" name="part3771271" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771271"><span class="p-s-"></span></a><div class="fragment"><p>API внедрения Angular</p></div><a class="p-l-" name="part3771272" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771272"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771273" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771273"><span class="p-s-"></span></a><div class="fragment"><p>module(function($provide) {</p></div><a class="p-l-" name="part3771274" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771274"><span class="p-s-"></span></a><div class="fragment"><p>inject(function($injector) {</p></div><a class="p-l-" name="part3771275" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771275"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771276" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771276"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771277" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771277"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should alert all after third notification&#39;, function() {</p></div><a class="p-l-" name="part3771278" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771278"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771279" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771279"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should clear messages after alert&#39;, function() {</p></div><a class="p-l-" name="part3771280" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771280"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;more&#39;);</p></div><a class="p-l-" name="part3771281" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771281"><span class="p-s-"></span></a><div class="fragment"><p>expect(mock.alert.callCount).toEqual(2);</p></div><a class="p-l-" name="part3771282" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771282"><span class="p-s-"></span></a><div class="fragment"><p>Понимание сервисов в Angular</p></div><a class="p-l-" name="part3771283" href="/you/angularjs-developer-guide/into-ru/trans/?page=68#part3771283"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3771329" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771329"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>While Model-View-Controller (MVC) has acquired different shades of meaning over the years since it first appeared, Angular incorporates the basic principles behind the original MVC software design pattern into its way of building client-side web applications.</p></div><a class="p-l-" name="part3771330" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771330"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Along with services and dependency injection, MVC makes angular applications better structured, easier to maintain and more testable.</p></div><a class="p-l-" name="part3771331" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771331"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента View</p></div><a class="p-l-" name="part3771332" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771332"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In Angular, a model is any data that is reachable as a property of an angular Scope object. The name of the property is the model identifier and the value is any JavaScript object (including arrays and primitives).</p></div><a class="p-l-" name="part3771333" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771333"><span class="p-s-"></span></a><div class="fragment"><p>function MyCtrl($scope) {</p></div><a class="p-l-" name="part3771334" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771334"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771335" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771335"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body ng-init=&quot; foo = &#39;bar&#39; &quot;&gt;</p></div><a class="p-l-" name="part3771336" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771336"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The code above creates a model called &quot;query&quot; on the current scope with the value set to &quot;fluffy cloud&quot;.</p></div><a class="p-l-" name="part3771337" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771337"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In Angular, a JavaScript object stops being a model when:</p></div><a class="p-l-" name="part3771338" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771338"><span class="p-s-"></span></a><div class="fragment"><p>ПОНИМАНИЕ КОМПОНЕНТА CONTROLLER </p></div><a class="p-l-" name="part3771339" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771339"><span class="p-s-"></span></a><div class="fragment"><p>Добавление поведения к объекту области видимости</p></div><a class="p-l-" name="part3771340" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771340"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You set up the initial state of a scope by creating model properties. For example:</p></div><a class="p-l-" name="part3771341" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771341"><span class="p-s-"></span></a><div class="fragment"><p>var myApp = angular.module(&#39;myApp&#39;,[]);</p></div><a class="p-l-" name="part3771342" href="/you/angularjs-developer-guide/into-ru/trans/?page=70#part3771342"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Behavior on an Angular scope object is in the form of scope method properties available to the template/view. This behavior interacts with and modifies the application model.</p></div><a class="p-l-" name="part3771343" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771343"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The most common way to keep controllers slim is by encapsulating work that doesn&#39;t belong to controllers into services and then using these services in controllers via dependency injection. This is discussed in the Dependency Injection Services sections of this guide.</p></div><a class="p-l-" name="part3771344" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771344"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Output filtering — Use angular filters instead.</p></div><a class="p-l-" name="part3771345" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771345"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You can associate controllers with scope objects explicitly via the scope.$new api or implicitly via the ngController directive or $route service.</p></div><a class="p-l-" name="part3771346" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771346"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>A model consisting of a string named spice</p></div><a class="p-l-" name="part3771347" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771347"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body ng-controller=&quot;SpicyCtrl&quot;&gt;</p></div><a class="p-l-" name="part3771348" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771348"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771349" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771349"><span class="p-s-"></span></a><div class="fragment"><p>$scope.chiliSpicy = function() {</p></div><a class="p-l-" name="part3771350" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771350"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = &#39;jalapeño&#39;;</p></div><a class="p-l-" name="part3771351" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771351"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The ngController directive is used to (implicitly) create a scope for our template, and the scope is augmented (managed) by the SpicyCtrl controller.</p></div><a class="p-l-" name="part3771352" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771352"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Both controller methods are available in the template (for the body element and and its children).</p></div><a class="p-l-" name="part3771353" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771353"><span class="p-s-"></span></a><div class="fragment"><p>Пример аргументов метода контролера</p></div><a class="p-l-" name="part3771354" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771354"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;spicy(customSpice)&quot;&gt;Custom spice&lt;/button&gt;</p></div><a class="p-l-" name="part3771355" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771355"><span class="p-s-"></span></a><div class="fragment"><p>function SpicyCtrl($scope) {</p></div><a class="p-l-" name="part3771356" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771356"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771357" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771357"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controller inheritance in Angular is based on Scope inheritance. Let&#39;s have a look at an example:</p></div><a class="p-l-" name="part3771358" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771358"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;Good {{timeOfDay}}, {{name}}!&lt;/p&gt;</p></div><a class="p-l-" name="part3771359" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771359"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771360" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771360"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771361" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771361"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771362" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771362"><span class="p-s-"></span></a><div class="fragment"><p>$scope.name = &#39;Gingerbreak Baby&#39;;</p></div><a class="p-l-" name="part3771363" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771363"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The MainCtrl scope, which contains timeOfDay and name models</p></div><a class="p-l-" name="part3771364" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771364"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note: Standard prototypical inheritance between two controllers doesn&#39;t work as one might expect, because as we mentioned earlier, controllers are not instantiated directly by Angular, but rather are applied to the scope object.</p></div><a class="p-l-" name="part3771365" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771365"><span class="p-s-"></span></a><div class="fragment"><p>function myController($scope) {</p></div><a class="p-l-" name="part3771366" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771366"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771367" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771367"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;myController function&#39;, function() {</p></div><a class="p-l-" name="part3771368" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771368"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771369" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771369"><span class="p-s-"></span></a><div class="fragment"><p>}));</p></div><a class="p-l-" name="part3771370" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771370"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771371" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771371"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771372" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771372"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;state&#39;, function() {</p></div><a class="p-l-" name="part3771373" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771373"><span class="p-s-"></span></a><div class="fragment"><p>mainScope = $rootScope.$new();</p></div><a class="p-l-" name="part3771374" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771374"><span class="p-s-"></span></a><div class="fragment"><p>babyScope = childCtrl.$new();</p></div><a class="p-l-" name="part3771375" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771375"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should have over and selected&#39;, function() {</p></div><a class="p-l-" name="part3771376" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771376"><span class="p-s-"></span></a><div class="fragment"><p>expect(childScope.name).toBe(&#39;Mattie&#39;);</p></div><a class="p-l-" name="part3771377" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771377"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771378" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771378"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента View</p></div><a class="p-l-" name="part3771379" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771379"><span class="p-s-"></span></a><div class="fragment"><p>В реализации MVC в Angular, вид знает и о модели и о контроллере. Вид знает о модели через двухстороннее связывание данных. Вид знает контроллере через директивы Angular, такие как ngController и ngView и через связь с формой: {{someControllerFunction ()}}. В этом смысле, вид может вызывать функции соответствующие функции контроллера.</p></div><a class="p-l-" name="part3771380" href="/you/angularjs-developer-guide/into-ru/trans/?page=71#part3771380"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента View</p></div><a class="p-l-" name="part3771381" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771381"><span class="p-s-"></span></a><div class="fragment"><p>Обзор</p></div><a class="p-l-" name="part3771382" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771382"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;Buzz Client&#39;, function() {</p></div><a class="p-l-" name="part3771383" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771383"><span class="p-s-"></span></a><div class="fragment"><p>expect(repeater(&#39;ul li&#39;).count()).toEqual(10);</p></div><a class="p-l-" name="part3771384" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771384"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771385" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771385"><span class="p-s-"></span></a><div class="fragment"><p>Источник: https://github.com/angular/angular.js/blob/master/src/ngScenario/dsl.js<br /></p></div><a class="p-l-" name="part3771386" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771386"><span class="p-s-"></span></a><div class="fragment"><p>Приостановка выполнения тестов на указанное количество секунд.</p></div><a class="p-l-" name="part3771387" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771387"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Loads the URL returned by fn into the testing frame. The given url is only used for the test output. Use this when the destination URL is dynamic (that is, the destination is unknown when you write the test).</p></div><a class="p-l-" name="part3771388" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771388"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает window.location.href текущей загруженной страницы  в тестируемом фрейме.</p></div><a class="p-l-" name="part3771389" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771389"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает window.location.search текущей загруженной страницы  в тестируемом фрейме.</p></div><a class="p-l-" name="part3771390" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771390"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает $location.url() текущей загруженной страницы  в тестируемом фрейме.</p></div><a class="p-l-" name="part3771391" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771391"><span class="p-s-"></span></a><div class="fragment"><p>browser().location().hash()</p></div><a class="p-l-" name="part3771392" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771392"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Asserts the value of the given future satisfies the negation of the matcher.</p></div><a class="p-l-" name="part3771393" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771393"><span class="p-s-"></span></a><div class="fragment"><p>input(name).enter(value)</p></div><a class="p-l-" name="part3771394" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771394"><span class="p-s-"></span></a><div class="fragment"><p>Выбирает заданное значение в радио-кнопке с заданным именем.</p></div><a class="p-l-" name="part3771395" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771395"><span class="p-s-"></span></a><div class="fragment"><p>repeater(selector, label).row(index)</p></div><a class="p-l-" name="part3771396" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771396"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Picks the option with the given value on the select with the given name.</p></div><a class="p-l-" name="part3771397" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771397"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).click()</p></div><a class="p-l-" name="part3771398" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771398"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the result of calling method on the element matching the given jQuery selector, where method can be any of the following jQuery methods: val, text, html, height, innerHeight, outerHeight, width, innerWidth, outerWidth, position, scrollLeft, scrollTop, offset. The label is used for test output.</p></div><a class="p-l-" name="part3771399" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771399"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).{method}(key, value)</p></div><a class="p-l-" name="part3771400" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771400"><span class="p-s-"></span></a><div class="fragment"><p>Следующие типы angular-элементов и angular-атрибутов элементов можно использовать в шаблоне:</p></div><a class="p-l-" name="part3771401" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771401"><span class="p-s-"></span></a><div class="fragment"><p>Примечание: В дополнение к объявлению элементов выше в шаблонах, вы также можете получить доступ к этим элементам в коде JavaScript.</p></div><a class="p-l-" name="part3771402" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771402"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;foo&quot; value=&quot;bar&quot;&gt;</p></div><a class="p-l-" name="part3771403" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771403"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;angular.js&quot;&gt;</p></div><a class="p-l-" name="part3771404" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771404"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры в Angular</p></div><a class="p-l-" name="part3771405" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771405"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular sets these CSS classes. It is up to your application to provide useful styling.</p></div><a class="p-l-" name="part3771406" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771406"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Usage: angular input directive applies ng-pristine class to a new input widget element which did not have user interaction. Once the user interacts with the input widget the class is changed to ng-dirty.</p></div><a class="p-l-" name="part3771407" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771407"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Data-binding in Angular web apps is the automatic syncronization of data between the model and view components. The way that Angular implements data-binding lets you treat the model as the single-source-of-truth in your application. The view is a projection of the model at all times. When the model changes, the view reflects the change, and vice versa.</p></div><a class="p-l-" name="part3771408" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771408"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Because the view is just a projection of the model, the controller is completely separated from the view and unaware of it. This makes testing a snap because it is easy to test your controller in isolation without the view and the related DOM/browser dependency.</p></div><a class="p-l-" name="part3771409" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771409"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular filters format data for display to the user.</p></div><a class="p-l-" name="part3771410" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771410"><span class="p-s-"></span></a><div class="fragment"><p>Использование фильтров в Angular </p></div><a class="p-l-" name="part3771411" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771411"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Writing your own filter is very easy: just register a new filter (injectable) factory function with your module. This factory function should return a new filter function which takes the input value as the first argument. Any filter arguments are passed in as additional arguments to the filter function.</p></div><a class="p-l-" name="part3771412" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771412"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3771413" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771413"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;http://code.angularjs.org/1.0.6/angular.min.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771414" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771414"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;greeting&quot; type=&quot;greeting&quot;&gt;&lt;br&gt;</p></div><a class="p-l-" name="part3771415" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771415"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771416" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771416"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Reverse + uppercase: OLLEH</p></div><a class="p-l-" name="part3771417" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771417"><span class="p-s-"></span></a><div class="fragment"><p>API фильтров Angular</p></div><a class="p-l-" name="part3771418" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771418"><span class="p-s-"></span></a><div class="fragment"><p>Вы можете соединить фильтры используя следующий синтаксис:</p></div><a class="p-l-" name="part3771419" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771419"><span class="p-s-"></span></a><div class="fragment"><p>myArray | orderBy:&#39;timestamp&#39;:true</p></div><a class="p-l-" name="part3771420" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771420"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771421" href="/you/angularjs-developer-guide/into-ru/trans/?page=72#part3771421"><span class="p-s-"></span></a><div class="fragment"><p>СЛУЖБЫ ANGULAR</p></div><a class="p-l-" name="part3771422" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771422"><span class="p-s-"></span></a><div class="fragment"><p>Управление зависимостями службы</p></div><a class="p-l-" name="part3771423" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771423"><span class="p-s-"></span></a><div class="fragment"><p>ИСПОЛЬЗОВАНИЕ $LOCATION</p></div><a class="p-l-" name="part3771424" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771424"><span class="p-s-"></span></a><div class="fragment"><p>Смотреть и наблюдать URL.</p></div><a class="p-l-" name="part3771425" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771425"><span class="p-s-"></span></a><div class="fragment"><p>Нажмите ссылку.</p></div><a class="p-l-" name="part3771426" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771426"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>API	exposes &quot;raw&quot; object with properties that can be directly modified	exposes jQuery-style getters and setters</p></div><a class="p-l-" name="part3771427" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771427"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Any time your application needs to react to a change in the current URL or if you want to change the current URL in the browser.</p></div><a class="p-l-" name="part3771428" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771428"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Once the $location service is instantiated, you can interact with it via jQuery-style getter and setter methods that allow you to get or change the current URL in the browser.</p></div><a class="p-l-" name="part3771429" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771429"><span class="p-s-"></span></a><div class="fragment"><p>false - см. режим Hashbang</p></div><a class="p-l-" name="part3771430" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771430"><span class="p-s-"></span></a><div class="fragment"><p>Пример настройки</p></div><a class="p-l-" name="part3771431" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771431"><span class="p-s-"></span></a><div class="fragment"><p>$location.path();</p></div><a class="p-l-" name="part3771432" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771432"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/newValue&#39;).search({key: value});</p></div><a class="p-l-" name="part3771433" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771433"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note that the setters don&#39;t update window.location immediately. Instead, the $location service is aware of the scope life-cycle and coalesces multiple $location mutations into one &quot;commit&quot; to the window.location object during the scope $digest phase. Since multiple changes to the $location&#39;s state will be pushed to the browser as a single change, it&#39;s enough to call the replace() method just once to make the entire &quot;commit&quot; a replace operation rather than an addition to the browser history. Once the browser is updated, the $location service resets the flag set by replace() method and future mutations will create new history records, unless replace() is called again.</p></div><a class="p-l-" name="part3771434" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771434"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>When you call the absUrl() method, the returned value is a full url with its segments encoded.</p></div><a class="p-l-" name="part3771435" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771435"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>configuration	the default	{ html5Mode: true }</p></div><a class="p-l-" name="part3771436" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771436"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In this mode, $location uses Hashbang URLs in all browsers.</p></div><a class="p-l-" name="part3771437" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771437"><span class="p-s-"></span></a><div class="fragment"><p>$locationProvider.hashPrefix = &#39;!&#39;;</p></div><a class="p-l-" name="part3771438" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771438"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() == &#39;/a&#39;</p></div><a class="p-l-" name="part3771439" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771439"><span class="p-s-"></span></a><div class="fragment"><p>$location.search() == {}</p></div><a class="p-l-" name="part3771440" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771440"><span class="p-s-"></span></a><div class="fragment"><p>$location.absUrl() == &#39;http://host.com/base/index.html#!/new?x=y&#39;</p></div><a class="p-l-" name="part3771441" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771441"><span class="p-s-"></span></a><div class="fragment"><p>&lt;meta name=&quot;fragment&quot; content=&quot;!&quot; /&gt;</p></div><a class="p-l-" name="part3771442" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771442"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Opening hashbang URL in a modern browser -&gt; rewrites to a regular URL</p></div><a class="p-l-" name="part3771443" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771443"><span class="p-s-"></span></a><div class="fragment"><p>$locationProvider.hashPrefix = &#39;!&#39;;</p></div><a class="p-l-" name="part3771444" href="/you/angularjs-developer-guide/into-ru/trans/?page=73#part3771444"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    // (replacing the http://host.com/#!/a history record)</p></div><a class="p-l-" name="part3771445" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771445"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771446" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771446"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/new&#39;).search(&#39;x=y&#39;);</p></div><a class="p-l-" name="part3771447" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771447"><span class="p-s-"></span></a><div class="fragment"><p>// open http://host.com/new?x=y -&gt; redirect to http://host.com/#!/new?x=y</p></div><a class="p-l-" name="part3771448" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771448"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(&#39;/foo/bar&#39;);</p></div><a class="p-l-" name="part3771449" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771449"><span class="p-s-"></span></a><div class="fragment"><p>));</p></div><a class="p-l-" name="part3771450" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771450"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>When a user clicks on this link,</p></div><a class="p-l-" name="part3771451" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771451"><span class="p-s-"></span></a><div class="fragment"><p>Пример: &lt;a href=&quot;/ext/link?a=b&quot; target=&quot;_self&quot;&gt;link&lt;/a&gt;</p></div><a class="p-l-" name="part3771452" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771452"><span class="p-s-"></span></a><div class="fragment"><p>Серверная сторона</p></div><a class="p-l-" name="part3771453" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771453"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>This statement causes a crawler to request links with an empty _escaped_fragment_ parameter so that your server can recognize the crawler and serve it HTML snapshots. For more information about this technique, see Making AJAX Applications Crawlable.</p></div><a class="p-l-" name="part3771454" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771454"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Because of rewriting capability in HTML5 mode, your users will be able to open regular url links in legacy browsers and hashbang links in modern browser:</p></div><a class="p-l-" name="part3771455" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771455"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note that when you type hashbang url into first browser (or vice versa) it doesn&#39;t rewrite / redirect to regular / hashbang url, as this conversion happens only during parsing the initial URL = on page reload.</p></div><a class="p-l-" name="part3771456" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771456"><span class="p-s-"></span></a><div class="fragment"><p>script.js</p></div><a class="p-l-" name="part3771457" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771457"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771458" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771458"><span class="p-s-"></span></a><div class="fragment"><p>&lt;h4&gt;Browser with History API&lt;/h4&gt;</p></div><a class="p-l-" name="part3771459" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771459"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() = {{$location.path()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771460" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771460"><span class="p-s-"></span></a><div class="fragment"><p>&lt;a href=&quot;/other-base/another?search&quot;&gt;external&lt;/a&gt;</p></div><a class="p-l-" name="part3771461" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771461"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-address-bar browser=&quot;hashbang&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;</p></div><a class="p-l-" name="part3771462" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771462"><span class="p-s-"></span></a><div class="fragment"><p>$location.search() = {{$location.search()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771463" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771463"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771464" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771464"><span class="p-s-"></span></a><div class="fragment"><p>Браузер с History API</p></div><a class="p-l-" name="part3771465" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771465"><span class="p-s-"></span></a><div class="fragment"><p>$location.search() = {{$location.search()}}</p></div><a class="p-l-" name="part3771466" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771466"><span class="p-s-"></span></a><div class="fragment"><p>$location.host() = {{$location.host()}}</p></div><a class="p-l-" name="part3771467" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771467"><span class="p-s-"></span></a><div class="fragment"><p>/base/first?a=b | sec/ond?flag#hash | external</p></div><a class="p-l-" name="part3771468" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771468"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location knows about Angular&#39;s scope life-cycle. When a URL changes in the browser it updates the $location and calls $apply so that all $watchers / $observers are notified. When you change the $location inside the $digest phase everything is ok; $location will propagate this change into browser and will notify all the $watchers / $observers. When you want to change the $location from outside Angular (for example, through a DOM Event or during testing) - you must call $apply to propagate the changes.</p></div><a class="p-l-" name="part3771469" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771469"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>When using $location service during testing, you are outside of the angular&#39;s scope life-cycle. This means it&#39;s your responsibility to call scope.$apply().</p></div><a class="p-l-" name="part3771470" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771470"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771471" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771471"><span class="p-s-"></span></a><div class="fragment"><p>$rootScope.$apply();</p></div><a class="p-l-" name="part3771472" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771472"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771473" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771473"><span class="p-s-"></span></a><div class="fragment"><p>$location.href = value</p></div><a class="p-l-" name="part3771474" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771474"><span class="p-s-"></span></a><div class="fragment"><p>$location.hashSearch = search $location.search(search)</p></div><a class="p-l-" name="part3771475" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771475"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Read access	Change to</p></div><a class="p-l-" name="part3771476" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771476"><span class="p-s-"></span></a><div class="fragment"><p>$location.host</p></div><a class="p-l-" name="part3771477" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771477"><span class="p-s-"></span></a><div class="fragment"><p>$location.port()</p></div><a class="p-l-" name="part3771478" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771478"><span class="p-s-"></span></a><div class="fragment"><p>Двусторонняя привязка к $location</p></div><a class="p-l-" name="part3771479" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771479"><span class="p-s-"></span></a><div class="fragment"><p>$scope.$watch(&#39;locationPath&#39;, function(path) {</p></div><a class="p-l-" name="part3771480" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771480"><span class="p-s-"></span></a><div class="fragment"><p>$scope.$watch(&#39;$location.path()&#39;, function(path) {</p></div><a class="p-l-" name="part3771481" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771481"><span class="p-s-"></span></a><div class="fragment"><p>$location API</p></div><a class="p-l-" name="part3771482" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771482"><span class="p-s-"></span></a><div class="fragment"><p>Регистрация служб</p></div><a class="p-l-" name="part3771483" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771483"><span class="p-s-"></span></a><div class="fragment"><p>myModule.factory(&#39;serviceId&#39;, function() {</p></div><a class="p-l-" name="part3771484" href="/you/angularjs-developer-guide/into-ru/trans/?page=74#part3771484"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771485" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771485"><span class="p-s-"></span></a><div class="fragment"><p>var shinyNewServiceInstance;</p></div><a class="p-l-" name="part3771486" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771486"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771487" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771487"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Following is an example of a very simple service. This service depends on the $window service (which is passed as a parameter to the factory function) and is just a function. The service simply stores all notifications; after the third one, the service displays all of the notifications by window alert.</p></div><a class="p-l-" name="part3771488" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771488"><span class="p-s-"></span></a><div class="fragment"><p>return function(msg) {</p></div><a class="p-l-" name="part3771489" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771489"><span class="p-s-"></span></a><div class="fragment"><p>msgs = [];</p></div><a class="p-l-" name="part3771490" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771490"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771491" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771491"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Lastly, it is important to realize that all Angular services are application singletons. This means that there is only one instance of a given service per injector. Since Angular is lethally allergic to global state, it is possible to create multiple injectors, each with its own instance of a given service, but that is rarely needed, except in tests where this property is crucially important.</p></div><a class="p-l-" name="part3771492" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771492"><span class="p-s-"></span></a><div class="fragment"><p>Внедрение служб в контролеры</p></div><a class="p-l-" name="part3771493" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771493"><span class="p-s-"></span></a><div class="fragment"><p>ВНЕДРЕНИЕ СЛУЖБ В КОНТРОЛЕРЫ</p></div><a class="p-l-" name="part3771494" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771494"><span class="p-s-"></span></a><div class="fragment"><p>this.firstMethod = function() {</p></div><a class="p-l-" name="part3771495" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771495"><span class="p-s-"></span></a><div class="fragment"><p>this.secondMethod = function() {</p></div><a class="p-l-" name="part3771496" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771496"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771497" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771497"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3771498" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771498"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3771499" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771499"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771500" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771500"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;Let&#39;s try this simple notify service, injected into the controller...&lt;/p&gt;</p></div><a class="p-l-" name="part3771501" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771501"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771502" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771502"><span class="p-s-"></span></a><div class="fragment"><p>Уведомление</p></div><a class="p-l-" name="part3771503" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771503"><span class="p-s-"></span></a><div class="fragment"><p>Редактировать</p></div><a class="p-l-" name="part3771504" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771504"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;MyServiceModuleDI&quot;&gt;</p></div><a class="p-l-" name="part3771505" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771505"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3771506" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771506"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-init=&quot;message=&#39;test&#39;&quot; ng-model=&quot;message&quot;&gt;</p></div><a class="p-l-" name="part3771507" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771507"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3771508" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771508"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>However, if you plan to minify your code, your variable names will get renamed in which case you will still need to explicitly specify dependencies with the $inject property.</p></div><a class="p-l-" name="part3771509" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771509"><span class="p-s-"></span></a><div class="fragment"><p>API служб Angular</p></div><a class="p-l-" name="part3771510" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771510"><span class="p-s-"></span></a><div class="fragment"><p>Использование нотации массива:</p></div><a class="p-l-" name="part3771511" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771511"><span class="p-s-"></span></a><div class="fragment"><p>Использование свойства $inject:</p></div><a class="p-l-" name="part3771512" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771512"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;myService&#39;, myServiceFactory);</p></div><a class="p-l-" name="part3771513" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771513"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;myService&#39;, function(dep1, dep2) {});</p></div><a class="p-l-" name="part3771514" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771514"><span class="p-s-"></span></a><div class="fragment untranslated-"><p> * batchLog service allows for messages to be queued in memory and flushed</p></div><a class="p-l-" name="part3771515" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771515"><span class="p-s-"></span></a><div class="fragment"><p>*/</p></div><a class="p-l-" name="part3771516" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771516"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771517" href="/you/angularjs-developer-guide/into-ru/trans/?page=75#part3771517"><span class="p-s-"></span></a><div class="fragment"><p>messageQueue = [];</p></div><a class="p-l-" name="part3771518" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771518"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771519" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771519"><span class="p-s-"></span></a><div class="fragment"><p>return function(message) {</p></div><a class="p-l-" name="part3771520" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771520"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771521" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771521"><span class="p-s-"></span></a><div class="fragment"><p>*/</p></div><a class="p-l-" name="part3771522" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771522"><span class="p-s-"></span></a><div class="fragment"><p>$rootScope.$on(&#39;$routeChangeSuccess&#39;, function() {</p></div><a class="p-l-" name="part3771523" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771523"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771524" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771524"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Things to notice in this example:</p></div><a class="p-l-" name="part3771525" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771525"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771526" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771526"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование служб Angular</p></div><a class="p-l-" name="part3771527" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771527"><span class="p-s-"></span></a><div class="fragment"><p>ТЕСТИРОВАНИЕ СЛУЖБ ANGULAR</p></div><a class="p-l-" name="part3771528" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771528"><span class="p-s-"></span></a><div class="fragment"><p>beforeEach(function() {</p></div><a class="p-l-" name="part3771529" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771529"><span class="p-s-"></span></a><div class="fragment"><p>$provide.value(&#39;$window&#39;, mock);</p></div><a class="p-l-" name="part3771530" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771530"><span class="p-s-"></span></a><div class="fragment"><p>notify = $injector.get(&#39;notify&#39;);</p></div><a class="p-l-" name="part3771531" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771531"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should not alert first two notifications&#39;, function() {</p></div><a class="p-l-" name="part3771532" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771532"><span class="p-s-"></span></a><div class="fragment"><p>expect(mock.alert).not.toHaveBeenCalled();</p></div><a class="p-l-" name="part3771533" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771533"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;one&#39;);</p></div><a class="p-l-" name="part3771534" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771534"><span class="p-s-"></span></a><div class="fragment"><p>expect(mock.alert).toHaveBeenCalledWith(&quot;one\ntwo\nthree&quot;);</p></div><a class="p-l-" name="part3771535" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771535"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;one&#39;);</p></div><a class="p-l-" name="part3771536" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771536"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;two&#39;);</p></div><a class="p-l-" name="part3771537" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771537"><span class="p-s-"></span></a><div class="fragment"><p>expect(mock.alert.mostRecentCall.args).toEqual([&quot;more\ntwo\nthird&quot;]);</p></div><a class="p-l-" name="part3771538" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771538"><span class="p-s-"></span></a><div class="fragment"><p>Создание служб Angular</p></div><a class="p-l-" name="part3771539" href="/you/angularjs-developer-guide/into-ru/trans/?page=76#part3771539"><span class="p-s-"></span></a><div class="fragment"><p>API служб Angular</p></div><a class="p-l-" name="part3771585" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771585"><span class="p-s-"></span></a><div class="fragment"><p>Шаблон MVC кратко:</p></div><a class="p-l-" name="part3771586" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771586"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The following topics explain how angular incorporates the MVC pattern into the angular way of developing web applications:</p></div><a class="p-l-" name="part3771587" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771587"><span class="p-s-"></span></a><div class="fragment"><p>ПОНИМАНИЕ КОМПОНЕНТА MODEL</p></div><a class="p-l-" name="part3771588" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771588"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The only requirement for a JavaScript object to be a model in Angular is that the object must be referenced by an Angular scope as a property of that scope object. This property reference can be created explicitly or implicitly.</p></div><a class="p-l-" name="part3771589" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771589"><span class="p-s-"></span></a><div class="fragment"><p>// создаем свойство &#39;foo&#39; в области видимости MyCtrl</p></div><a class="p-l-" name="part3771590" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771590"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Use an angular expression with an assignment operator in templates:</p></div><a class="p-l-" name="part3771591" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771591"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular creates models implicitly (by creating a scope property and assigning it a suitable value) when processing the following template constructs:</p></div><a class="p-l-" name="part3771592" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771592"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>An iterator declaration in ngRepeater:</p></div><a class="p-l-" name="part3771593" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771593"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>No Angular scope contains a property that references the object.</p></div><a class="p-l-" name="part3771594" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771594"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In Angular, a controller is a JavaScript function(type/class) that is used to augment instances of angular Scope, excluding the root scope. When you or Angular create a new child scope object via the scope.$new API , there is an option to pass in a controller as a method argument. This will tell Angular to associate the controller with the new scope and to augment its behavior.</p></div><a class="p-l-" name="part3771595" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771595"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Setting up the initial state of a scope object</p></div><a class="p-l-" name="part3771596" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771596"><span class="p-s-"></span></a><div class="fragment"><p>function GreetingCtrl($scope) { $scope.greeting = &#39;Hola!&#39;; }</p></div><a class="p-l-" name="part3771597" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771597"><span class="p-s-"></span></a><div class="fragment"><p>myApp.controller(&#39;GreetingCtrl&#39;, [&#39;$scope&#39;, function($scope) { $scope.greeting = &#39;Hola!&#39;; }]);</p></div><a class="p-l-" name="part3771598" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771598"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>As discussed in the Model section of this guide, any objects (or primitives) assigned to the scope become model properties. Any functions assigned to the scope are available in the template/view, and can be invoked via angular expressions and ng event handler directives (e.g. ngClick).</p></div><a class="p-l-" name="part3771599" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771599"><span class="p-s-"></span></a><div class="fragment"><p>Не используйте контролер для:</p></div><a class="p-l-" name="part3771600" href="/you/angularjs-developer-guide/into-ru/trans/?page=77#part3771600"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To run stateless or stateful code shared across controllers — Use angular services instead.</p></div><a class="p-l-" name="part3771601" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771601"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controller Constructor and Methods Example</p></div><a class="p-l-" name="part3771602" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771602"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>A controller with two functions that set the value of spice</p></div><a class="p-l-" name="part3771603" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771603"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;chiliSpicy()&quot;&gt;Chili&lt;/button&gt;</p></div><a class="p-l-" name="part3771604" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771604"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771605" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771605"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = &#39;chili&#39;;</p></div><a class="p-l-" name="part3771606" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771606"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771607" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771607"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>SpicyCtrl is just a plain JavaScript function. As an (optional) naming convention the name starts with capital letter and ends with &quot;Ctrl&quot; or &quot;Controller&quot;.</p></div><a class="p-l-" name="part3771608" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771608"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>NB: Previous versions of Angular (pre 1.0 RC) allowed you to use this interchangeably with the $scope method, but this is no longer the case. Inside of methods defined on the scope this and $scope are interchangeable (angular sets this to $scope), but not otherwise inside your controller constructor.</p></div><a class="p-l-" name="part3771609" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771609"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body ng-controller=&quot;SpicyCtrl&quot;&gt;</p></div><a class="p-l-" name="part3771610" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771610"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;The food is {{spice}} spicy!&lt;/p&gt;</p></div><a class="p-l-" name="part3771611" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771611"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = &#39;very&#39;;</p></div><a class="p-l-" name="part3771612" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771612"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771613" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771613"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body ng-controller=&quot;MainCtrl&quot;&gt;</p></div><a class="p-l-" name="part3771614" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771614"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p ng-controller=&quot;BabyCtrl&quot;&gt;Good {{timeOfDay}}, {{name}}!&lt;/p&gt;</p></div><a class="p-l-" name="part3771615" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771615"><span class="p-s-"></span></a><div class="fragment"><p>function MainCtrl($scope) {</p></div><a class="p-l-" name="part3771616" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771616"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771617" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771617"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771618" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771618"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771619" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771619"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The ChildCtrl scope, which shadows the name model from the previous scope and inherits the timeOfDay model</p></div><a class="p-l-" name="part3771620" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771620"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование контролеров</p></div><a class="p-l-" name="part3771621" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771621"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spices = [{&quot;name&quot;:&quot;pasilla&quot;, &quot;spiciness&quot;:&quot;mild&quot;},</p></div><a class="p-l-" name="part3771622" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771622"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spice = &quot;habanero&quot;;</p></div><a class="p-l-" name="part3771623" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771623"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771624" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771624"><span class="p-s-"></span></a><div class="fragment"><p>beforeEach(inject(function($rootScope, $controller) {</p></div><a class="p-l-" name="part3771625" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771625"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771626" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771626"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771627" href="/you/angularjs-developer-guide/into-ru/trans/?page=78#part3771627"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771628" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771628"><span class="p-s-"></span></a><div class="fragment"><p>var mainScope, childScope, babyScope;</p></div><a class="p-l-" name="part3771629" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771629"><span class="p-s-"></span></a><div class="fragment"><p>var mainCtrl = $controller(MainCtrl, {$scope: mainScope});</p></div><a class="p-l-" name="part3771630" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771630"><span class="p-s-"></span></a><div class="fragment"><p>var babyCtrl = $controller(BabyCtrl, {$scope: babyScope});</p></div><a class="p-l-" name="part3771631" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771631"><span class="p-s-"></span></a><div class="fragment"><p>expect(mainScope.timeOfDay).toBe(&#39;morning&#39;)</p></div><a class="p-l-" name="part3771632" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771632"><span class="p-s-"></span></a><div class="fragment"><p>expect(babyScope.timeOfDay).toBe(&#39;evening&#39;);</p></div><a class="p-l-" name="part3771633" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771633"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771634" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771634"><span class="p-s-"></span></a><div class="fragment"><p>ПОНИМАНИЕ КОМПОНЕНТА ПРЕДСТАВЛЕНИЯ (VIEW)</p></div><a class="p-l-" name="part3771635" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771635"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771636" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771636"><span class="p-s-"></span></a><div class="fragment"><p>E2E-ТЕСТИРОВАНИЕ</p></div><a class="p-l-" name="part3771637" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771637"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You will write scenario tests in JavaScript, which describe how your application should behave, given a certain interaction in a specific state. A scenario is comprised of one or more it blocks (you can think of these as the requirements of your application), which in turn are made of commands and expectations. Commands tell the Runner to do something with the application (such as navigate to a page or click on a button), and expectations tell the Runner to assert something about the state (such as the value of a field or the current URL). If any expectation fails, the runner marks the it as &quot;failed&quot; and continues on to the next one. Scenarios may also have beforeEach and afterEach blocks, which will be run before (or after) each it block, regardless of whether they pass or fail.</p></div><a class="p-l-" name="part3771638" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771638"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should filter results&#39;, function() {</p></div><a class="p-l-" name="part3771639" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771639"><span class="p-s-"></span></a><div class="fragment"><p>input(&#39;filterText&#39;).enter(&#39;Bees&#39;);</p></div><a class="p-l-" name="part3771640" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771640"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>This scenario describes the requirements of a Buzz Client, specifically, that it should be able to filter the stream of the user. It starts by entering a value in the &#39;user&#39; input field, clicking the only button on the page, and then it verifies that there are 10 items listed. It then enters &#39;Bees&#39; in the &#39;filterText&#39; input field and verifies that the list is reduced to a single item.</p></div><a class="p-l-" name="part3771641" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771641"><span class="p-s-"></span></a><div class="fragment"><p>pause()</p></div><a class="p-l-" name="part3771642" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771642"><span class="p-s-"></span></a><div class="fragment"><p>browser().navigateTo(url)</p></div><a class="p-l-" name="part3771643" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771643"><span class="p-s-"></span></a><div class="fragment"><p>browser().reload()</p></div><a class="p-l-" name="part3771644" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771644"><span class="p-s-"></span></a><div class="fragment"><p>browser().window().path()</p></div><a class="p-l-" name="part3771645" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771645"><span class="p-s-"></span></a><div class="fragment"><p>browser().window().hash()</p></div><a class="p-l-" name="part3771646" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771646"><span class="p-s-"></span></a><div class="fragment"><p>browser().location().path()</p></div><a class="p-l-" name="part3771647" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771647"><span class="p-s-"></span></a><div class="fragment"><p>Возвращает $location.hash() загруженной в данный момент страницы в тестовом фрейме.</p></div><a class="p-l-" name="part3771648" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771648"><span class="p-s-"></span></a><div class="fragment"><p>using(selector, label)</p></div><a class="p-l-" name="part3771649" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771649"><span class="p-s-"></span></a><div class="fragment"><p>Ввод заданного значения в текстовое поле с заданным именем.</p></div><a class="p-l-" name="part3771650" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771650"><span class="p-s-"></span></a><div class="fragment"><p>input(name).val()</p></div><a class="p-l-" name="part3771651" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771651"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns an array with the bindings in the row at the given index in the repeater matching the given jQuery selector. The label is used for test output.</p></div><a class="p-l-" name="part3771652" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771652"><span class="p-s-"></span></a><div class="fragment"><p>select(name).option(value1, value2...)</p></div><a class="p-l-" name="part3771653" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771653"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Clicks on the element matching the given jQuery selector. The label is used for test output.</p></div><a class="p-l-" name="part3771654" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771654"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).{method}(value)</p></div><a class="p-l-" name="part3771655" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771655"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Executes the method passing in key and value on the element matching the given jQuery selector, where method can be any of the following jQuery methods: attr, prop, css. The label is used for test output.</p></div><a class="p-l-" name="part3771656" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771656"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Directive — An attribute or element that augments an existing DOM element or represents a reusable DOM component - a widget.</p></div><a class="p-l-" name="part3771657" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771657"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The following code snippet shows a simple Angular template made up of standard HTML tags along with Angular directives and curly-brace bindings with expressions:</p></div><a class="p-l-" name="part3771658" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771658"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>   &lt;!-- Button tag with ng-click directive, and</p></div><a class="p-l-" name="part3771659" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771659"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771660" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771660"><span class="p-s-"></span></a><div class="fragment"><p>Формы Angular</p></div><a class="p-l-" name="part3771661" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771661"><span class="p-s-"></span></a><div class="fragment"><p>классы CSS, используемые angular</p></div><a class="p-l-" name="part3771662" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771662"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771663" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771663"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Data Binding in Classical Template Systems</p></div><a class="p-l-" name="part3771664" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771664"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771665" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771665"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>For example, you might have a data object that needs to be formatted according to the locale before displaying it to the user. You can pass expressions through a chain of filters like this:</p></div><a class="p-l-" name="part3771666" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771666"><span class="p-s-"></span></a><div class="fragment"><p>Создание фильтров Angular</p></div><a class="p-l-" name="part3771667" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771667"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The following sample filter reverses a text string. In addition, it conditionally makes the text upper-case and assigns color.</p></div><a class="p-l-" name="part3771668" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771668"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>End to end test</p></div><a class="p-l-" name="part3771669" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771669"><span class="p-s-"></span></a><div class="fragment"><p>&lt;script src=&quot;script.js&quot;&gt;&lt;/script&gt;</p></div><a class="p-l-" name="part3771670" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771670"><span class="p-s-"></span></a><div class="fragment"><p>No filter: {{greeting}}&lt;br&gt;</p></div><a class="p-l-" name="part3771671" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771671"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3771672" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771672"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771673" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771673"><span class="p-s-"></span></a><div class="fragment"><p>ИСПОЛЬЗОВАНИЕ ANGULAR ФИЛЬТРОВ</p></div><a class="p-l-" name="part3771674" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771674"><span class="p-s-"></span></a><div class="fragment"><p>{{ expression | filter1 | filter2 }}</p></div><a class="p-l-" name="part3771675" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771675"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Here are some examples that show values before and after applying different filters to an expression in a binding:</p></div><a class="p-l-" name="part3771676" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771676"><span class="p-s-"></span></a><div class="fragment"><p>Понимание фильтров в Angular</p></div><a class="p-l-" name="part3771677" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771677"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Services are a feature that Angular brings to client-side web apps from the server side, where services have been commonly used for a long time. Services in Angular apps are substitutable objects that are wired together using dependency injection (DI).</p></div><a class="p-l-" name="part3771678" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771678"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Injecting Services Into Controllers</p></div><a class="p-l-" name="part3771679" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771679"><span class="p-s-"></span></a><div class="fragment"><p>Что он делает?</p></div><a class="p-l-" name="part3771680" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771680"><span class="p-s-"></span></a><div class="fragment"><p>Изменяет URL.</p></div><a class="p-l-" name="part3771681" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771681"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Represents the URL object as a set of methods (protocol, host, port, path, search, hash).</p></div><a class="p-l-" name="part3771682" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771682"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>integration with angular application life-cycle	none	knows about all internal life-cycle phases, integrates with $watch, ...</p></div><a class="p-l-" name="part3771683" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771683"><span class="p-s-"></span></a><div class="fragment"><p>Что он не делает?</p></div><a class="p-l-" name="part3771684" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771684"><span class="p-s-"></span></a><div class="fragment"><p>конфигурация службы $location</p></div><a class="p-l-" name="part3771685" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771685"><span class="p-s-"></span></a><div class="fragment"><p>default: false</p></div><a class="p-l-" name="part3771686" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771686"><span class="p-s-"></span></a><div class="fragment"><p>$locationProvider.html5Mode(true).hashPrefix(</p></div><a class="p-l-" name="part3771687" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771687"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771688" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771688"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>There is a special replace method which can be used to tell the $location service that the next time the $location service is synced with the browser, the last history record should be replaced instead of creating a new one. This is useful when you want to implement redirection, which would otherwise break the back button (navigating back would retrigger the redirection). To change the current URL without creating a new browser history record you can call:</p></div><a class="p-l-" name="part3771689" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771689"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Setters and character encoding</p></div><a class="p-l-" name="part3771690" href="/you/angularjs-developer-guide/into-ru/trans/?page=79#part3771690"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>When you call the url() method, the returned value is path, search and hash, in the form /path?search=a&amp;b=c#hash. The segments are encoded as well.</p></div><a class="p-l-" name="part3771691" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771691"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>URL format	hashbang URLs in all browsers	regular URLs in modern browser, hashbang URLs in old browser</p></div><a class="p-l-" name="part3771692" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771692"><span class="p-s-"></span></a><div class="fragment"><p>Пример</p></div><a class="p-l-" name="part3771693" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771693"><span class="p-s-"></span></a><div class="fragment"><p>},</p></div><a class="p-l-" name="part3771694" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771694"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771695" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771695"><span class="p-s-"></span></a><div class="fragment"><p>$location.search({a: &#39;b&#39;, c: true});</p></div><a class="p-l-" name="part3771696" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771696"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771697" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771697"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>This will cause crawler bot to request links with _escaped_fragment_ param so that your server can recognize the crawler and serve a HTML snapshots. For more information about this technique, see Making AJAX Applications Crawlable.</p></div><a class="p-l-" name="part3771698" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771698"><span class="p-s-"></span></a><div class="fragment"><p>Пример</p></div><a class="p-l-" name="part3771699" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771699"><span class="p-s-"></span></a><div class="fragment"><p>},</p></div><a class="p-l-" name="part3771700" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771700"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() == &#39;/a&#39;</p></div><a class="p-l-" name="part3771701" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771701"><span class="p-s-"></span></a><div class="fragment"><p>$location.search() == {}</p></div><a class="p-l-" name="part3771702" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771702"><span class="p-s-"></span></a><div class="fragment"><p>$location.url() == &#39;new?x=y&#39;</p></div><a class="p-l-" name="part3771703" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771703"><span class="p-s-"></span></a><div class="fragment"><p>// (again replacing the http://host.com/new?x=y history item)</p></div><a class="p-l-" name="part3771704" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771704"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() == &#39;/foo/bar&#39;</p></div><a class="p-l-" name="part3771705" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771705"><span class="p-s-"></span></a><div class="fragment"><p>Нейтрализация неисправности для устаревших браузеров</p></div><a class="p-l-" name="part3771706" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771706"><span class="p-s-"></span></a><div class="fragment"><p>В устаревшем браузере, URL изменяется на /index.html#!/some?foo=bar</p></div><a class="p-l-" name="part3771707" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771707"><span class="p-s-"></span></a><div class="fragment"><p>Абсолютные ссылки, ведущие на другой домен</p></div><a class="p-l-" name="part3771708" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771708"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Using this mode requires URL rewriting on server side, basically you have to rewrite all your links to entry point of your application (e.g. index.html)</p></div><a class="p-l-" name="part3771709" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771709"><span class="p-s-"></span></a><div class="fragment"><p>Относительные ссылки</p></div><a class="p-l-" name="part3771710" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771710"><span class="p-s-"></span></a><div class="fragment"><p>Современный браузер перепишет hashbang URL-ссылки в regular URL-ссылки.</p></div><a class="p-l-" name="part3771711" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771711"><span class="p-s-"></span></a><div class="fragment"><p>В этом примере мы используем &lt;base href=&quot;/base/index.html&quot; /&gt;</p></div><a class="p-l-" name="part3771712" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771712"><span class="p-s-"></span></a><div class="fragment"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3771713" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771713"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3771714" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771714"><span class="p-s-"></span></a><div class="fragment"><p>&lt;div ng-address-bar browser=&quot;html5&quot;&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;</p></div><a class="p-l-" name="part3771715" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771715"><span class="p-s-"></span></a><div class="fragment"><p>$location.search() = {{$location.search()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771716" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771716"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771717" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771717"><span class="p-s-"></span></a><div class="fragment"><p>$location.protocol() = {{$location.protocol()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771718" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771718"><span class="p-s-"></span></a><div class="fragment"><p>$location.hash() = {{$location.hash()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771719" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771719"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771720" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771720"><span class="p-s-"></span></a><div class="fragment"><p>$location.protocol() = {{$location.protocol()}}</p></div><a class="p-l-" name="part3771721" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771721"><span class="p-s-"></span></a><div class="fragment"><p>$location.hash() = {{$location.hash()}}</p></div><a class="p-l-" name="part3771722" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771722"><span class="p-s-"></span></a><div class="fragment"><p>$location.port() = {{$location.port()}}</p></div><a class="p-l-" name="part3771723" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771723"><span class="p-s-"></span></a><div class="fragment"><p>Предостережения</p></div><a class="p-l-" name="part3771724" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771724"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() and ! or / prefixes</p></div><a class="p-l-" name="part3771725" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771725"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;serviceUnderTest&#39;, function() {</p></div><a class="p-l-" name="part3771726" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771726"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771727" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771727"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771728" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771728"><span class="p-s-"></span></a><div class="fragment"><p>Переход с ранних версий AngularJS</p></div><a class="p-l-" name="part3771729" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771729"><span class="p-s-"></span></a><div class="fragment"><p>$location.hash = value</p></div><a class="p-l-" name="part3771730" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771730"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Navigation outside the app	Use lower level API</p></div><a class="p-l-" name="part3771731" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771731"><span class="p-s-"></span></a><div class="fragment"><p>$location.hashPath	$location.path()</p></div><a class="p-l-" name="part3771732" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771732"><span class="p-s-"></span></a><div class="fragment"><p>$location.port</p></div><a class="p-l-" name="part3771733" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771733"><span class="p-s-"></span></a><div class="fragment"><p>$location.path() + $location.search()</p></div><a class="p-l-" name="part3771734" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771734"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The Angular&#39;s compiler currently does not support two-way binding for methods (see issue). If you should require two-way binding to the $location object (using ngModel directive on an input field), you will need to specify an extra model property (e.g. locationPath) with two watchers which push $location updates in both directions. For example:</p></div><a class="p-l-" name="part3771735" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771735"><span class="p-s-"></span></a><div class="fragment"><p>$location.path(path);</p></div><a class="p-l-" name="part3771736" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771736"><span class="p-s-"></span></a><div class="fragment"><p>scope.locationPath = path;</p></div><a class="p-l-" name="part3771737" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771737"><span class="p-s-"></span></a><div class="fragment"><p>СОЗДАНИЕ СЛУЖБ</p></div><a class="p-l-" name="part3771738" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771738"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To register a service, you must have a module that this service will be part of. Afterwards, you can register the service with the module either via the Module api or by using the $provide service in the module configuration function.The following pseudo-code shows both approaches:</p></div><a class="p-l-" name="part3771739" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771739"><span class="p-s-"></span></a><div class="fragment"><p>var shinyNewServiceInstance;</p></div><a class="p-l-" name="part3771740" href="/you/angularjs-developer-guide/into-ru/trans/?page=80#part3771740"><span class="p-s-"></span></a><div class="fragment"><p>Использование службы $provide:</p></div><a class="p-l-" name="part3771741" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771741"><span class="p-s-"></span></a><div class="fragment"><p>//factory function body that constructs shinyNewServiceInstance</p></div><a class="p-l-" name="part3771742" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771742"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note that you are not registering a service instance, but rather a factory function that will create this instance when called.</p></div><a class="p-l-" name="part3771743" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771743"><span class="p-s-"></span></a><div class="fragment"><p>angular.module(&#39;myModule&#39;, [], function($provide) {</p></div><a class="p-l-" name="part3771744" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771744"><span class="p-s-"></span></a><div class="fragment"><p>msgs.push(msg);</p></div><a class="p-l-" name="part3771745" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771745"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771746" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771746"><span class="p-s-"></span></a><div class="fragment"><p>Создание экземпляров служб Angular</p></div><a class="p-l-" name="part3771747" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771747"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771748" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771748"><span class="p-s-"></span></a><div class="fragment"><p>Тестирование служб Angular</p></div><a class="p-l-" name="part3771749" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771749"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Using services as dependencies for controllers is very similar to using services as dependencies for another service.</p></div><a class="p-l-" name="part3771750" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771750"><span class="p-s-"></span></a><div class="fragment"><p>// использование службы $location</p></div><a class="p-l-" name="part3771751" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771751"><span class="p-s-"></span></a><div class="fragment"><p>// использование службы $log</p></div><a class="p-l-" name="part3771752" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771752"><span class="p-s-"></span></a><div class="fragment"><p>// какие службы внедрить?</p></div><a class="p-l-" name="part3771753" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771753"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3771754" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771754"><span class="p-s-"></span></a><div class="fragment"><p>&lt;html ng-app=&quot;MyServiceModule&quot;&gt;</p></div><a class="p-l-" name="part3771755" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771755"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/head&gt;</p></div><a class="p-l-" name="part3771756" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771756"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-init=&quot;message=&#39;test&#39;&quot; ng-model=&quot;message&quot; &gt;</p></div><a class="p-l-" name="part3771757" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771757"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3771758" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771758"><span class="p-s-"></span></a><div class="fragment"><p>Неявные внедрения зависимостей</p></div><a class="p-l-" name="part3771759" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771759"><span class="p-s-"></span></a><div class="fragment"><p>index.html</p></div><a class="p-l-" name="part3771760" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771760"><span class="p-s-"></span></a><div class="fragment"><p>&lt;head&gt;</p></div><a class="p-l-" name="part3771761" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771761"><span class="p-s-"></span></a><div class="fragment"><p>&lt;body&gt;</p></div><a class="p-l-" name="part3771762" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771762"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;callNotify(message);&quot;&gt;NOTIFY&lt;/button&gt;<br /></p></div><a class="p-l-" name="part3771763" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771763"><span class="p-s-"></span></a><div class="fragment"><p>Демо</p></div><a class="p-l-" name="part3771764" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771764"><span class="p-s-"></span></a><div class="fragment"><p>См. также</p></div><a class="p-l-" name="part3771765" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771765"><span class="p-s-"></span></a><div class="fragment"><p>УПРАВЛЕНИЕ СЛУЖБАМИ ЗАВИСИМОСТЕЙ</p></div><a class="p-l-" name="part3771766" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771766"><span class="p-s-"></span></a><div class="fragment"><p>function myModuleCfgFn($provide) {</p></div><a class="p-l-" name="part3771767" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771767"><span class="p-s-"></span></a><div class="fragment"><p>function myModuleCfgFn($provide) {</p></div><a class="p-l-" name="part3771768" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771768"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771769" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771769"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771770" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771770"><span class="p-s-"></span></a><div class="fragment untranslated-"><p> * to the console.log every 50 seconds.</p></div><a class="p-l-" name="part3771771" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771771"><span class="p-s-"></span></a><div class="fragment"><p>function batchLogModule($provide){</p></div><a class="p-l-" name="part3771772" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771772"><span class="p-s-"></span></a><div class="fragment"><p>function log() {</p></div><a class="p-l-" name="part3771773" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771773"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771774" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771774"><span class="p-s-"></span></a><div class="fragment"><p>// запускаем периодические проверки</p></div><a class="p-l-" name="part3771775" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771775"><span class="p-s-"></span></a><div class="fragment"><p>messageQueue.push(message);</p></div><a class="p-l-" name="part3771776" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771776"><span class="p-s-"></span></a><div class="fragment"><p>/**</p></div><a class="p-l-" name="part3771777" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771777"><span class="p-s-"></span></a><div class="fragment"><p>$provide.factory(&#39;routeTemplateMonitor&#39;,</p></div><a class="p-l-" name="part3771778" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771778"><span class="p-s-"></span></a><div class="fragment"><p>batchLog($route.current ? $route.current.template : null);</p></div><a class="p-l-" name="part3771779" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771779"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771780" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771780"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The batchLog service depends on the built-in $timeout and $log services, and allows messages to be logged into the console.log in batches.</p></div><a class="p-l-" name="part3771781" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771781"><span class="p-s-"></span></a><div class="fragment"><p>Понимание служб Angular</p></div><a class="p-l-" name="part3771782" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771782"><span class="p-s-"></span></a><div class="fragment"><p>Связанное API</p></div><a class="p-l-" name="part3771783" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771783"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The following is a unit test for the &#39;notify&#39; service in the &#39;Dependencies&#39; example in Creating Angular Services. The unit test example uses Jasmine spy (mock) instead of a real browser alert.</p></div><a class="p-l-" name="part3771784" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771784"><span class="p-s-"></span></a><div class="fragment"><p>mock = {alert: jasmine.createSpy()};</p></div><a class="p-l-" name="part3771785" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771785"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771786" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771786"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771787" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771787"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;one&#39;);</p></div><a class="p-l-" name="part3771788" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771788"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771789" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771789"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;two&#39;);</p></div><a class="p-l-" name="part3771790" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771790"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771791" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771791"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;two&#39;);</p></div><a class="p-l-" name="part3771792" href="/you/angularjs-developer-guide/into-ru/trans/?page=81#part3771792"><span class="p-s-"></span></a><div class="fragment"><p>notify(&#39;third&#39;);</p></div><a class="p-l-" name="part3771793" href="/you/angularjs-developer-guide/into-ru/trans/?page=82#part3771793"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771794" href="/you/angularjs-developer-guide/into-ru/trans/?page=82#part3771794"><span class="p-s-"></span></a><div class="fragment"><p>Управление службами зависимостей</p></div><a class="p-l-" name="part3771841" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771841"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Separate applications into distinct presentation, data, and logic components</p></div><a class="p-l-" name="part3771842" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771842"><span class="p-s-"></span></a><div class="fragment"><p>Понимание компонента Model</p></div><a class="p-l-" name="part3771843" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771843"><span class="p-s-"></span></a><div class="fragment"><p>Улучшение этого документа</p></div><a class="p-l-" name="part3771844" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771844"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You can create models by explicitly creating scope properties referencing JavaScript objects in the following ways:</p></div><a class="p-l-" name="part3771845" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771845"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>     // and assign it an initial value &#39;bar&#39;</p></div><a class="p-l-" name="part3771846" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771846"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;{{foos=&#39;ball&#39;}}&quot;&gt;Click me&lt;/button&gt;</p></div><a class="p-l-" name="part3771847" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771847"><span class="p-s-"></span></a><div class="fragment"><p>Input, select, textarea и другие элементы форм:</p></div><a class="p-l-" name="part3771848" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771848"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p ng-repeat=&quot;phone in phones&quot;&gt;&lt;/p&gt;</p></div><a class="p-l-" name="part3771849" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771849"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>All Angular scopes that contain a property referencing the object become stale and eligible for garbage collection.</p></div><a class="p-l-" name="part3771850" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771850"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Use controllers to:</p></div><a class="p-l-" name="part3771851" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771851"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Typically, when you create an application you need to set up an initial state for an Angular scope.</p></div><a class="p-l-" name="part3771852" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771852"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The GreetingCtrl controller creates a greeting model which can be referred to in a template.</p></div><a class="p-l-" name="part3771853" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771853"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Note also that we use the array notation to explicitly specify the dependency of the controller on the $scope service provided by Angular.</p></div><a class="p-l-" name="part3771854" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771854"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Using Controllers Correctly</p></div><a class="p-l-" name="part3771855" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771855"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Any kind of DOM manipulation — Controllers should contain only business logic. DOM manipulation—the presentation logic of an application—is well known for being hard to test. Putting any presentation logic into controllers significantly affects testability of the business logic. Angular offers databinding for automatic DOM manipulation. If you have to perform your own manual DOM manipulation, encapsulate the presentation logic in directives.</p></div><a class="p-l-" name="part3771856" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771856"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To instantiate or manage the life-cycle of other components (for example, to create service instances).</p></div><a class="p-l-" name="part3771857" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771857"><span class="p-s-"></span></a><div class="fragment"><p>Для иллюстрации того, как работают компоненты контроллеров в Angular.js, давайте создадим небольшое приложение со следующими компонентами:</p></div><a class="p-l-" name="part3771858" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771858"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The message in our template contains a binding to the spice model, which by default is set to the string &quot;very&quot;. Depending on which button is clicked, the spice model is set to chili or jalapeño, and the message is automatically updated by data-binding.</p></div><a class="p-l-" name="part3771859" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771859"><span class="p-s-"></span></a><div class="fragment"><p>&lt;button ng-click=&quot;jalapenoSpicy()&quot;&gt;Jalapeño&lt;/button&gt;</p></div><a class="p-l-" name="part3771860" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771860"><span class="p-s-"></span></a><div class="fragment"><p>function SpicyCtrl($scope) {</p></div><a class="p-l-" name="part3771861" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771861"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771862" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771862"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771863" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771863"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Assigning a property to $scope creates or updates the model.</p></div><a class="p-l-" name="part3771864" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771864"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>NB: Previous versions of Angular (pre 1.0 RC) added prototype methods into the scope automatically, but this is no longer the case; all methods need to be added manually to the scope.</p></div><a class="p-l-" name="part3771865" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771865"><span class="p-s-"></span></a><div class="fragment"><p>&lt;input ng-model=&quot;customSpice&quot; value=&quot;wasabi&quot;&gt;</p></div><a class="p-l-" name="part3771866" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771866"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/body&gt;</p></div><a class="p-l-" name="part3771867" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771867"><span class="p-s-"></span></a><div class="fragment"><p>$scope.spicy = function(spice) {</p></div><a class="p-l-" name="part3771868" href="/you/angularjs-developer-guide/into-ru/trans/?page=84#part3771868"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Notice that the SpicyCtrl controller now defines just one method called spicy, which takes one argument called spice. The template then refers to this controller method and passes in a string constant &#39;chili&#39; in the binding for the first button and a model property spice (bound to an input box) in the second button.</p></div><a class="p-l-" name="part3771869" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771869"><span class="p-s-"></span></a><div class="fragment"><p>&lt;p&gt;Good {{timeOfDay}}, {{name}}!&lt;/p&gt;</p></div><a class="p-l-" name="part3771870" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771870"><span class="p-s-"></span></a><div class="fragment"><p>&lt;/div&gt;</p></div><a class="p-l-" name="part3771871" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771871"><span class="p-s-"></span></a><div class="fragment"><p>$scope.timeOfDay = &#39;morning&#39;;</p></div><a class="p-l-" name="part3771872" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771872"><span class="p-s-"></span></a><div class="fragment"><p>function ChildCtrl($scope) {</p></div><a class="p-l-" name="part3771873" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771873"><span class="p-s-"></span></a><div class="fragment"><p>function BabyCtrl($scope) {</p></div><a class="p-l-" name="part3771874" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771874"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Notice how we nested three ngController directives in our template. This template construct will result in 4 scopes being created for our view:</p></div><a class="p-l-" name="part3771875" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771875"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The BabyCtrl scope, which shadows both the timeOfDay model defined in MainCtrl and name model defined in the ChildCtrl</p></div><a class="p-l-" name="part3771876" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771876"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Although there are many ways to test a controller, one of the best conventions, shown below, involves injecting the $rootScope and $controller</p></div><a class="p-l-" name="part3771877" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771877"><span class="p-s-"></span></a><div class="fragment"><p>{&quot;name&quot;:&quot;jalapeno&quot;, &quot;spiceiness&quot;:&quot;hot hot hot!&quot;},</p></div><a class="p-l-" name="part3771878" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771878"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3771879" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771879"><span class="p-s-"></span></a><div class="fragment"><p>describe(&#39;myController&#39;, function() {</p></div><a class="p-l-" name="part3771880" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771880"><span class="p-s-"></span></a><div class="fragment"><p>scope = $rootScope.$new();</p></div><a class="p-l-" name="part3771881" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771881"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should create &quot;spices&quot; model with 3 spices&#39;, function() {</p></div><a class="p-l-" name="part3771882" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771882"><span class="p-s-"></span></a><div class="fragment"><p>it(&#39;should set the default value of spice&#39;, function() {</p></div><a class="p-l-" name="part3771883" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771883"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3771884" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771884"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771885" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771885"><span class="p-s-"></span></a><div class="fragment"><p>childScope = mainScope.$new();</p></div><a class="p-l-" name="part3771886" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771886"><span class="p-s-"></span></a><div class="fragment"><p>}));</p></div><a class="p-l-" name="part3771887" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771887"><span class="p-s-"></span></a><div class="fragment"><p>expect(mainScope.name).toBe(&#39;Nikki&#39;);</p></div><a class="p-l-" name="part3771888" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771888"><span class="p-s-"></span></a><div class="fragment"><p>expect(babyScope.name).toBe(&#39;Gingerbreak Baby&#39;);</p></div><a class="p-l-" name="part3771889" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771889"><span class="p-s-"></span></a><div class="fragment"><p>О MVC в Angular</p></div><a class="p-l-" name="part3771890" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771890"><span class="p-s-"></span></a><div class="fragment"><p>Улучшение этого документа</p></div><a class="p-l-" name="part3771891" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771891"><span class="p-s-"></span></a><div class="fragment"><p>О MVC в Angular</p></div><a class="p-l-" name="part3771892" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771892"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>As applications grow in size and complexity, it becomes unrealistic to rely on manual testing to verify the correctness of new features, catch bugs and notice regressions.</p></div><a class="p-l-" name="part3771893" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771893"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In addition to the above elements, scenarios may also contain helper functions to avoid duplicating code in the it blocks.</p></div><a class="p-l-" name="part3771894" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771894"><span class="p-s-"></span></a><div class="fragment"><p>input(&#39;user&#39;).enter(&#39;jacksparrow&#39;);</p></div><a class="p-l-" name="part3771895" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771895"><span class="p-s-"></span></a><div class="fragment"><p>expect(repeater(&#39;ul li&#39;).count()).toEqual(1);</p></div><a class="p-l-" name="part3771896" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771896"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The API section below lists the available commands and expectations for the Runner.</p></div><a class="p-l-" name="part3771897" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771897"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Pauses the execution of the tests until you call resume() in the console (or click the resume link in the Runner UI).</p></div><a class="p-l-" name="part3771898" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771898"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Loads the url into the test frame.</p></div><a class="p-l-" name="part3771899" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771899"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Refreshes the currently loaded page in the test frame.</p></div><a class="p-l-" name="part3771900" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771900"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the window.location.pathname of the currently loaded page in the test frame.</p></div><a class="p-l-" name="part3771901" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771901"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the window.location.hash (without #) of the currently loaded page in the test frame.</p></div><a class="p-l-" name="part3771902" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771902"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the $location.path() of the currently loaded page in the test frame.</p></div><a class="p-l-" name="part3771903" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771903"><span class="p-s-"></span></a><div class="fragment"><p>expect(future).{matcher}</p></div><a class="p-l-" name="part3771904" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771904"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Scopes the next DSL element selection.</p></div><a class="p-l-" name="part3771905" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771905"><span class="p-s-"></span></a><div class="fragment"><p>input(name).check()</p></div><a class="p-l-" name="part3771906" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771906"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Returns the current value of an input field with the given name.</p></div><a class="p-l-" name="part3771907" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771907"><span class="p-s-"></span></a><div class="fragment"><p>repeater(selector, label).column(binding)</p></div><a class="p-l-" name="part3771908" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771908"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Picks the options with the given values on the multi select with the given name.</p></div><a class="p-l-" name="part3771909" href="/you/angularjs-developer-guide/into-ru/trans/?page=85#part3771909"><span class="p-s-"></span></a><div class="fragment"><p>element(selector, label).query(fn)</p></div><a class="p-l-" name="part3771910" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771910"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Executes the method passing in value on the element matching the given jQuery selector, where method can be any of the following jQuery methods: val, text, html, height, innerHeight, outerHeight, width, innerWidth, outerWidth, position, scrollLeft, scrollTop, offset. The label is used for test output.</p></div><a class="p-l-" name="part3771911" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771911"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>JavaScript is a dynamically typed language which comes with great power of expression, but it also come with almost no-help from the compiler. For this reason we feel very strongly that any code written in JavaScript needs to come with a strong set of tests. We have built many features into angular which makes testing your angular applications easy. So there is no excuse for not testing.</p></div><a class="p-l-" name="part3771912" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771912"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Markup — The double curly brace notation {{ }} to bind expressions to elements is built-in angular markup.</p></div><a class="p-l-" name="part3771913" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771913"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3771914" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771914"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>          string expression &#39;buttonText&#39;</p></div><a class="p-l-" name="part3771915" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771915"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;/html&gt;</p></div><a class="p-l-" name="part3771916" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771916"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Related API</p></div><a class="p-l-" name="part3771917" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771917"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>ng-invalid, ng-valid</p></div><a class="p-l-" name="part3771918" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771918"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular Templates</p></div><a class="p-l-" name="part3771919" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771919"><span class="p-s-"></span></a><div class="fragment untranslated-"><p> Most templating systems bind data in only one direction: they merge template and model components together into a view, as illustrated in the diagram. After the merge occurs, changes to the model or related sections of the view are NOT automatically reflected in the view. Worse, any changes that the user makes to the view are not reflected in the model. This means that the developer has to write code that constantly syncs the view with the model and the model with the view.</p></div><a class="p-l-" name="part3771920" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771920"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular Scopes</p></div><a class="p-l-" name="part3771921" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771921"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    name | uppercase</p></div><a class="p-l-" name="part3771922" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771922"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Related API</p></div><a class="p-l-" name="part3771923" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771923"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Source</p></div><a class="p-l-" name="part3771924" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771924"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;!doctype html&gt;</p></div><a class="p-l-" name="part3771925" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771925"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  &lt;/head&gt;</p></div><a class="p-l-" name="part3771926" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771926"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      Reverse: {{greeting|reverse}}&lt;br&gt;</p></div><a class="p-l-" name="part3771927" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771927"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Demo</p></div><a class="p-l-" name="part3771928" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771928"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Understanding Angular Filters</p></div><a class="p-l-" name="part3771929" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771929"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Filters can be part of any api/ng.$rootScope.Scope evaluation but are typically used to format expressions in bindings in your templates:</p></div><a class="p-l-" name="part3771930" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771930"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You can also pass colon-delimited arguments to filters, for example, to display the number 123 with 2 decimal points:</p></div><a class="p-l-" name="part3771931" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771931"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>No filter: {{1234.5678}} =&gt; 1234.5678</p></div><a class="p-l-" name="part3771932" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771932"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Creating Angular Filters</p></div><a class="p-l-" name="part3771933" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771933"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Related Topics</p></div><a class="p-l-" name="part3771934" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771934"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Testing Angular Services</p></div><a class="p-l-" name="part3771935" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771935"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The $location service parses the URL in the browser address bar (based on the window.location) and makes the URL available to your application. Changes to the URL in the address bar are reflected into $location service and changes to $location are reflected into the browser address bar.</p></div><a class="p-l-" name="part3771936" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771936"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Synchronizes the URL with the browser when the user</p></div><a class="p-l-" name="part3771937" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771937"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Comparing $location to window.location</p></div><a class="p-l-" name="part3771938" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771938"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>seamless integration with HTML5 API	no	yes (with a fallback for legacy browsers)</p></div><a class="p-l-" name="part3771939" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771939"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>It does not cause a full page reload when the browser URL is changed. To reload the page after changing the URL, use the lower-level API, $window.location.href.</p></div><a class="p-l-" name="part3771940" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771940"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>To configure the $location service, retrieve the $locationProvider and set the parameters as follows:</p></div><a class="p-l-" name="part3771941" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771941"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>hashPrefix(prefix): {string}</p></div><a class="p-l-" name="part3771942" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771942"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Getter and setter methods</p></div><a class="p-l-" name="part3771943" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771943"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>// change the path</p></div><a class="p-l-" name="part3771944" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771944"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.path(&#39;/someNewPath&#39;);</p></div><a class="p-l-" name="part3771945" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771945"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>You can pass special characters to $location service and it will encode them according to rules specified in RFC 3986. When you access the methods:</p></div><a class="p-l-" name="part3771946" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771946"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Hashbang and HTML5 Modes</p></div><a class="p-l-" name="part3771947" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771947"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;a href=&quot;&quot;&gt; link rewriting	no	yes</p></div><a class="p-l-" name="part3771948" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771948"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>it(&#39;should show example&#39;, inject(</p></div><a class="p-l-" name="part3771949" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771949"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  function($location) {</p></div><a class="p-l-" name="part3771950" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771950"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.path(&#39;/foo&#39;)</p></div><a class="p-l-" name="part3771951" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771951"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.absUrl() == &#39;http://host.com/base/index.html#!/foo?a=b&amp;c&#39;</p></div><a class="p-l-" name="part3771952" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771952"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>));</p></div><a class="p-l-" name="part3771953" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771953"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>HTML5 mode</p></div><a class="p-l-" name="part3771954" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771954"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>it(&#39;should show example&#39;, inject(</p></div><a class="p-l-" name="part3771955" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771955"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  function($location) {</p></div><a class="p-l-" name="part3771956" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771956"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771957" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771957"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.search({a: &#39;b&#39;, c: true});</p></div><a class="p-l-" name="part3771958" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771958"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.absUrl() == &#39;http://host.com/new?x=y&#39;</p></div><a class="p-l-" name="part3771959" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771959"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.path() == &#39;/new&#39;</p></div><a class="p-l-" name="part3771960" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771960"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    $location.url() == &#39;/foo/bar?x=y&#39;</p></div><a class="p-l-" name="part3771961" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771961"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>For browsers that support the HTML5 history API, $location uses the HTML5 history API to write path and search. If the history API is not supported by a browser, $location supplies a Hasbang URL. This frees you from having to worry about whether the browser viewing your app supports the history API or not; the $location service makes this transparent to you.</p></div><a class="p-l-" name="part3771962" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771962"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In a modern browser, the URL changes to /some?foo=bar</p></div><a class="p-l-" name="part3771963" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771963"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Example: &lt;a href=&quot;http://angularjs.org/&quot;&gt;link&lt;/a&gt;</p></div><a class="p-l-" name="part3771964" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771964"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Crawling your app</p></div><a class="p-l-" name="part3771965" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771965"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Be sure to check all relative links, images, scripts etc. You must either specify the url base in the head of your main html file (&lt;base href=&quot;/my-base&quot;&gt;) or you must use absolute urls (starting with /) everywhere because relative urls will be resolved to absolute urls using the initial absolute url of the document, which is often different from the root of the application.</p></div><a class="p-l-" name="part3771966" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771966"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Older browsers will redirect regular URLs to hashbang URLs.</p></div><a class="p-l-" name="part3771967" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3771967"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Source</p></div><a class="p-l-" name="part3771968" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771968"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;html ng-app&gt;</p></div><a class="p-l-" name="part3771969" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771969"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  &lt;body&gt;</p></div><a class="p-l-" name="part3771970" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771970"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        $location.protocol() = {{$location.protocol()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771971" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771971"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        $location.hash() = {{$location.hash()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771972" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771972"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771973" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771973"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        $location.host() = {{$location.host()}}&lt;br&gt;</p></div><a class="p-l-" name="part3771974" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771974"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>        &lt;a href=&quot;http://www.host.com/base/first?a=b&quot;&gt;/base/first?a=b&lt;/a&gt; |</p></div><a class="p-l-" name="part3771975" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771975"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  &lt;/body&gt;</p></div><a class="p-l-" name="part3771976" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771976"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.host() = {{$location.host()}}</p></div><a class="p-l-" name="part3771977" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771977"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>/base/first?a=b | sec/ond?flag#hash | external</p></div><a class="p-l-" name="part3771978" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771978"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.path() = {{$location.path()}}</p></div><a class="p-l-" name="part3771979" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771979"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Page reload navigation</p></div><a class="p-l-" name="part3771980" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771980"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>A path should always begin with forward slash (/); the $location.path() setter will add the forward slash if it is missing.</p></div><a class="p-l-" name="part3771981" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771981"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  beforeEach(module(function($provide) {</p></div><a class="p-l-" name="part3771982" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771982"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3771983" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771983"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    // test whatever the service should do...</p></div><a class="p-l-" name="part3771984" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771984"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>In earlier releases of Angular, $location used hashPath or hashSearch to process path and search methods. With this release, the $location service processes path and search methods and then uses the information it obtains to compose hashbang URLs (such as http://server.com/#!/path?search=a), when necessary.</p></div><a class="p-l-" name="part3771985" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771985"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.update(value)</p></div><a class="p-l-" name="part3771986" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771986"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.href = value</p></div><a class="p-l-" name="part3771987" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771987"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.hashSearch	$location.search()</p></div><a class="p-l-" name="part3771988" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771988"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.hash	$location.absUrl()</p></div><a class="p-l-" name="part3771989" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771989"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$location.path</p></div><a class="p-l-" name="part3771990" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771990"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>&lt;!-- html --&gt;</p></div><a class="p-l-" name="part3771991" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771991"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The class above is hard to test since we have to change global state:</p></div><a class="p-l-" name="part3771992" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771992"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var oldServiceLocator = global.serviceLocator;</p></div><a class="p-l-" name="part3771993" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771993"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>global.serviceLocator.set(&#39;xhr&#39;, function mockXHR() {});</p></div><a class="p-l-" name="part3771994" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771994"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var myClass = new MyClass();</p></div><a class="p-l-" name="part3771995" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771995"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>myClass.doWork();</p></div><a class="p-l-" name="part3771996" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771996"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>// assert that mockXHR got called with the right arguments</p></div><a class="p-l-" name="part3771997" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771997"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>global.serviceLocator = oldServiceLocator; // if you forget this bad things will happen</p></div><a class="p-l-" name="part3771998" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771998"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Passing in Dependencies:</p></div><a class="p-l-" name="part3771999" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3771999"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Lastly the dependency can be passed in.</p></div><a class="p-l-" name="part3772000" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772000"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>function MyClass(xhr) {</p></div><a class="p-l-" name="part3772001" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772001"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  this.doWork = function() {</p></div><a class="p-l-" name="part3772002" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772002"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    xhr({</p></div><a class="p-l-" name="part3772003" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772003"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      method:&#39;...&#39;,</p></div><a class="p-l-" name="part3772004" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772004"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      url:&#39;...&#39;,</p></div><a class="p-l-" name="part3772005" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772005"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      complete:function(response){ ... }</p></div><a class="p-l-" name="part3772006" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772006"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    })</p></div><a class="p-l-" name="part3772007" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772007"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>}</p></div><a class="p-l-" name="part3772008" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772008"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>This is the preferred way since the code makes no assumptions as to where the xhr comes from, rather that whoever created the class was responsible for passing it in. Since the creator of the class should be different code than the user of the class, it separates the responsibility of creation from the logic, and that is what dependency-injection is in a nutshell.</p></div><a class="p-l-" name="part3772009" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772009"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The class above is very testable, since in the test we can write:</p></div><a class="p-l-" name="part3772010" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772010"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>function xhrMock(args) {...}</p></div><a class="p-l-" name="part3772011" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772011"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var myClass = new MyClass(xhrMock);</p></div><a class="p-l-" name="part3772012" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772012"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>myClass.doWork();</p></div><a class="p-l-" name="part3772013" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772013"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>// assert that xhrMock got called with the right arguments</p></div><a class="p-l-" name="part3772014" href="/you/angularjs-developer-guide/into-ru/trans/?page=86#part3772014"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Notice that no global variables were harmed in the writing of this test.</p></div><a class="p-l-" name="part3772015" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772015"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular comes with dependency injection built in which makes the right thing easy to do, but you still need to do it if you wish to take advantage of the testability story.</p></div><a class="p-l-" name="part3772016" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772016"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Controllers</p></div><a class="p-l-" name="part3772017" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772017"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>What makes each application unique is its logic, which is what we would like to test. If the logic for your application is mixed in with DOM manipulation, it will be hard to test as in the example below:</p></div><a class="p-l-" name="part3772018" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772018"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>function PasswordCtrl() {</p></div><a class="p-l-" name="part3772019" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772019"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  // get references to DOM elements</p></div><a class="p-l-" name="part3772020" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772020"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  var msg = $(&#39;.ex1 span&#39;);</p></div><a class="p-l-" name="part3772021" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772021"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  var input = $(&#39;.ex1 input&#39;);</p></div><a class="p-l-" name="part3772022" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772022"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  var strength;</p></div><a class="p-l-" name="part3772023" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772023"><span class="p-s-"></span></a><div class="fragment untranslated-"><p></p></div><a class="p-l-" name="part3772024" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772024"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  this.grade = function() {</p></div><a class="p-l-" name="part3772025" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772025"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    msg.removeClass(strength);</p></div><a class="p-l-" name="part3772026" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772026"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    var pwd = input.val();</p></div><a class="p-l-" name="part3772027" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772027"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    password.text(pwd);</p></div><a class="p-l-" name="part3772028" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772028"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    if (pwd.length &gt; 8) {</p></div><a class="p-l-" name="part3772029" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772029"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      strength = &#39;strong&#39;;</p></div><a class="p-l-" name="part3772030" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772030"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    } else if (pwd.length &gt; 3) {</p></div><a class="p-l-" name="part3772031" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772031"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      strength = &#39;medium&#39;;</p></div><a class="p-l-" name="part3772032" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772032"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    } else {</p></div><a class="p-l-" name="part3772033" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772033"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>      strength = &#39;weak&#39;;</p></div><a class="p-l-" name="part3772034" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772034"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    }</p></div><a class="p-l-" name="part3772035" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772035"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    msg</p></div><a class="p-l-" name="part3772036" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772036"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>     .addClass(strength)</p></div><a class="p-l-" name="part3772037" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772037"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>     .text(strength);</p></div><a class="p-l-" name="part3772038" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772038"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  }</p></div><a class="p-l-" name="part3772039" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772039"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>}</p></div><a class="p-l-" name="part3772040" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772040"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>The code above is problematic from a testability point of view, since it requires your test to have the right kind of DOM present when the code executes. The test would look like this:</p></div><a class="p-l-" name="part3772041" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772041"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var input = $(&#39;&lt;input type=&quot;text&quot;/&gt;&#39;);</p></div><a class="p-l-" name="part3772042" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772042"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var span = $(&#39;&lt;span&gt;&#39;);</p></div><a class="p-l-" name="part3772043" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772043"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>$(&#39;body&#39;).html(&#39;&lt;div class=&quot;ex1&quot;&gt;&#39;)</p></div><a class="p-l-" name="part3772044" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772044"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>  .find(&#39;div&#39;)</p></div><a class="p-l-" name="part3772045" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772045"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    .append(input)</p></div><a class="p-l-" name="part3772046" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772046"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>    .append(span);</p></div><a class="p-l-" name="part3772047" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772047"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>var pc = new PasswordCtrl();</p></div><a class="p-l-" name="part3772048" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772048"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>input.val(&#39;abc&#39;);</p></div><a class="p-l-" name="part3772049" href="/you/angularjs-developer-guide/into-ru/trans/?page=87#part3772049"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>pc.grade();</p></div><a class="p-l-" name="part3772050" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772050"><span class="p-s-"></span></a><div class="fragment"><p>myClass.doWork();</p></div><a class="p-l-" name="part3772051" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772051"><span class="p-s-"></span></a><div class="fragment"><p>// убедимся, что mockXHR был вызван с правильными аргументами</p></div><a class="p-l-" name="part3772052" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772052"><span class="p-s-"></span></a><div class="fragment"><p>global.xhr = oldXHR; // если вы забудете эту строку - у вас может умереть кошка, или ваша девушка бросит вас</p></div><a class="p-l-" name="part3772053" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772053"><span class="p-s-"></span></a><div class="fragment"><p>Реестр сервисов:</p></div><a class="p-l-" name="part3772054" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772054"><span class="p-s-"></span></a><div class="fragment"><p>Может показаться, что мы можем решить эту проблему, заведя реестр сервисов и позволяя тестам заменять его внутренности при надобности.</p></div><a class="p-l-" name="part3772055" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772055"><span class="p-s-"></span></a><div class="fragment"><p>function MyClass() {</p></div><a class="p-l-" name="part3772056" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772056"><span class="p-s-"></span></a><div class="fragment"><p>var serviceRegistry = ????;</p></div><a class="p-l-" name="part3772057" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772057"><span class="p-s-"></span></a><div class="fragment"><p>this.doWork = function() {</p></div><a class="p-l-" name="part3772058" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772058"><span class="p-s-"></span></a><div class="fragment"><p>var xhr = serviceRegistry.get(&#39;xhr&#39;);</p></div><a class="p-l-" name="part3772059" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772059"><span class="p-s-"></span></a><div class="fragment"><p>xhr({</p></div><a class="p-l-" name="part3772060" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772060"><span class="p-s-"></span></a><div class="fragment"><p>method:&#39;...&#39;,</p></div><a class="p-l-" name="part3772061" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772061"><span class="p-s-"></span></a><div class="fragment"><p>url:&#39;...&#39;,</p></div><a class="p-l-" name="part3772062" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772062"><span class="p-s-"></span></a><div class="fragment"><p>complete:function(response){ ... }</p></div><a class="p-l-" name="part3772063" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772063"><span class="p-s-"></span></a><div class="fragment"><p>})</p></div><a class="p-l-" name="part3772064" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772064"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772065" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772065"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>}</p></div><a class="p-l-" name="part3772066" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772066"><span class="p-s-"></span></a><div class="fragment"><p>Класс выше сложно тестировать, так как нам нужно изменять глобальное состояние:</p></div><a class="p-l-" name="part3772067" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772067"><span class="p-s-"></span></a><div class="fragment"><p>var oldServiceLocator = global.serviceLocator;</p></div><a class="p-l-" name="part3772068" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772068"><span class="p-s-"></span></a><div class="fragment"><p>global.serviceLocator.set(&#39;xhr&#39;, function mockXHR() {});</p></div><a class="p-l-" name="part3772069" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772069"><span class="p-s-"></span></a><div class="fragment"><p>var myClass = new MyClass();</p></div><a class="p-l-" name="part3772070" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772070"><span class="p-s-"></span></a><div class="fragment"><p>myClass.doWork();</p></div><a class="p-l-" name="part3772071" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772071"><span class="p-s-"></span></a><div class="fragment"><p>// убедимся, что mockXHR был вызван с правильными аргументами</p></div><a class="p-l-" name="part3772072" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772072"><span class="p-s-"></span></a><div class="fragment"><p>global.xhr = oldXHR; // если вы забудете эту строку - вас обсчитают в магазине, или вы пробьёте колесо своей машины.</p></div><a class="p-l-" name="part3772073" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772073"><span class="p-s-"></span></a><div class="fragment"><p>Передача зависимостей:</p></div><a class="p-l-" name="part3772074" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772074"><span class="p-s-"></span></a><div class="fragment"><p>Наконец, зависимости могут передаваться внутрь.</p></div><a class="p-l-" name="part3772075" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772075"><span class="p-s-"></span></a><div class="fragment"><p>function MyClass(xhr) {</p></div><a class="p-l-" name="part3772076" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772076"><span class="p-s-"></span></a><div class="fragment"><p>this.doWork = function() {</p></div><a class="p-l-" name="part3772077" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772077"><span class="p-s-"></span></a><div class="fragment"><p>xhr({</p></div><a class="p-l-" name="part3772078" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772078"><span class="p-s-"></span></a><div class="fragment"><p>method:&#39;...&#39;,</p></div><a class="p-l-" name="part3772079" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772079"><span class="p-s-"></span></a><div class="fragment"><p>url:&#39;...&#39;,</p></div><a class="p-l-" name="part3772080" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772080"><span class="p-s-"></span></a><div class="fragment"><p>complete:function(response){ ... }</p></div><a class="p-l-" name="part3772081" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772081"><span class="p-s-"></span></a><div class="fragment"><p>})</p></div><a class="p-l-" name="part3772082" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772082"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772083" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772083"><span class="p-s-"></span></a><div class="fragment"><p>Это предпочтительный способ, так как код не знает о том, откуда приходит xhr. Всё что требуется - передать xhr внутрь. Так как место в котором класс создаётся отличается от места, где он используется, это помогает разделить ответственность за создание от логики использования. Это и есть суть DI.</p></div><a class="p-l-" name="part3772084" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772084"><span class="p-s-"></span></a><div class="fragment"><p>Класс выше очень легко протестировать, так как мы можем написать:</p></div><a class="p-l-" name="part3772085" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772085"><span class="p-s-"></span></a><div class="fragment"><p>function xhrMock(args) {...}</p></div><a class="p-l-" name="part3772086" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772086"><span class="p-s-"></span></a><div class="fragment"><p>var myClass = new MyClass(xhrMock);</p></div><a class="p-l-" name="part3772087" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772087"><span class="p-s-"></span></a><div class="fragment"><p>myClass.doWork();</p></div><a class="p-l-" name="part3772088" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772088"><span class="p-s-"></span></a><div class="fragment"><p>// убедимся, что mockXHR был вызван с правильными аргументами</p></div><a class="p-l-" name="part3772089" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772089"><span class="p-s-"></span></a><div class="fragment"><p>Заметьте, что во время написания этого теста не пострадала ни одна глобальная переменная.</p></div><a class="p-l-" name="part3772090" href="/you/angularjs-developer-guide/into-ru/trans/?page=88#part3772090"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>uo</p></div><a class="p-l-" name="part3772091" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772091"><span class="p-s-"></span></a><div class="fragment"><p>Контроллеры</p></div><a class="p-l-" name="part3772092" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772092"><span class="p-s-"></span></a><div class="fragment"><p>Что делает каждое приложение уникальным,так это логика, которую мы хотим проверить. Если логика вашего приложения смешана с DOM манипуляциями, то будет сложно тестировать как в примере ниже.</p></div><a class="p-l-" name="part3772093" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772093"><span class="p-s-"></span></a><div class="fragment"><p>function PasswordCtrl() {</p></div><a class="p-l-" name="part3772094" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772094"><span class="p-s-"></span></a><div class="fragment"><p>/ / Получение ссылок на DOM элементы</p></div><a class="p-l-" name="part3772095" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772095"><span class="p-s-"></span></a><div class="fragment"><p>var msg = $(&#39;.ex1 span&#39;);</p></div><a class="p-l-" name="part3772096" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772096"><span class="p-s-"></span></a><div class="fragment"><p>var input = $(&#39;.ex1 input&#39;);</p></div><a class="p-l-" name="part3772097" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772097"><span class="p-s-"></span></a><div class="fragment"><p>var strength;</p></div><a class="p-l-" name="part3772098" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772098"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>Angular services are singletons that carry out specific tasks common to web apps, such as the $http service that provides low level access to the browser&#39;s XMLHttpRequest object.</p></div><a class="p-l-" name="part3772099" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772099"><span class="p-s-"></span></a><div class="fragment"><p>this.grade = function() {</p></div><a class="p-l-" name="part3772100" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772100"><span class="p-s-"></span></a><div class="fragment"><p>msg.removeClass(strength);</p></div><a class="p-l-" name="part3772101" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772101"><span class="p-s-"></span></a><div class="fragment"><p>var pwd = input.val();</p></div><a class="p-l-" name="part3772102" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772102"><span class="p-s-"></span></a><div class="fragment"><p>password.text(pwd);</p></div><a class="p-l-" name="part3772103" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772103"><span class="p-s-"></span></a><div class="fragment"><p>if (pwd.length &gt; 8) {</p></div><a class="p-l-" name="part3772104" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772104"><span class="p-s-"></span></a><div class="fragment"><p>strength = &#39;strong&#39;;</p></div><a class="p-l-" name="part3772105" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772105"><span class="p-s-"></span></a><div class="fragment"><p>} else if (pwd.length &gt; 3) {</p></div><a class="p-l-" name="part3772106" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772106"><span class="p-s-"></span></a><div class="fragment"><p>strength = &#39;medium&#39;;</p></div><a class="p-l-" name="part3772107" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772107"><span class="p-s-"></span></a><div class="fragment"><p>} else {</p></div><a class="p-l-" name="part3772108" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772108"><span class="p-s-"></span></a><div class="fragment"><p>strength = &#39;weak&#39;;</p></div><a class="p-l-" name="part3772109" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772109"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772110" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772110"><span class="p-s-"></span></a><div class="fragment"><p>msg</p></div><a class="p-l-" name="part3772111" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772111"><span class="p-s-"></span></a><div class="fragment"><p>.addClass(strength)</p></div><a class="p-l-" name="part3772112" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772112"><span class="p-s-"></span></a><div class="fragment"><p>.text(strength);</p></div><a class="p-l-" name="part3772113" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772113"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772114" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772114"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772115" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772115"><span class="p-s-"></span></a><div class="fragment"><p>Этот код является проблематичным с точки зрения способности к тестированию, с момента когда это требует теста для настоящего DOM, когда выполняется код. Тест будет выглядеть следующим образом:</p></div><a class="p-l-" name="part3772116" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772116"><span class="p-s-"></span></a><div class="fragment"><p>var input = $(&#39;&lt;input type=&quot;text&quot;/&gt;&#39;);</p></div><a class="p-l-" name="part3772117" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772117"><span class="p-s-"></span></a><div class="fragment"><p>var span = $(&#39;&lt;span&gt;&#39;);</p></div><a class="p-l-" name="part3772118" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772118"><span class="p-s-"></span></a><div class="fragment"><p>$(&#39;body&#39;).html(&#39;&lt;div class=&quot;ex1&quot;&gt;&#39;)</p></div><a class="p-l-" name="part3772119" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772119"><span class="p-s-"></span></a><div class="fragment"><p>.find(&#39;div&#39;)</p></div><a class="p-l-" name="part3772120" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772120"><span class="p-s-"></span></a><div class="fragment"><p>.append(input)</p></div><a class="p-l-" name="part3772121" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772121"><span class="p-s-"></span></a><div class="fragment"><p>.append(span);</p></div><a class="p-l-" name="part3772122" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772122"><span class="p-s-"></span></a><div class="fragment"><p>var pc = new PasswordCtrl();</p></div><a class="p-l-" name="part3772123" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772123"><span class="p-s-"></span></a><div class="fragment"><p>input.val(&#39;abc&#39;);</p></div><a class="p-l-" name="part3772124" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772124"><span class="p-s-"></span></a><div class="fragment"><p>pc.grade();</p></div><a class="p-l-" name="part3772125" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772125"><span class="p-s-"></span></a><div class="fragment"><p>expect(span.text()).toEqual(&#39;weak&#39;);</p></div><a class="p-l-" name="part3772126" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772126"><span class="p-s-"></span></a><div class="fragment"><p>$(&#39;body&#39;).html(&#39;&#39;);</p></div><a class="p-l-" name="part3772127" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772127"><span class="p-s-"></span></a><div class="fragment"><p>В Angular.js контроллеры строго отделены от логики DOM манипуляций, которые приводят к более простому тестированию, как можно видеть в примере:</p></div><a class="p-l-" name="part3772128" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772128"><span class="p-s-"></span></a><div class="fragment"><p>function PasswordCtrl($scope) {</p></div><a class="p-l-" name="part3772129" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772129"><span class="p-s-"></span></a><div class="fragment"><p>$scope.password = &#39;&#39;;</p></div><a class="p-l-" name="part3772130" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772130"><span class="p-s-"></span></a><div class="fragment"><p>$scope.grade = function() {</p></div><a class="p-l-" name="part3772131" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772131"><span class="p-s-"></span></a><div class="fragment"><p>var size = $scope.password.length;</p></div><a class="p-l-" name="part3772132" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772132"><span class="p-s-"></span></a><div class="fragment"><p>if (size &gt; 8) {</p></div><a class="p-l-" name="part3772133" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772133"><span class="p-s-"></span></a><div class="fragment"><p>$scope.strength = &#39;strong&#39;;</p></div><a class="p-l-" name="part3772134" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772134"><span class="p-s-"></span></a><div class="fragment"><p>} else if (size &gt; 3) {</p></div><a class="p-l-" name="part3772135" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772135"><span class="p-s-"></span></a><div class="fragment"><p>$scope.strength = &#39;medium&#39;;</p></div><a class="p-l-" name="part3772136" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772136"><span class="p-s-"></span></a><div class="fragment"><p>} else {</p></div><a class="p-l-" name="part3772137" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772137"><span class="p-s-"></span></a><div class="fragment"><p>$scope.strength = &#39;weak&#39;;</p></div><a class="p-l-" name="part3772138" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772138"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772139" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772139"><span class="p-s-"></span></a><div class="fragment"><p>};</p></div><a class="p-l-" name="part3772140" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772140"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772141" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772141"><span class="p-s-"></span></a><div class="fragment"><p>и тест прямо впереди</p></div><a class="p-l-" name="part3772142" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772142"><span class="p-s-"></span></a><div class="fragment"><p>var pc = new PasswordCtrl();</p></div><a class="p-l-" name="part3772143" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772143"><span class="p-s-"></span></a><div class="fragment"><p>pc.password(&#39;abc&#39;);</p></div><a class="p-l-" name="part3772144" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772144"><span class="p-s-"></span></a><div class="fragment"><p>pc.grade();</p></div><a class="p-l-" name="part3772145" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772145"><span class="p-s-"></span></a><div class="fragment"><p>expect(pc.strength).toEqual(&#39;weak&#39;);</p></div><a class="p-l-" name="part3772146" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772146"><span class="p-s-"></span></a><div class="fragment"><p>Обратите внимание, что тест не более короткий, но теперь проще следить, что происходит. Мы утверждаем, что такой тест расскажет нам больше, вместо этих случайных битов, которые кажутся не взаимосвязанными.</p></div><a class="p-l-" name="part3772147" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772147"><span class="p-s-"></span></a><div class="fragment"><p>Фильтры</p></div><a class="p-l-" name="part3772148" href="/you/angularjs-developer-guide/into-ru/trans/?page=89#part3772148"><span class="p-s-"></span></a><div class="fragment"><p>Фильтрами являются функции, которые преобразуют данный в читабельный для пользователя формат. Они важны так как удаляют ответственность форматирования логики приложения, кроме того упрощают логику приложения.</p></div><a class="p-l-" name="part3772149" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772149"><span class="p-s-"></span></a><div class="fragment"><p>myModule.filter(&#39;length&#39;, function() {</p></div><a class="p-l-" name="part3772150" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772150"><span class="p-s-"></span></a><div class="fragment"><p>return function(text){</p></div><a class="p-l-" name="part3772151" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772151"><span class="p-s-"></span></a><div class="fragment"><p>return (&#39;&#39;+(text||&#39;&#39;)).length;</p></div><a class="p-l-" name="part3772152" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772152"><span class="p-s-"></span></a><div class="fragment"><p>}</p></div><a class="p-l-" name="part3772153" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772153"><span class="p-s-"></span></a><div class="fragment"><p>});</p></div><a class="p-l-" name="part3772154" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772154"><span class="p-s-"></span></a><div class="fragment untranslated-"><p>global.xhr = function mockXHR() {};</p></div><a class="p-l-" name="part3772155" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772155"><span class="p-s-"></span></a><div class="fragment"><p>var length = $filter(&#39;length&#39;);</p></div><a class="p-l-" name="part3772156" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772156"><span class="p-s-"></span></a><div class="fragment"><p>expect(length(null)).toEqual(0);</p></div><a class="p-l-" name="part3772157" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772157"><span class="p-s-"></span></a><div class="fragment"><p>expect(length(&#39;abc&#39;)).toEqual(3);</p></div><a class="p-l-" name="part3772158" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772158"><span class="p-s-"></span></a><div class="fragment"><p>Директивы</p></div><a class="p-l-" name="part3772159" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772159"><span class="p-s-"></span></a><div class="fragment"><p>Директивы в Angular.js отвечают за обновление DOM при изменении состояния модели.</p></div><a class="p-l-" name="part3772160" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772160"><span class="p-s-"></span></a><div class="fragment"><p>Mock-объекты</p></div><a class="p-l-" name="part3772161" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772161"><span class="p-s-"></span></a><div class="fragment"><p>oue</p></div><a class="p-l-" name="part3772162" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772162"><span class="p-s-"></span></a><div class="fragment"><p>Глобальная изоляция</p></div><a class="p-l-" name="part3772163" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772163"><span class="p-s-"></span></a><div class="fragment"><p>oue</p></div><a class="p-l-" name="part3772164" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772164"><span class="p-s-"></span></a><div class="fragment"><p>Предпочтительный способ тестирования</p></div><a class="p-l-" name="part3772165" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772165"><span class="p-s-"></span></a><div class="fragment"><p>uo</p></div><a class="p-l-" name="part3772166" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772166"><span class="p-s-"></span></a><div class="fragment"><p>JavaScript тестер</p></div><a class="p-l-" name="part3772167" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772167"><span class="p-s-"></span></a><div class="fragment"><p>ou</p></div><a class="p-l-" name="part3772168" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772168"><span class="p-s-"></span></a><div class="fragment"><p>Jasmine</p></div><a class="p-l-" name="part3772169" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772169"><span class="p-s-"></span></a><div class="fragment"><p>ou</p></div><a class="p-l-" name="part3772170" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772170"><span class="p-s-"></span></a><div class="fragment"><p>Пример проекта</p></div><a class="p-l-" name="part3772171" href="/you/angularjs-developer-guide/into-ru/trans/?page=90#part3772171"><span class="p-s-"></span></a><div class="fragment"><p>uoe</p></div></div><div class="pager-arrows"><strong>Pages:</strong> <span class="arr-">
            &larr; <a href="?page=6">previous</a></span> <span class="key-">Ctrl</span> <span class="arr-"><a href="?page=8">next</a> &rarr;
            </span></div><div class="spager clearfix"><a href="?page=1">1</a> <a href="?page=2">2</a> <a href="?page=3">3</a> <a href="?page=4">4</a> <a href="?page=5">5</a> <a href="?page=6">6</a> <b>7</b> <a href="?page=8">8</a> <a href="?page=9">9</a> <a href="?page=10">10</a> <a href="?page=11">11</a> <a href="?page=12">12</a> <a href="?page=13">13</a> <a href="?page=14">14</a> <a href="?page=15">15</a> <a href="?page=16">16</a> <a href="?page=17">17</a> <a href="?page=18">18</a> <a href="?page=19">19</a> <a href="?page=20">20</a> <a href="?page=21">21</a> <a href="?page=22">22</a> <a href="?page=23">23</a> <a href="?page=24">24</a> <a href="?page=25">25</a> <a href="?page=26">26</a> <a href="?page=27">27</a> <a href="?page=28">28</a> <a href="?page=29">29</a></div><div class="content"><div class="download"><a href="/you/angularjs-developer-guide/into-ru/.txt">Download all in txt format</a></div></div><div class="content"><p><small>Original (English): <a href="http://docs.angularjs.org/guide/">AngularJS. Developer Guide</a></small></p><p><small>Translation: &copy;


            <a href="http://translatedby.com/tamtakoe/">tamtakoe</a>,

            <a href="http://translatedby.com/altbog/">altbog</a>,

            <a href="http://translatedby.com/alvas/">alvas</a>,

            <a href="http://translatedby.com/madhead_/">madhead_</a>,

            <a href="http://translatedby.com/DWand/">DWand</a>,

            <a href="http://translatedby.com/Chiuaua/">Chiuaua</a>,

            <a href="http://translatedby.com/Alexander_Kucherenko/">Alexander_Kucherenko</a>,

            <a href="http://translatedby.com/dublicator/">dublicator</a>,

            <a href="http://translatedby.com/aksenov/">aksenov</a>,

            <a href="http://translatedby.com/leshaogonkov/">leshaogonkov</a>,

            <a href="http://translatedby.com/iketari/">iketari</a>,

            <a href="http://translatedby.com/pegas/">pegas</a>,

            <a href="http://translatedby.com/jalners/">jalners</a>,

            <a href="http://translatedby.com/piumosso/">piumosso</a>,

            <a href="http://translatedby.com/fearmear/">Negodyaev</a>,

            <a href="http://translatedby.com/gcolor/">gcolor</a>,

            <a href="http://translatedby.com/semigradsky/">semigradsky</a>
          .
      </small></p><p><small>License: CC BY 3.0</small></p><p><a href="http://translatedby.com/you/angularjs-developer-guide/into-ru/"><img src="http://translatedby.com/appmedia/images/translated-by-crowd.gif" width="350" height="20" alt="translatedby.com crowd"/></a></p><div class="socialbookmarks"><h3>Like this translation?
<a class="a2a_dd" onmouseover="pageTracker._trackEvent('SocialShare','ShareButtonHover','9097')" href="http://www.addtoany.com/share_save">Share it or bookmark!</a></h3><script type="text/javascript">
a2a_show_title=1;
a2a_hide_embeds=0;
a2a_num_services=26;
a2a_prioritize=["facebook","twitter","friendfeed","google_buzz","delicious","google_bookmarks","digg","yahoo_bookmarks","slashdot","blogger_post","reddit","wordpress","tumblr","livejournal","myspace","orkut","evernote","stumbleupon","read_it_later","google_reader","instapaper","google_gmail","linkedin","hotmail","printfriendly","yahoo_buzz","windows_live_favorites","typepad_post","yahoo_mail","technorati_favorites","netvibes_share","technet","posterous","mister-wong","bebo","plurk","ping","diigo"];
</script><script type="text/javascript" src="http://static.addtoany.com/menu/locale/ru.js" charset="utf-8"></script><script type="text/javascript" src="http://static.addtoany.com/menu/page.js"></script></div></div></div></div><div class="right-column"><div class="pad-"><div class="related-materials"><h3>Similar translations</h3><dl class="translations-list"></dl></div><div style="margin-top: 30px"></div></div></div></div></div><div id="ads-footer"><div class="ads" style="margin-top: 20px; margin-left: -10px;" ><script type="text/javascript"><!--
google_ad_client = "pub-0927506772713286";
/* 728x90, создано 06.10.09 */
google_ad_slot = "4106552142";
google_ad_width = 728;
google_ad_height = 90;
//--></script><script type="text/javascript"
src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script></div></div></div><div id="footer"><div class="in- clearfix"><div style="float: left; margin-right: 20px"><p>
        βετα. A project of <a class="external" href="http://JetStyle.ru">JetStyle</a>.
      </p><div class="button-banner"><span class="inv"><![CDATA[<noindex>]]></span> <a href="http://partyconf.ru/values/" rel="nofollow" target="_blank" title="A Forest project"><img src="http://translatedby.com/appmedia/images/button_forest.png" alt="A Forest project" /></a> <span class="inv"><![CDATA[</noindex>]]></span></div></div><ul class="foot-links" style="float: left"><li><a href="/about/">About</a></li><li><span class="inv"><![CDATA[<noindex>]]></span><a rel="nofollow" href="http://clubs.ya.ru/4611686018427391272/">Our community</a><span class="inv"><![CDATA[</noindex>]]></span></li><!--li><a target="multitran" href="http://multitran.ru/">Словарь &laquo;Мультитран&raquo;</a></li--><li><a href="mailto:info@translatedby.com">Email us</a></li></ul><div id="liveinternet"><span class="inv"><![CDATA[<noindex>]]></span><!--LiveInternet logo--><a rel="nofollow" href="http://www.liveinternet.ru/click"
    target="_blank"><img src="http://counter.yadro.ru/logo?44.6"
    title="LiveInternet"
    alt="" border="0" width="31" height="31" /></a><!--/LiveInternet--><span class="inv"><![CDATA[</noindex>]]></span></div><div class="siteblock" id="feedback"><h3>Feedback</h3><form name="feedback941226" action="/feedback/" method="post" ajaxtarget="#feedback"><div><textarea rows="3" cols="30" style="width:100%; height: 3em" class="autogrow-after required ctrl-enter" name="somecrap" inside_hint="Feel free to ask questions and share thoughts" rel="#emailfield" onfocus="$('#emailfield').show();"></textarea></div><div id="emailfield" style="padding-right:4px; display: none"><input style="width:100%; display: block" type="text" inside_hint="Your email" name="email" value="" /></div><textarea rows="3" cols="30" name="message" class="hidden"></textarea><input type="submit" value="Send" /></form></div></div></div></div><script type="text/javascript">
    var DEBUG=false
    var MEDIA_URL='http://translatedby.com/appmedia/'
    var LANGUAGE_CODE='en'
    var AUTHENTICATION='anonymous'
  </script><script type="text/javascript" src="http://translatedby.com/appmedia/js/all.r1362919340.js" charset="utf-8"></script><!-- Yandex.Metrika counter --><script type="text/javascript">
(function (d, w, c) {
    (w[c] = w[c] || []).push(function() {
        try {
            w.yaCounter16484710 = new Ya.Metrika({id:16484710, enableAll: true});
        } catch(e) { }
    });

    var n = d.getElementsByTagName("script")[0],
        s = d.createElement("script"),
        f = function () { n.parentNode.insertBefore(s, n); };
    s.type = "text/javascript";
    s.async = true;
    s.src = (d.location.protocol == "https:" ? "https:" : "http:") + "//mc.yandex.ru/metrika/watch.js";

    if (w.opera == "[object Opera]") {
        d.addEventListener("DOMContentLoaded", f);
    } else { f(); }
})(document, window, "yandex_metrika_callbacks");
</script><noscript><div><img src="//mc.yandex.ru/watch/16484710" style="position:absolute; left:-9999px;" alt="" /></div></noscript><!-- /Yandex.Metrika counter --></body></html>

